//id: "org.mal-lang.mitreattacklang"
//version: "1.0.0"

category Person {
    asset User {
        | userRights
            ->  os.accountAccessRemoval,
                os.accountDiscovery,
                os.applicationWindowDiscovery,
                os._automatedCollection,
                os.bruteForce,
                os.compileAfterDelivery,
                os._credentialsInFiles,
                os._credentialsInRegistry,
                os._dataEncoding,
                os.domainDiscovery,
                os.domainGenerationAlgorithms,
                os.executionGuardrails,
                os.fileDeletion,
                os.fileAndDirectoryDiscovery,
                os.fileAndDirectoryPermissionsModification,
                os.graphicalUserInterface,
                os.hiddenFilesAndDirectories,
                os.inhibitSystemRecovery,
                os.internalSpearphishing,
                os.installRootCertificate,
                os.passwordPolicyDiscovery,
                os.permissionGroupsDiscovery,
                os.privateKeys,
                os.processInjection,
                os.runningProcessDiscovery,
                os.runtimeDataManipulation,
                os.redundantAccess,
                os.remoteSystemDiscovery,
                os.resourceHijacking,
                os.rootkit,
                os.scripting,
                os.softwareDiscovery,
                os.systemInformationDiscovery,
                os.systemNetworkConfigurationDiscovery,
                os.systemNetworkConnectionsDiscovery,
                os.systemOwnerOrUserDiscovery,
                os.systemShutdownOrReboot,
                os.storedDataManipulation,
                os.remoteFileCopy, 
                os.userCommandLineInterface,
                os.userDataDestruction, 
                os.userDataEncryptedForImpact,
                os.userDiskWiped,
                windows._bITSJobs,
                windows.bypassUserAccountControl,
                windows.changeDefaultFileAssociation,
                windows.cmstp,
                windows.compiledHTMLFile,
                windows._componentObjectModelAndDistributedCOM,
                windows.componentObjectModelHijacking,
                windows.controlPanelItems,
                windows.deobfuscateOrDecodeFilesOrInformation,
                windows._dLLSearchOrderHijacking,
                windows.domainTrustDiscovery,
                windows.dynamicDataExchange,  
                windows.emailStorageCollection,
                windows.executeMshta,
                windows.executionThroughAPI,
                windows.executionThroughModuleLoad,
                windows._fileSystemPermissionsWeakness,
                windows.forcedAuthentication,
                windows.groupPolicyModification,
                windows.indirectCommandExecution,
                windows.inputPrompt,
                windows.installUtil,
                windows.kerberoasting,
                windows.lLMNR_NBT_NS_PoisoningAndRelay,
                windows.logonScripts,
                windows.modifyRegistry,
                windows.networkShareConnectionRemoval,
                windows.networkShareDiscovery,
                windows.officeApplicationStartup,
                windows.parentPIDSpoofing,
                windows.pathInterception,
                windows.peripheralDeviceDiscovery,
                windows._powerShell,
                windows._powerShellProfile,
                windows.processDoppelganging,
                windows.processHollowing,
                windows.registryRunKeysOrStartupFolder,
                windows.regsvcsOrRegasm,
                windows.regsvr32,
                windows.rundll32,
                windows.screensaver,
                windows.shortcutModification,
                windows.signedBinaryProxyExecution,
                windows.signedScriptProxyExecution,
                windows.sIPAndTrustProviderHijacking,
                windows.systemServiceDiscovery,
                windows._taintSharedContent,
                windows.templateInjection,
                windows.timestomp,
                windows.trustedDeveloperUtilities,
                windows.userAccessTokenManipulation,
                windows.userSecuritySoftwareDiscovery,
                windows.userServiceStop,
                windows.videoCapture,
                windows.windowsManagementInstrumentation,
                windows.windowsRemoteManagement,
                windows.xslScriptProcessing,
                linux._bash_profileAndBashrc,
                linux._clearCommandHistory,
                linux.hISTCONTROL,
                linux.localJobScheduling,
                linux.portKnocking,
                linux.setuidAndSetgid,
                linux.spaceAfterFileName,
                linux.source,
                linux.sshHijacking,
                linux._sudo,
                linux._sudoCaching,
                linux._systemdService,
                linux.timestomp,
                linux.trap,
                macOS.appleScript,
                macOS._bash_profileAndBashrc,
                macOS._clearCommandHistory,
                macOS._dylibHijacking,
                macOS.elevatedExecutionWithPrompt,
                macOS.gatekeeperBypass,
                macOS.hiddenWindow,
                macOS.hISTCONTROL,
                macOS.inputPrompt,
                macOS.launchAgent,
                macOS.launchctl,
                macOS.lC_LOAD_DYLIB_Addition,
                macOS.lC_MAINHijacking,
                macOS.localJobScheduling,
                macOS.loginItem,
                macOS.logonScripts,
                macOS.plistModification,
                macOS.portKnocking,
                macOS.spaceAfterFileName,
                macOS.networkShareDiscovery,
                macOS.userSecuritySoftwareDiscovery,
                macOS.videoCapture,
                macOS.reopenedApplications,
                macOS.setuidAndSetgid,
                macOS.source,
                macOS.sshHijacking,
                macOS._sudo,
                macOS._sudoCaching,
                macOS.trap,
                computer.collectAudio,
                service._exploitationForCredentialAccess,
                service._exploitationForDefenseEvasion,
                service._exploitationForPrivilegeEscalation,
                service._exploitationOfRemoteServices,
                service.externalRemoteServices,
                service.remoteAccessTools,
                service.usertransmittedDataManipulation,
                thirdpartySoftware.stealApplicationAccessToken,
                thirdpartySoftware._useThirdpartySoftware,
                browser.credentialsFromWebBrowsers,
                browser.driveByCompromise,
                browser.installExtensions,
                browser.stealWebSessionCookie,
                internalNetwork.usertransmittedDataManipulation,
                externalNetwork.webService

        | userCredentials
            ->  userRights,
                os._validAccounts,  
                windows.outlookEmailCollection,
                internalNetwork.bypassAccessControl,
                internalNetwork.exchangeServerCollection,
                service.userRemoteServicesLogin

        | userInformation    

        & spearphishingLinkClicked [Uniform(1,20)]
            rationale: "20 % link https://faui1-files.cs.fau.de/filepool/publications/zina/2017-benenson-unpacking-spear-phishing.pdf"
            ->  userExecution,
                thirdpartySoftware.applicationAccessToken

        & spearphishingAttachmentDownload
            ->  userExecution   
        
        & userExecution
            ->  computer.infectedComputer,
                computer.infectedWindowsComputer,
                os.scripting

        | mediaInserted
            ->  _mediaInserted

        & _mediaInserted
            ->  removableMedia.dataExfiltrated     

        # userAccountManagement  
            info: "https://attack.mitre.org/mitigations/M1018/"     
            ->  os.disablingSecurityTools,
                windows.adminServiceStop,
                windows._bITSJobs,
                windows.fileSystemPermissionsWeakness,
                windows.indicatorBlocking,
                windows.manInTheBrowser,
                windows.modifyExistingService,
                windows.newService,
                windows.passTheHash,
                windows.passTheTicket,
                windows.pathInterception,
                windows.remoteDesktopProtocol,
                windows.sharedWebroot,
                windows.shortcutModification,
                windows.userServiceStop,
                windows.windowsManagementInstrumentation,
                windows.windowsManagementInstrumentationEventSubscription,
                windows.winlogonHelperDLL,
                linux.localJobScheduling,
                linux.systemdService,
                macOS._dylibHijacking,
                macOS.launchAgent,
                macOS.launchctl,
                macOS.launchDaemon,
                macOS.localJobScheduling,
                macOS.loginItem,
                macOS.rc_common,
                macOS._startupItems,
                service.userRemoteServicesLogin,
                service.adminRemoteServicesLogin,
                thirdpartySoftware.stealApplicationAccessToken,
                thirdpartySoftware._useThirdpartySoftware  

        # userTraining 
            info: "https://attack.mitre.org/mitigations/M1017/"        
            ->  browser.stealWebSessionCookie,      
                spearphishingAttachmentDownload, 
                spearphishingLinkClicked, 
                userExecution,
                _mediaInserted,
                os._credentialDumping,
                os.credentialsInFiles,
                os.twoFactorAuthenticationInterception, // remove smart cards when not in use
                windows.inputPrompt,
                windows.manInTheBrowser,
                windows.templateInjection,
                macOS.inputPrompt, 
                macOS.loginItem,
                macOS.reopenedApplications, 
                browser.browserExtensions,
                service.spearphishingViaService,
                thirdpartySoftware.useThirdpartySoftware,
                thirdpartySoftware.stealApplicationAccessToken       
    }

    asset RemoteDesktopUser extends User {
        | userRights
            +>  windows.remoteDesktopProtocol

        # multiFactorAuthentication
            ->  windows.remoteDesktopProtocol
    }     

    asset Administrator {
        | adminRights
            info: "Administrator is an actual account."
            ->  user.userRights,
                createUserAccount, 
                os.accountAccessRemoval,   
                os._automatedCollection,
                os.adminCommandLineInterface,
                os.adminDataDestruction,
                os.adminDataEncryptedForImpact,
                os.adminDiskWiped,
                os._credentialDumping,
                os._credentialsInFiles,
                os._credentialsInRegistry,
                os.detailedRunningProcessDiscovery,
                os.detailedRemoteSystemDiscovery,
                os.diskStructureWipe,
                os.fileAndDirectoryDiscovery,
                os.fileAndDirectoryPermissionsModification,
                os.firmwareCorruption, 
                os.graphicalUserInterface,  
                os.inhibitSystemRecovery, 
                os.inputCapture,
                os.installRootCertificate,            
                os.networkServiceScan,
                os.networkSniffing,
                os.redundantAccess,
                os.resourceHijacking,
                os.runtimeDataManipulation,
                os.softwareDiscovery,
                os.storedDataManipulation,
                os.systemNetworkConnectionsDiscovery,
                os.systemOwnerOrUserDiscovery,
                os.systemShutdownOrReboot,
                os.twoFactorAuthenticationInterception,
                service.admintransmittedDataManipulation,
                service.applicationDeploymentSystems,
                thirdpartySoftware._useThirdpartySoftware,
                internalNetwork.admintransmittedDataManipulation,
                internalNetwork.bypassAccessControl
             
        | adminCredentials
            ->  adminRights,
                os._validAccounts,
                service.adminRemoteServicesLogin,
                internalNetwork.bypassAccessControl
            
        & createUserAccount 
            ->  os.persistence          
        
        # multiFactorAuthentication
            info: "https://attack.mitre.org/mitigations/M1032/"
            ->  createUserAccount

        # privilegedAccountManagement
            info: "https://attack.mitre.org/mitigations/M1026/"
            ->  createUserAccount,
                os._credentialDumping,
                os.firmwareCorruption,
                windows.modifyRegistry,
                windows.passTheTicket,
                windows.powerShell,
                windows.remoteDesktopProtocol,
                windows.serviceExecution,
                windows.serverSoftwareComponent,
                windows.signedBinaryProxyExecution, 
                windows.sharedWebroot,  
                windows.systemFirmware,
                windows.userAccessTokenManipulation,
                windows.adminAccessTokenManipulation,
                windows.windowsAdminShares,
                windows.windowsManagementInstrumentation,
                windows.windowsManagementInstrumentationEventSubscription,
                windows.windowsRemoteManagement,
                linux.kernelModulesAndExtensions,
                linux.serverSoftwareComponent,
                linux.sudo,
                linux.sudoCaching,
                linux.systemdService,
                macOS.kernelModulesAndExtensions,
                macOS.lC_MAINHijacking,
                macOS.sudo,
                macOS.sudoCaching,
                service.applicationDeploymentSystems,
                service._exploitationOfRemoteServices,
                thirdpartySoftware._useThirdpartySoftware, // grant access to application deployment systems only to a limited number of authorized administrators
                internalNetwork.exploitPublicFacingApplication,
                externalNetwork.exploitPublicFacingApplication // try (internalNetwork /\ externalNetwork).exploitPublicFacingApplication with higher version of MAL compiler
    }
   
    asset WindowsAdmin extends Administrator {
        | adminRights
            info: "WindowsAdmin account is equivalent to Unix Root account."
            +>  accountManipulation,
                windowsWindowsAdmin.accessibilityFeatures,
                windowsWindowsAdmin.adminAccessTokenManipulation,
                windowsWindowsAdmin.adminSecuritySoftwareDiscovery,
                windowsWindowsAdmin.adminServiceStop,
                windowsWindowsAdmin._appCertDLLs,
                windowsWindowsAdmin.appInitDLLs,
                windowsWindowsAdmin._applicationShimming,
                windowsWindowsAdmin.authenticationPackage,
                windowsWindowsAdmin._bITSJobs,
                windowsWindowsAdmin.bootkit,                                          
                windowsWindowsAdmin.bypassUserAccountControl,
                windowsWindowsAdmin.changeDefaultFileAssociation,
                windowsWindowsAdmin.componentObjectModelAndDistributedCOM,
                windowsWindowsAdmin.controlPanelItems,
                windowsWindowsAdmin.createService,
                windowsWindowsAdmin.dCShadow,
                windowsWindowsAdmin.distributedComponentObjectModel,
                windowsWindowsAdmin._dLLSearchOrderHijacking,
                windowsWindowsAdmin.executionThroughAPI,
                windowsWindowsAdmin.executeService,
                windowsWindowsAdmin.extraWindowMemoryInjection,
                windowsWindowsAdmin.fileSystemLogicalOffsets,
                windowsWindowsAdmin._fileSystemPermissionsWeakness,
                windowsWindowsAdmin.groupPolicyModification,
                windowsWindowsAdmin.hooking,
                windowsWindowsAdmin.hypervisor,
                windowsWindowsAdmin.imageFileExecutionOptionsInjection,
                windowsWindowsAdmin.lSASS_Driver,
                windowsWindowsAdmin.manInTheBrowser,
                windowsWindowsAdmin.modifyExistingService,
                windowsWindowsAdmin.modifyRegistry,
                windowsWindowsAdmin.netshHelperDLL,
                windowsWindowsAdmin.networkShareConnectionRemoval,
                windowsWindowsAdmin.newService,
                windowsWindowsAdmin.officeApplicationStartup,
                windowsWindowsAdmin.parentPIDSpoofing,
                windowsWindowsAdmin.passwordFilterDLL,
                windowsWindowsAdmin.pathInterception,
                windowsWindowsAdmin.portMonitors,
                windowsWindowsAdmin._powerShell,
                windowsWindowsAdmin._powerShellProfile,
                windowsWindowsAdmin.processDoppelganging,
                windowsWindowsAdmin.queryRegistery,
                windowsWindowsAdmin.registryRunKeysOrStartupFolder,
                windowsWindowsAdmin.regsvcsOrRegasm,
                windowsWindowsAdmin.regsvr32,
                windowsWindowsAdmin.securitySupportProvider,
                windowsWindowsAdmin.serverSoftwareComponent,
                windowsWindowsAdmin.serviceExecution,
                windowsWindowsAdmin.serviceRegistryPermissionsWeakness,
                windowsWindowsAdmin.shortcutModification,
                windowsWindowsAdmin.sIDHistoryInjection,
                windowsWindowsAdmin.scheduledTask,
                windowsWindowsAdmin.systemFirmware,
                windowsWindowsAdmin.systemServiceDiscovery,
                windowsWindowsAdmin.timeProviders,
                windowsWindowsAdmin.timestomp,
                windowsWindowsAdmin.windowsAdminShares,
                windowsWindowsAdmin.windowsManagementInstrumentation,
                windowsWindowsAdmin.windowsManagementInstrumentationEventSubscription,
                windowsWindowsAdmin.windowsRemoteManagement,
                windowsWindowsAdmin.winlogonHelperDLL

        | adminCredentials

        & accountManipulation
            ->  user.userCredentials

        # multiFactorAuthentication
            +>  accountManipulation     

        | bypassWindowsUserAccountControl     
    }
    
    asset Root extends Administrator {
        | adminRights
            info: "Unix Root account is equivalent to WindowsAdmin account."
            +>  linux.kernelModulesAndExtensions,
                linux.serverSoftwareComponent,
                linux._systemdService,
                linux.sshHijacking,
                linux.timestomp,
                linux.trap,
                linux._bash_profileAndBashrc,
                linux.bootkit,
                linux.localJobScheduling,
                macOS.adminSecuritySoftwareDiscovery,
                macOS._bash_profileAndBashrc,
                macOS.emond,
                macOS.keychainCollection,
                macOS.localJobScheduling,
                macOS.gatekeeperBypass,
                macOS.hiddenUsers,
                macOS.kernelModulesAndExtensions,
                macOS.launchAgent,
                macOS.launchctl,
                macOS.launchDaemon,
                macOS.plistModification,
                macOS.rc_common,
                macOS.securitydMemory,
                macOS.sshHijacking,
                macOS._startupItems,
                macOS.trap
    }
    
    asset SYSTEM {
        | systemRights
            info: "A SYSTEM is a security principal. If the computer is joined to a domain, processes running as SYSTEM can access domain servers in the context of the computer's domain account. Processes running as Administrator have no access to domain computers."
            ->  windows._appCertDLLs,
                windows._bITSJobs,
                windows.changeDefaultFileAssociation,
                windows._componentObjectModelAndDistributedCOM,
                windows.controlPanelItems,
                windows.distributedComponentObjectModel,
                windows._dLLSearchOrderHijacking,
                windows.executionThroughAPI,
                windows.extraWindowMemoryInjection,
                windows.hooking,
                windows.hypervisor,
                windows.imageFileExecutionOptionsInjection,
                windows.lSASS_Driver,
                windows.manInTheBrowser,
                windows.modifyExistingService,
                windows.modifyRegistry,
                windows.netshHelperDLL,
                windows.passwordFilterDLL,
                windows.pathInterception,
                windows.portMonitors,
                windows.processDoppelganging,
                windows.serverSoftwareComponent,
                windows.serviceExecution,
                windows.serviceRegistryPermissionsWeakness,
                windows.sIDHistoryInjection,
                windows.sIPAndTrustProviderHijacking,
                windows.systemServiceDiscovery,
                windows.systemServiceStop,
                windows.timeProviders,
                windows.timestomp,
                windows.windowsManagementInstrumentationEventSubscription,
                windows.winlogonHelperDLL,
                os.accountAccessRemoval,
                os._credentialDumping,
                os._credentialsInFiles,
                os.fileAndDirectoryDiscovery,
                os.fileAndDirectoryPermissionsModification,
                os.firmwareCorruption,
                os.graphicalUserInterface,
                os.inhibitSystemRecovery,
                os.inputCapture,
                os.networkSniffing,
                os.redundantAccess,
                os.rootkit,
                os.runtimeDataManipulation,
                os.systemDataDestruction,
                os.systemDataEncryptedForImpact,
                os.systemShutdownOrReboot,
                os.storedDataManipulation,
                os.twoFactorAuthenticationInterception,
                thirdpartySoftware._useThirdpartySoftware

        | systemCredentials
            ->  systemRights
    }
}

category Software {
    asset Service {
        & applicationDeploymentSystems  

        | applicationVulnerability
            info: "The use of software, data, or commands to take advantage of a weakness in an Internet-facing computer system or program in order to cause unintended or unanticipated behavior."
            ->  internalNetwork.exploitPublicFacingApplication,
                externalNetwork.exploitPublicFacingApplication

        | blockUserAccess  

        | serviceInformation 

        & userRemoteServicesLogin
            info: "An adversary may use Valid Accounts to log into a service specifically designed to accept remote connections."
            ->  c2Server.c2Connected 

        & adminRemoteServicesLogin
            info: "An adversary may use Valid Accounts to log into a service specifically designed to accept remote connections."
            ->  c2Server.c2Connected 

        & usertransmittedDataManipulation
            info: "By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making."

        & admintransmittedDataManipulation
            info: "By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making."

        | informationRepositories
            ->  os.dataCollected

        | remoteAccessTools
            ->  internalNetwork.c2Connexion

        | serviceExhaustionFlood

        & spearphishingViaService
            info: "Adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services."
            ->  browser.spearphishingAttachment, 
                browser.spearphishingLink

        & supplyChainCompromise
            info: "Supply chain compromise is the manipulation of products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise."
            ->  os.compromisedSystems

        & exploitationForClientExecution
            info: "Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution."
            ->  os.executeCode            

        | _exploitationForCredentialAccess
            ->  exploitationForCredentialAccess

        & exploitationForCredentialAccess
            info: "Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained."
            ->  os.executeCode,
                _exploitationForPrivilegeEscalation             

        | _exploitationForDefenseEvasion // end step of securoty software discovery
            ->  exploitationForDefenseEvasion

        & exploitationForDefenseEvasion
            ->  os.bypassAntivirus,
                os.bypassSystemAccessControls

        | _exploitationForPrivilegeEscalation
            ->  exploitationForPrivilegeEscalation

        & exploitationForPrivilegeEscalation
            info: "This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable."
            ->  administrator.adminRights,
                system.systemRights,
                thirdpartySoftware._useThirdpartySoftware

        & _exploitationOfRemoteServices
            info: "An adversary may need to determine if the remote system is in a vulnerable state, which may be done through Network Service Scanning or other Discovery methods."
            ->  exploitationOfRemoteServices

        & exploitationOfRemoteServices
            ->  _exploitationForPrivilegeEscalation // leads to Exploitation for Privilege Escalation attack

        & externalRemoteServices
            info: "Adversaries may use remote services to initially access and/or persist within a network."
            ->  internalNetwork.persistence,
                internalNetwork.remoteAccess

        # applicationIsolationAndSandboxing
            info: "https://attack.mitre.org/mitigations/M1048/"
            ->  exploitationForClientExecution,
                exploitationForCredentialAccess,
                exploitationForDefenseEvasion,
                exploitationForPrivilegeEscalation,
                exploitationOfRemoteServices,
                internalNetwork.exploitPublicFacingApplication,
                externalNetwork.exploitPublicFacingApplication

        # applicationVetting
            info: "https://attack.mitre.org/mitigations/M1005/"       
            ->  os.obfuscatedFilesOrInformation

        # encryptSensitiveInformation
            info: "https://attack.mitre.org/mitigations/M1041/"
            ->  usertransmittedDataManipulation,
                admintransmittedDataManipulation

        # executionPrevention
            info: "https://attack.mitre.org/mitigations/M1038/"
            ->  remoteAccessTools

        # threatIntelligenceProgram
            info: "https://attack.mitre.org/mitigations/M1019/"
            ->  exploitationForCredentialAccess,
                exploitationForPrivilegeEscalation,
                exploitationOfRemoteServices  

        # updateSoftware
            info: "https://attack.mitre.org/mitigations/M1051/"
            ->  exploitationForDefenseEvasion,
                exploitationForPrivilegeEscalation,
                supplyChainCompromise,
                internalNetwork.remoteAccess,
                internalNetwork.exploitPublicFacingApplication,
                externalNetwork.exploitPublicFacingApplication,
                windows.systemFirmware,
                windows.dLLSideLoading          
    }

    asset ThirdpartySoftware extends Service {  
        & applicationAccessToken
            info: "Adversaries may use application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users and used in lieu of login credentials."
            ->  bypassLogonCredentials,
                bypassMultiFactorAuthentication

        | bypassLogonCredentials

        | bypassMultiFactorAuthentication  

        & stealApplicationAccessToken
            info: "Adversaries may gain access to and use third-party application deployment systems installed within an enterprise network." 
            ->  browser.spearphishingLink, //  send a link through Spearphishing Link to the target user to entice them to grant access to the application
                applicationAccessToken

        & trustedRelationship
            info: "Access through trusted third party relationship exploits an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network." 
            ->  os._validAccounts // Valid Accounts used by the other party for access to internal network systems may be compromised

        & _useThirdpartySoftware 
            info: "Adversaries may gain access to and use third-party application deployment systems installed within an enterprise network." 
            ->  useThirdpartySoftware

        & useThirdpartySoftware
            ->  os.executeCode 
    }

    asset VideoCallApplication extends Service { 
        | _collectVideo
            ->  computer.collectVideo
    }
    
    abstractAsset OS {   
        | accountAccessRemoval
            info: "Adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users. Accounts may be deleted, locked, or manipulated (ex: changed credentials) to remove access to accounts. Adversaries may also subsequently log off and/or reboot boxes to set malicious changes into place."

        & applicationDeploymentSoftware
            info: "Access to a network-wide or enterprise-wide software deployment system enables an adversary to have remote code execution on all systems that are connected to such a system."
            ->  executeCode

        | applicationExhaustionFlood   
            ->  service.blockUserAccess 

        | infectedOS
            ->  clipboardData,
                dataFromInformationRepositories,
                computer.infectedComputer

        & clipboardData
            ->  administrator.adminCredentials,
                user.userCredentials

        & accountDiscovery
            info: "get account names and information"

        & domainDiscovery
            info: "get domain names and information"

        | domainGenerationAlgorithms 
            info: "Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination for command and control traffic rather than relying on a list of static IP addresses or domains." 
            ->  fallbackChannels, // leads to Fallback Channels attack
                c2Server.communicate,
                c2Server.generateDomainNames

        | compromisedSystems // with probability
            ->  privateKeys,
                systemNetworkConnectionsDiscovery,
                browser.installExtensions,
                removableMedia.infectedMedia,
                thirdpartySoftware.trustedRelationship

        & connectionProxy
            info: "Adversaries may use a connection proxy to direct network traffic between systems or act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure."
            ->  bypassLogAnalysis,
                c2Server.c2Connected,
                externalNetwork.bypassFirewall,
                internalNetwork.bypassFirewall

        & binaryPadding
            ->  bypassSignatureBasedDetection,
                bypassAntivirus

        & applicationWindowDiscovery
            info: "get a listing of opened application windows"

        & runningProcessDiscovery
            info: "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software running on systems within the network."
            ->  processInjection

        & detailedRunningProcessDiscovery
            info: "Adversaries with admin rights may get better process ownership details"

        | collectHashInformation

        & commonlyUsedPortsConnection
            info: "Adversaries may communicate over a commonly used port to bypass firewalls or network detection systems and to blend with normal network activity to avoid more detailed inspection."
            ->  c2Server.c2Connected,
                firewall._bypassFirewall,
                externalNetwork.bypassNetworkIntrusionDetection,
                internalNetwork.bypassNetworkIntrusionDetection

        | compileAfterDelivery     
            info: "Adversaries may attempt to make payloads difficult to discover and analyze by delivering files to victims as uncompiled code. Source code payloads may also be encrypted, encoded, and/or embedded within other files, such as those delivered as a Spearphishing Attachment."
            ->  browser.spearphishingAttachment,
                bypassStaticFileAnalysis,
                bypassBinaryAnalysis,
                bypassAntivirus,
                bypassHostIntrusionPrevention,
                bypassSignatureBasedDetection

        & connectionProxy
            info: "Adversaries could use trust relationships to manage command and control communications, to reduce the number of simultaneous outbound network connections, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between victims to avoid suspicion."
            ->  c2Server.c2Connected           

        & _credentialDumping
            ->  credentialDumping,
                systemOwnerOrUserDiscovery

        & credentialDumping
            info: "Credential dumping is the process of obtaining account login and password information, normally in the form of a hash or a clear text password, from the operating system and software."
            ->  collectHashInformation

        | _credentialsInFiles
            ->  credentialsInFiles

        & credentialsInFiles
            ->  user.userCredentials,
                administrator.adminCredentials,
                system.systemCredentials   

        & customCryptographicProtocol
            info: "Adversaries may use a custom cryptographic protocol or algorithm to hide command and control traffic."
            ->  c2Server.c2Connected  

        & customCommandAndControlProtocol
            info: "Adversaries may communicate using a custom command and control protocol instead of encapsulating commands/data in an existing Standard Application Layer Protocol."
            ->  c2Server.c2Connected

        | _dataEncoding
            info: "Use of data encoding may be to adhere to existing protocol specifications and includes use of ASCII, Unicode, Base64, MIME, UTF-8, or other binary-to-text and character encoding systems."
            ->  dataEncoding

        & dataEncoding
            ->  c2Server.communicate
          
        & disablingSecurityTools
            info: "Adversaries may disable security tools to avoid possible detection of their tools and activities."
            ->  bypassFileMonitoring,
                bypassHostIntrusionPrevention,
                bypassSignatureBasedDetection,
                bypassLogAnalysis,
                bypassAntivirus

        | domainFronting
            info: "Domain fronting takes advantage of routing schemes in Content Delivery Networks (CDNs) and other services which host multiple domains to obfuscate the intended destination of HTTPS traffic or traffic tunneled through HTTPS."
            ->  internalNetwork.obfuscateNetworkTraffic,
                externalNetwork.obfuscateNetworkTraffic          
                 
        | executeCode 
            ->  computer.infectedComputer,
                internalNetwork.remoteAccess

        & endpointDenialOfService 
            info: "Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users."
            ->  applicationExhaustionFlood,
                osExhaustionFlood,
                service.serviceExhaustionFlood

        & executionGuardrails
            info: "Adversaries may use guardrails and environmental keying to help protect their TTPs and evade detection."
            ->  bypassAntivirus, 
                bypassHostForensicAnalysis, 
                bypassSignatureBasedDetection,  
                bypassStaticFileAnalysis       

        & exfiltrationOverOtherNetworkMedium 
            info: "Adversaries could choose to do exfiltration over a WiFi connection, modem, cellular data connection, Bluetooth, or another radio frequency (RF) channel if they have sufficient access or proximity, and the connection might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network."     
            ->  otherNetworkMedium.transmit

        | fallbackChannels  
            info: "Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds." 
            ->  c2Server.communicate  

        & firmwareCorruption
            info: "Adversaries may overwrite or corrupt the flash memory contents of system BIOS or other firmware in devices attached to a system in order to render them inoperable or unable to boot." 

        | hiddenFilesAndDirectories
            info: "To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a 'hidden' file. Adversaries can use this to their advantage to hide files and folders anywhere on the system for persistence and evading a typical user or system analysis that does not incorporate investigation of hidden files."
            ->  bypassHostForensicAnalysis,
                persistence

        | indicatorRemovalFromTools
            info: "An adversary may be able to modify the tool by removing the indicator that is no longer detected by the target's defensive systems."
            ->  bypassHostIntrusionPrevention,
                bypassLogAnalysis,
                bypassAntivirus

        & indicatorRemovalOnHost
            info: "Adversaries may delete or alter generated artifacts on a host system, including logs and potentially captured files such as quarantined malware."
            ->  bypassHostIntrusionPrevention,
                bypassLogAnalysis,
                bypassAntivirus    

        | inputCapture
            info: "Adversaries can use methods of capturing user input for obtaining credentials for Valid Accounts and information Collection that include keylogging and user input field interception."
            ->  _validAccounts,
                user.userCredentials 

        & installRootCertificate
            info: "Installation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system."
            ->  bypassDigitalCertificateValidation  

        | internalSpearphishing
            info: "Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment." 
            ->  browser.spearphishingLink,
                browser.spearphishingAttachment,
                inputCapture // capture credentials through Input Capture on sites that mimic email login interfaces 

        & masquerading
            info: "Masquerading occurs when the name or location of an executable, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation."
            ->  bypassFileOrPathWhitelisting

        & multibandCommunication
            info: "Some adversaries may split communications between different protocols. There could be one protocol for inbound command and control and another for outbound data, allowing it to bypass certain firewall restrictions."
            ->  c2Server.c2Connected,
                externalNetwork.bypassFirewall,
                internalNetwork.bypassFirewall

        & multiHopProxy
            info: "To disguise the source of malicious traffic, adversaries may chain together multiple proxies."
            ->  c2Server.c2Connected

        & multilayerEncryption
            info: "An adversary performs C2 communications using multiple layers of encryption, typically (but not exclusively) tunneling a custom encryption scheme within a protocol encryption scheme such as HTTPS or SMTPS."
            ->  c2Server.c2Connected

        & multiStageChannels
            info: "Adversaries may create multiple stages for command and control that are employed under different conditions or for certain functions."
            ->  c2Server.c2Connected,
                fallbackChannels // The loader may also have backup first-stage callbacks or Fallback Channels in case the original first-stage communication path is discovered and blocked.

        & networkDenialOfService
            info: "Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users."
            ->  applicationExhaustionFlood,
                service.serviceExhaustionFlood
 
        & networkSniffing
            info: "An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data."
            ->  user.userCredentials,
                windows.lLMNR_NBT_NS_PoisoningAndRelay

        & obfuscatedFilesOrInformation
            info: "Adversaries may use Obfuscated Files or Information to hide artifacts of an intrusion from analysis."     
            ->  windows.deobfuscateOrDecodeFilesOrInformation, // leads to Deobfuscate/Decode Files or Information attack
                bypassHostForensicAnalysis,
                bypassSignatureBasedDetection,
                bypassHostIntrusionPrevention,
                bypassApplicationWhitelisting,
                bypassProcessWhitelisting,
                bypassLogAnalysis,
                bypassFileOrPathWhitelisting      

        & privateKeys
            info: "Adversaries may gather private keys from compromised systems for use in authenticating to Remote Services like SSH or for use in decrypting other collected files such as email. Private keys should require a password or passphrase for operation, so an adversary may also use Input Capture for keylogging or attempt to Brute Force the passphrase off-line."
            ->  service.userRemoteServicesLogin,
                inputCapture,
                bruteForce  

        | resourceHijacking
            info: "Adversaries may consume enough system resources to negatively impact and/or cause affected machines to become unresponsive."
            ->  computer.unresponsive  

        & communicationThroughRemovableMedia

        & remoteSystemDiscovery
            info: "Adversaries will likely attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system."

        & detailedRemoteSystemDiscovery
            info: "Adversaries with admin rights may get better details of the hosts enumerated"
        
        & adminCommandLineInterface
            ->  dataCollected, // entrypoints of attacks that can be done with command line interface under admin rights
                obfuscatedFilesOrInformation // obfuscate commands executed from payloads or directly via a Command-Line Interface 
        
        & userCommandLineInterface
            ->  dataCollected, // entrypoints of attacks that can be done with command line interface under user rights
                obfuscatedFilesOrInformation // obfuscate commands executed from payloads or directly via a Command-Line Interface

        | fileAndDirectoryPermissionsModification
            info: "File and directory permissions are commonly managed by discretionary access control lists (DACLs) specified by the file or directory owner."
            ->  bypassFileSystemAccessControls,
                windows.accessibilityFeatures, // leads to Accessibility Features attack
                windows.logonScripts, //leads to Logon Scripts attack
                macOS.logonScripts // leads to Logon Scripts attack

        | graphicalUserInterface
            info: "Adversaries may use a system's GUI during an operation, commonly through a remote interactive session such as Remote Desktop Protocol, to search for information and execute files via mouse double-click events, the Windows Run command, or other potentially difficult to monitor interactions."
            ->  windows.remoteDesktopProtocol // leads to Remote Desktop Protocol attack on Windows

        | softwareDiscovery
            info: "Adversaries may attempt to get a listing of non-security related software that is installed on the system."

        | systemAccess

        & systemInformationDiscovery
            info: "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture."
            ->  processInjection,
                systemNetworkConfigurationDiscovery,
                systemNetworkConnectionsDiscovery

        | systemNetworkConnectionsDiscovery
            info: "Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network."

        | systemOwnerOrUserDiscovery
            info: "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system."
            ->  user.userInformation

        | systemShutdownOrReboot
            info: "Adversaries may shutdown/reboot systems to interrupt access to, or aid in the destruction of, those systems."

        | osExhaustionFlood

        & processInjection
            info: "Process injection is a method of executing arbitrary code in the address space of a separate live process. It can be used for Defense Evasion and Privilege Escalation."
            ->  administrator.adminRights,
                bypassAntivirus,
                bypassProcessWhitelisting

        & redundantAccess
            info: "Adversaries may use more than one remote access tool with varying command and control protocols as a hedge against detection. Adversaries may also attempt to gain access to Valid Accounts to use External Remote Services such as external VPNs as a way to maintain access despite interruptions to remote access tools deployed within a target network."
            ->  _validAccounts,
                bypassAntivirus,
                externalNetwork.bypassNetworkIntrusionDetection,
                internalNetwork.bypassNetworkIntrusionDetection 

        | rootkit
            info: "Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components."
            ->  modifyAPICalls, 
                bypassAntivirus,
                bypassFileMonitoring,
                bypassProcessWhitelisting,
                bypassSignatureBasedDetection, 
                bypassHostIntrusionPrevention,
                bypassSystemAccessControls,
                bypassFileOrPathWhitelisting,
                windows.hooking, // leads to hooking attack
                windows.hypervisor, // leads to hypervisor attack
                windows.systemFirmware // leads to system firmware attack

        & runtimeDataManipulation
            info: "By manipulating runtime data, adversaries may attempt to affect a business process, organizational understanding, and decision making."

        & standardCryptographicProtocol
            info: "Adversaries may explicitly employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol."
            ->  c2Server.c2Connected             

        & standardNonApplicationLayerProtocol
            info: "Use of a standard non-application layer protocol for communication between host and C2 server or among infected hosts within a network."
            ->  c2Server.communicate        

        | systemNetworkConfigurationDiscovery
            info: "Adversaries will likely look for details about the network configuration and settings of systems they access or through information discovery of remote systems."

        & twoFactorAuthenticationInterception
            info: "Adversaries may target authentication mechanisms, such as smart cards, to gain access to systems, services, and network resources."
            ->  connectionProxy

        | modifyAPICalls                

        | bypassAntivirus

        | bypassAutorunsAnalysis

        | bypassApplicationWhitelisting

        | bypassBinaryAnalysis

        | bypassDefensiveNetworkServiceScanning

        | bypassDigitalCertificateValidation   

        | bypassFileMonitoring

        | bypassFileOrPathWhitelisting

        | bypassFileSystemAccessControls

        | bypassHeuristicDetection

        | bypassHostForensicAnalysis
        
        | bypassHostIntrusionPrevention

        | bypassProcessWhitelisting

        | bypassSystemAccessControls

        | bypassLogAnalysis        
        
        | bypassSignatureBasedDetection

        | bypassStaticFileAnalysis

        | bypassUserModeSignatureValidation
        
        | passwordPolicyDiscovery
            ->  bruteForceWithPasswordPolicy

        & bruteForceWithPasswordPolicy
            ->  user.userCredentials // the probability distribution should be so that it has higher chance of success than the bruteforce attack

        & bruteForce
            info: "Adversaries may use brute force techniques to attempt access to accounts when passwords are unknown or when password hashes are obtained."
            ->  user.userCredentials           

        & antivirusCheck
            ->  executeCode,
                service.exploitationForClientExecution

        | persistence

        & scripting
            info: "Adversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual."
            ->  _automatedCollection,
                browser.spearphishingAttachment, // scripts can be embedded inside Office documents as macros that can be set to execute when files used in Spearphishing Attachment
                service.exploitationForClientExecution, // malicious embedded macros are an alternative means of execution than software exploitation through Exploitation for Client Execution
                windows.virtualizationOrSandboxEvasion,
                windows.templateInjection // leads to Template Injection attack

        | sSHCredentialInterception

        & storedDataManipulation
            info: "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity."    

        & uncommonlyUsedPortsConnection
            info: "Adversaries may conduct C2 communications over a non-standard port to bypass proxies and firewalls that have been improperly configured."
            ->  c2Server.c2Connected,
                firewall._bypassFirewall,
                internalNetwork.bypassProxies 

        | _validAccounts
            ->  validAccounts    

        & validAccounts
            info: "Adversaries may steal the credentials of a specific user or service account using Credential Access techniques or capture credentials earlier in their reconnaissance process through social engineering for means of gaining Initial Access."
            ->  service.userRemoteServicesLogin,
                service.adminRemoteServicesLogin,
                service.externalRemoteServices,
                internalNetwork.bypassFirewall,
                internalNetwork.bypassNetworkIntrusionDetection,
                bypassHostIntrusionPrevention,
                bypassProcessWhitelisting,
                bypassSystemAccessControls,
                bypassAntivirus  

        | _credentialsInRegistry
            ->  credentialsInRegistry

        & credentialsInRegistry
            ->  user.userCredentials,
                administrator.adminCredentials 

        & fileDeletion
            info: "Adversaries may remove traces (files) over the course of an intrusion to keep their footprint low or remove them at the end as part of the post-intrusion cleanup process"
            ->  bypassHostForensicAnalysis

        | fileAndDirectoryDiscovery
            info: "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system."
            ->  _automatedCollection
        
        & diskStructureWipe
            info: "Adversaries may corrupt or wipe the disk data structures on hard drive necessary to boot systems; targeting specific critical systems as well as a large number of systems in a network to interrupt availability to system and network resources."
            ->  systemShutdownOrReboot

        & userDiskWiped
            info: "Instead of wiping specific disk structures or files, adversaries with destructive intent may wipe arbitrary portions of disk content."

        & adminDiskWiped

        & remoteFileCopy
            info: "Files may be copied from one system to another to stage adversary tools or other files over the course of an operation."
            ->  windows.windowsAdminShares, // Adversaries may also copy files laterally between internal victim systems to support Lateral Movement with remote Execution using inherent file sharing protocols such as file sharing over SMB to connected network shares or with authenticated connections with Windows Admin Shares or Remote Desktop Protocol.
                windows.remoteDesktopProtocol,
                user.userExecution, // leads to file execution attacks
                _automatedCollection // combined with Remote File Copy attack
        
        & sensitiveDataCollected
            ->  dataCompressed,
                computer.exfiltrationOverPhysicalMedium,
                dataSizedTransfer,
                exfiltrationOverAternativeProtocol,
                scheduledExfiltration,
                exfiltrationOverC2,
                automatedExfiltration,
                dataEncrypted, 
                dataStaged    

        & dataCollected
            ->  dataCompressed,
                computer.exfiltrationOverPhysicalMedium,
                exfiltrationOverAternativeProtocol,
                scheduledExfiltration,
                exfiltrationOverC2,
                dataEncrypted,
                dataStaged,
                automatedExfiltration,
                dataSizedTransfer

        | dataEncrypted
            info: "Data is encrypted before being exfiltrated in order to hide the information that is being exfiltrated from detection or to make the exfiltration less conspicuous upon inspection by a defender."
            ->  computer.exfiltrationOverPhysicalMedium,
                exfiltrationOverAternativeProtocol,
                scheduledExfiltration,
                exfiltrationOverC2,
                automatedExfiltration

        | dataSizedTransfer
            info: "An adversary may exfiltrate data in fixed size chunks instead of whole files or limit packet sizes below certain thresholds. This approach may be used to avoid triggering network data transfer threshold alerts."
            -> c2Server.dataExfiltrated  

        | dataStaged
            info: "Collected data is staged in a central location or directory prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as Data Compressed or Data Encrypted."
            ->  computer.exfiltrationOverPhysicalMedium, // leads to exfiltration attacks
                exfiltrationOverAternativeProtocol,
                scheduledExfiltration,
                exfiltrationOverC2,
                dataCompressed,
                dataEncrypted
        
        & userDataDestruction
            ->  inhibitSystemRecovery // disable or delete system recovery features to augment the effects

        & adminDataDestruction
            ->  inhibitSystemRecovery  

        & systemDataDestruction
            ->  inhibitSystemRecovery  

        & userDataEncryptedForImpact
            info: "Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. To maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like Valid Accounts, Credential Dumping, and Windows Admin Shares."
            ->  _validAccounts,
                _credentialDumping,
                inhibitSystemRecovery,
                windows.windowsAdminShares

        & adminDataEncryptedForImpact
            info: "Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. To maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like Valid Accounts, Credential Dumping, and Windows Admin Shares."
            ->  _validAccounts,
                _credentialDumping,
                inhibitSystemRecovery,
                windows.windowsAdminShares

        & systemDataEncryptedForImpact
            info: "Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. To maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like Valid Accounts, Credential Dumping, and Windows Admin Shares."
            ->  _validAccounts,
                _credentialDumping,
                inhibitSystemRecovery,
                windows.windowsAdminShares

        & dataCompressed
            ->  dataEncrypted,
                automatedExfiltration,
                computer.exfiltrationOverPhysicalMedium,
                exfiltrationOverAternativeProtocol,
                scheduledExfiltration,
                exfiltrationOverC2

        & inhibitSystemRecovery
            info: "Adversaries may delete or remove built-in operating system data and turn off services designed to aid in the recovery of a corrupted system to prevent recovery."    
            ->  systemShutdownOrReboot

        | scheduledExfiltration
            ->  exfiltrationOverC2,
                exfiltrationOverAternativeProtocol       
    
        | exfiltrationOverAternativeProtocol
            ->  internalNetwork.dataExfiltration

        | dataFromInformationRepositories 
            ->  service.informationRepositories
          
        | _automatedCollection
            ->  automatedCollection

        & automatedCollection
            info: "Once established within a system or network, an adversary may use automated techniques for collecting internal data."
            ->  dataCollected, 
                sensitiveDataCollected

        | exfiltrationOverC2
            ->  c2Server.dataExfiltrated

        | automatedExfiltration
            ->  exfiltrationOverAternativeProtocol,
                exfiltrationOverC2

        & networkServiceScan
            info: "Adversaries may attempt to get a listing of services running on remote hosts, including those that may be vulnerable to remote software exploitation."
            ->  service._exploitationOfRemoteServices

        & permissionGroupsDiscovery
            info: "Adversaries may attempt to find local system or domain-level groups and permissions settings. "

        | persistance

        # antivirus
            info: "https://attack.mitre.org/mitigations/M1049/"
            ->  antivirusCheck,
                obfuscatedFilesOrInformation,
                user.spearphishingAttachmentDownload,
                user.spearphishingLinkClicked,
                service.spearphishingViaService   

        # restrictFileAndDirectoryPermissions 
            info: "https://attack.mitre.org/mitigations/M1022/"
            ->  credentialsInFiles,
                disablingSecurityTools,
                indicatorRemovalOnHost,
                linux._clearCommandHistory,
                macOS._clearCommandHistory,
                masquerading,
                privateKeys,
                runtimeDataManipulation,
                storedDataManipulation

        # accountUsePolicies // Set account lockout policies after a certain number of failed login attempts to prevent passwords from being guessed. Too strict a policy may create a denial of service condition and render environments un-usable, with all accounts used in the brute force being locked-out.
            info: "https://attack.mitre.org/mitigations/M1036/" 
            ->  bruteForce

        # bootIntegrity 
            info: "https://attack.mitre.org/mitigations/M1046/"
            ->  firmwareCorruption
 
        # dataBackup
            info: "https://attack.mitre.org/mitigations/M1053/"
            ->  userDataDestruction,
                adminDataDestruction,
                systemDataDestruction,
                userDataEncryptedForImpact, 
                adminDataEncryptedForImpact,
                systemDataEncryptedForImpact,
                inhibitSystemRecovery,
                diskStructureWipe,
                userDiskWiped,
                adminDiskWiped,
                internalNetwork.defacement,
                externalNetwork.defacement

        # multiFactorAuthentication
            info: "https://attack.mitre.org/mitigations/M1032/" 
            ->  applicationDeploymentSoftware,
                bruteForce,
                networkSniffing,
                browser.stealWebSessionCookie,
                service.userRemoteServicesLogin,
                service.adminRemoteServicesLogin,
                thirdpartySoftware.useThirdpartySoftware

        # passwordPolicies 
            info: "https://attack.mitre.org/mitigations/M1027/" 
            ->  bruteForce,
                credentialDumping,
                credentialsInFiles,
                credentialsInRegistry,
                validAccounts,
                privateKeys,
                browser.credentialsFromWebBrowsers,
                thirdpartySoftware.useThirdpartySoftware

        # applicationIsolationAndSandboxing // Restrict execution of code to a virtual environment on or in transit to an endpoint system.
            info: "https://attack.mitre.org/mitigations/M1048/"
            ->  scripting,
                browser.driveByCompromise

        # doNotMitigate // Execution Guardrails likely should not be mitigated with preventative controls because it may protect unintended targets from being compromised.
            info: "https://attack.mitre.org/mitigations/M1055/"
            ->  executionGuardrails                

        # disableOrRemoveFeatureOrProgram 
            info: "https://attack.mitre.org/techniques/T1064/"
            ->  scripting,
                communicationThroughRemovableMedia,
                service._exploitationOfRemoteServices,
                service.externalRemoteServices 

        # activeDirectoryConfiguration
            info: "https://attack.mitre.org/mitigations/M1015/"
            ->  credentialDumping,
                credentialsInFiles,
                windows.sIDHistoryInjection, 
                thirdpartySoftware.useThirdpartySoftware

        # audit 
            info: "https://attack.mitre.org/mitigations/M1047/"
            ->  credentialsInFiles,
                credentialsInRegistry,
                browser.browserExtensions,
                thirdpartySoftware.stealApplicationAccessToken,
                privateKeys  

        # codeSigning
            info: "https://attack.mitre.org/mitigations/M1045/" 
            ->  applicationDeploymentSoftware,
                masquerading    

        # limitHardwareInstallation
            info: "https://attack.mitre.org/mitigations/M1034/"   
            ->  hardwareAddition.hardwareAdditions     

        # operatingSystemConfiguration 
            info: "https://attack.mitre.org/mitigations/M1028/"
            ->  accountDiscovery, 
                communicationThroughRemovableMedia,
                credentialDumping,
                domainDiscovery,
                exfiltrationOverOtherNetworkMedium,
                inhibitSystemRecovery,
                installRootCertificate,
                administrator.createUserAccount

        # softwareConfiguration
            info: "https://attack.mitre.org/mitigations/M1054/"
            ->  installRootCertificate,
                browser.stealWebSessionCookie      

        # executionPrevention // Block execution of code on a system through application whitelisting, blacklisting, and/or script blocking.            
            info: "https://attack.mitre.org/mitigations/M1038/"
            ->  adminCommandLineInterface, 
                accountDiscovery,
                adminDiskWiped,
                applicationWindowDiscovery,
                binaryPadding,
                browser.browserExtensions,
                computer.collectAudio,
                dataCompressed,
                detailedRemoteSystemDiscovery,
                detailedRunningProcessDiscovery,
                domainDiscovery,
                domainFronting,
                fileDeletion,
                masquerading,
                permissionGroupsDiscovery,  
                processInjection,
                remoteSystemDiscovery,     
                runningProcessDiscovery,
                systemInformationDiscovery,              
                userCommandLineInterface,       
                windows.compiledHTMLFile            
             
        # privilegedAccountManagement  
            info: "https://attack.mitre.org/mitigations/M1026/"
            ->  credentialsInRegistry,
                validAccounts,
                internalNetwork.webShell

        # encryptSensitiveInformation 
            info: "https://attack.mitre.org/mitigations/M1041/"
            ->  sensitiveDataCollected,
                indicatorRemovalOnHost,
                networkSniffing,
                privateKeys,
                storedDataManipulation  

        # remoteDataStorage 
            info: "https://attack.mitre.org/mitigations/M1029/"
            ->  automatedCollection,
                indicatorRemovalOnHost,
                storedDataManipulation,
                thirdpartySoftware.useThirdpartySoftware              

        # limitSoftwareInstallation
            info: "https://attack.mitre.org/mitigations/M1033/"
            ->  browser.browserExtensions

        # updateSoftware
            info: "https://attack.mitre.org/mitigations/M1051/"
            ->  firmwareCorruption,
                browser.driveByCompromise,
                service.exploitationForCredentialAccess,
                service.exploitationForPrivilegeEscalation,
                service.exploitationOfRemoteServices,
                internalNetwork.webShell  

        # userAccountControl
            info: "https://attack.mitre.org/mitigations/M1052/"
            ->  thirdpartySoftware.trustedRelationship

        # exploitProtection
            info: "https://attack.mitre.org/mitigations/M1050/"
            ->  browser.driveByCompromise,
                service.exploitationForClientExecution,
                service.exploitationForCredentialAccess,
                service.exploitationForPrivilegeEscalation,
                service.exploitationOfRemoteServices,
                internalNetwork.exploitPublicFacingApplication,
                externalNetwork.exploitPublicFacingApplication
    }
    
    asset Windows extends OS {   
        | _appCertDLLs
            ->  appCertDLLs 
            
        & appCertDLLs
            info: "This value can be abused to obtain persistence and privilege escalation by causing a malicious DLL to be loaded and run in the context of separate processes on the computer."
            ->  persistence,
                systemWindows.systemRights,
                windowsAdmin.adminRights

        & appInitDLLs 
            ->  persistence 

        & accessibilityFeatures
            info: "This helps attackers to open a System-level command shell, where the attackers can execute arbitrary Windows commands, including adding or modifying accounts on the system."
            ->  executeCode,
                system.systemRights,
                _remoteDesktopProtocol 

        & _bITSJobs  
            ->  bITSJobs

        & bITSJobs
            info: "Adversaries may abuse BITS to download, execute, and even clean up after running malicious code."
            ->  executeCode,
                bypassHostForensicAnalysis,
                firewall.bypassFirewall 

        & cmstp
            info: "Microsoft Connection Manager Profile Installer (CMSTP.exe) is a command-line program used to install Connection Manager service profiles."
            ->  bypassUserAccountControl, // leads to Bypass User Account Control attack
                bypassApplicationWhitelisting,
                bypassAntivirus            

        | codeSigningCertificate
            info: "Adversaries are known to use code signing certificates to masquerade malware and tools as legitimate binaries. Code signing certificates may be used to bypass security policies that require signed code to execute on a system."
            ->  windowsAdmin.bypassWindowsUserAccountControl

        | collectHashInformation    
            +>  networkSniffing, // leads to Network Sniffing attack
                bruteForce, // leads to Brute Force attack   
                passTheHash // leads to Pass the Hash attack 

        & _componentObjectModelAndDistributedCOM
            info: "Adversaries may use the Windows Component Object Model (COM) and Distributed Component Object Model (DCOM) for local code execution or to execute on remote systems as part of lateral movement. By default, only Administrators may remotely activate and launch COM objects through DCOM."
            ->  componentObjectModelAndDistributedCOM

        & componentObjectModelAndDistributedCOM
            info: "Adversaries may use the Windows Component Object Model (COM) and Distributed Component Object Model (DCOM) for local code execution or to execute on remote systems as part of lateral movement. By default, only Administrators may remotely activate and launch COM objects through DCOM."
            ->  internalNetwork.remoteCOMExecution

        & controlPanelItems
            info: "Adversaries can use Control Panel items as execution payloads to execute arbitrary commands."
            ->  executeCode,
                bypassApplicationWhitelisting,
                bypassProcessWhitelisting

        | componentObjectModelHijacking
            info: "Adversaries can use Component Object Model (COM) system to insert malicious code that can be executed. When that system component is executed through normal system operation the adversary's code will be executed instead."
            ->  processInjection,
                bypassAutorunsAnalysis,
                _regsvr32             

        | componentFirmware
            info: "Adversaries may compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS."       
            ->  bypassFileMonitoring,
                bypassHostIntrusionPrevention, 
                bypassAntivirus         

        & compiledHTMLFile 
            info: "Adversaries may abuse this technology to conceal malicious code, can be triggered by User Execution."
            ->  user.userExecution, // leads to User Execution attack
                bypassApplicationWhitelisting,
                bypassDigitalCertificateValidation   

        | dCShadow
            info: "This technique may bypass system logging and security monitors such as security information and event management (SIEM) products."
            ->  _sIDHistoryInjection,
                bypassLogAnalysis

        | deobfuscateOrDecodeFilesOrInformation 
            ->  bypassAntivirus,
                bypassHostIntrusionPrevention,
                bypassSignatureBasedDetection,
                externalNetwork.bypassNetworkIntrusionDetection,
                internalNetwork.bypassNetworkIntrusionDetection     

        | _dLLSearchOrderHijacking
            ->  dLLSearchOrderHijacking 

        & dLLSearchOrderHijacking
            info: "Adversaries may take advantage of the Windows DLL search order and programs that ambiguously specify DLLs to gain privilege escalation and persistence."
            ->  bypassProcessWhitelisting,
                systemWindows.systemRights,
                windowsUser.userRights,
                windowsAdmin.adminRights                    
               
        | dLLSideLoading
            ->  bypassProcessWhitelisting,
                bypassAntivirus

        & executeMshta
            info: "Mshta is a utility that executes Microsoft HTML Applications. It can be used to proxy execute malicious .hta files, and can also be used to bypass application whitelisting."
            ->  executeCode,
                bypassDigitalCertificateValidation,
                bypassApplicationWhitelisting    
               
        | executeCode 
            +>  componentFirmware,
                service._exploitationForPrivilegeEscalation,
                computer.infectedWindowsComputer         

        & executionThroughAPI    
            info: "Adversary tools may directly use the Windows application programming interface (API) to execute binaries." 

        & executionThroughModuleLoad 
            info: "Adversaries can use this functionality as a way to execute arbitrary code on a system."
            ->  executeCode    
        
        | extraWindowMemoryInjection
            info: "Execution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges."
            ->  processInjection

        | fileSystemLogicalOffsets
            info: "Windows allows programs to have direct access to logical volumes. This technique bypasses Windows file access controls as well as file system monitoring tools."
            ->  bypassFileMonitoring,
                bypassFileSystemAccessControls

        | _fileSystemPermissionsWeakness
            ->  fileSystemPermissionsWeakness      

        & fileSystemPermissionsWeakness
            info: "Adversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level."
            ->  executeCode,
                windowsAdmin.adminRights,
                systemWindows.systemRights

        & forcedAuthentication
            info: "Adversaries may take advantage of this behavior to gain access to user account hashes through forced SMB authentication."
            ->  templateInjection,
                collectHashInformation 

        & groupPolicyModification
            info: "Malicious GPO modifications can be used to implement Scheduled Task, Disabling Security Tools, Remote File Copy, Create Account, Service Execution and more."
            ->  scheduledTask, // leads to Scheduled Task attack
                disablingSecurityTools, // leads to Disabling Security Tools attack
                remoteFileCopy, // leads to Remote File Copy attack
                serviceExecution, // leads to Service Execution attack
                windowsAdministrator.createUserAccount,
                bypassSystemAccessControls,
                bypassFileSystemAccessControls

        | imageFileExecutionOptionsInjection
            info: "Directly modifying IEFO and silent process exit Registry values may be abused to obtain persistence and privilege escalation by causing a malicious executable to be loaded and run in the context of separate processes on the computer."
            ->  bypassAutorunsAnalysis,
                persistence,
                service._exploitationForPrivilegeEscalation

        & indicatorBlocking
            info: "An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed."
            ->  bypassAntivirus,
                bypassLogAnalysis,
                bypassHostIntrusionPrevention     

        | indirectCommandExecution
            info: "Adversaries may abuse the Windows system features for Defense Evasion."
            ->  executeCode,
                bypassStaticFileAnalysis,
                bypassApplicationWhitelisting,
                bypassProcessWhitelisting,
                bypassFileOrPathWhitelisting     

        & inputPrompt
            info: "Adversaries may mimic this functionality to prompt users for credentials with a seemingly legitimate prompt for a number of reasons that mimic normal usage."
            ->  bypassUserAccountControl, // leads to Bypass User Account Control attack
                _powerShell, // leads to PowerShell attack
                user.userCredentials       

        & installUtil
            info: "Adversaries may use InstallUtil to proxy execution of code through a trusted Windows utility."
            ->  bypassDigitalCertificateValidation,
                bypassProcessWhitelisting,
                signedBinaryProxyExecution,
                signedScriptProxyExecution    

        & kerberoasting
            info: "Adversaries possessing a valid Kerberos ticket-granting ticket (TGT) may request one or more Kerberos ticket-granting service (TGS) service tickets for any SPN from a domain controller (DC)."
            ->  bruteForce,
                persistence,
                service._exploitationForPrivilegeEscalation,
                _validAccounts           

        & lLMNR_NBT_NS_PoisoningAndRelay
            info: "AAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through Network Sniffing and crack the hashes offline through Brute Force to obtain the plaintext passwords."
            ->  collectHashInformation

        & lSASS_Driver
            info: "Adversaries may target lsass.exe drivers to obtain execution and/or persistence. By either replacing or adding illegitimate drivers (e.g., DLL Side-Loading or DLL Search Order Hijacking), an adversary can achieve arbitrary code execution triggered by continuous LSA operations."
            ->  executeCode,
                persistence

        & manInTheBrowser
            info: "Adversaries can take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify behavior, and intercept information as part of various man in the browser techniques."
            ->  browser.driveByCompromise

        & modifyExistingService
            info: "Adversaries can modify an existing service to persist malware on a system by using system utilities or by using custom tools to interact with the Windows API. Adversaries may also intentionally corrupt or kill services to execute malicious recovery programs/commands."
            ->  persistence,
                masquerading, // Use of existing services is a type of Masquerading that may make detection analysis more challenging
                executeCode,
                serviceExecution

        & modifyRegistry
            info: "Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in Persistence and Execution. An adversary may modify these Registry keys to add new SSPs."
            ->  persistence,
                securitySupportProvider,
                bypassHostForensicAnalysis,
                distributedComponentObjectModel   

        | netshHelperDLL
            info: "Adversaries can use netsh.exe with helper DLLs to proxy execution of arbitrary code in a persistent manner."

        | networkShareConnectionRemoval
            info: "Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation."
            ->  bypassHostForensicAnalysis

        & newService
            info: "Adversaries may install a new service that can be configured to execute at startup by using utilities to interact with services or by directly modifying the Registry."
            ->  service._exploitationForPrivilegeEscalation, // an adversary may also use a service to escalate privileges from administrator to SYSTEM
                masquerading // benign software with Masquerading

        & ntfsFileAttributes
            info: "Adversaries may store malicious data or binaries in file attribute metadata instead of directly in files, to evade some defenses, such as static indicator scanning tools and anti-virus."
            ->  bypassSignatureBasedDetection,
                bypassHostForensicAnalysis,
                bypassAntivirus

        & officeApplicationStartup
            info: "There are multiple mechanisms that can be used with Office for persistence when an Office-based application is started."
            ->  persistence  

        & passwordFilterDLL
            info: "Adversaries can register malicious password filters to harvest credentials from local computers and/or entire domains."
            ->  systemWindows.systemCredentials,
                windowsAdmin.adminCredentials

        & passTheHash
            info: "This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash."
            ->  internalNetwork.remoteSystemsConnection // PtH may be used to perform actions on local or remote systems

        & passTheTicket
            info: "Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password."
            ->  _credentialDumping, // valid Kerberos tickets for Valid Accounts are captured by Credential Dumping
                internalNetwork.c2Connexion // gain remote access 

        & pathInterception
            info: "Adversaries may take advantage of performing path interception: unquoted paths, path environment variable misconfigurations, and search order hijacking."
            ->  unquotedPaths,
                pathEnvironmentVariableMisconfiguration,
                searchOrderHijacking

        | parentPIDSpoofing
            info: "Adversaries may spoof the parent process identifier (PPID) of a new process to evade process-monitoring defenses or to elevate privileges."
            ->  bypassHostForensicAnalysis,
                bypassHeuristicDetection,
                service._exploitationForPrivilegeEscalation

        | pathEnvironmentVariableMisconfiguration 
            info: "A program may be placed in the preceding directory that is named the same as a Windows program (such as cmd, PowerShell, or Python), which will be executed when that command is executed from a script or command-line."
            ->  executeCode

        & _powerShell
            info: "Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code."
            ->  powerShell,
                windowsRemoteManagement, // call with the winrm
                executeCode,
                scripting

        & powerShell
            info: "Administrator permissions are required to use PowerShell to connect to remote systems."      
            ->  internalNetwork.remoteSystemsConnection

        & _powerShellProfile
            info: "Adversaries may gain persistence and elevate privileges in certain situations by abusing PowerShell profiles."
            ->  powerShellProfile

        | powerShellProfile
            info: "Adversaries may gain persistence and elevate privileges in certain situations by abusing PowerShell profiles."   
            ->  service._exploitationForPrivilegeEscalation,
                persistence

        | processDoppelganging
            info: "Process Doppelgänging involves replacing the memory of a legitimate process, enabling the veiled execution of malicious code that may evade defenses and detection."
            ->  bypassAntivirus,
                bypassProcessWhitelisting,
                bypassSignatureBasedDetection,
                bypassFileOrPathWhitelisting    

        | processHollowing
            info: "Execution of the malicious code is masked under a legitimate process and may evade defenses and detection analysis."
            ->  bypassAntivirus,
                bypassProcessWhitelisting,
                bypassSignatureBasedDetection,
                bypassFileOrPathWhitelisting   

        & codeProxyExecution
            ->  persistence

        | rDPSessionHijacking
            info: "Adversaries may also perform RDP session hijacking which involves stealing a legitimate user's remote session."

        & registryRunKeysOrStartupFolder
            info: "Adversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs."
            ->  masquerading, // leads to Masquerading attack
                service.remoteAccessTools,
                persistence

        & regsvcsOrRegasm
            info: "Adversaries can use Regsvcs and Regasm to proxy execution of code through a trusted Windows utility. Both utilities may be used to bypass process whitelisting."
            ->  codeProxyExecution, 
                bypassProcessWhitelisting,
                bypassDigitalCertificateValidation

        & regsvr32
            info: "Adversaries may take advantage of this functionality to proxy execution of code to avoid triggering security tools. Regsvr32.exe can also be used to specifically bypass process whitelisting using functionality to load COM scriptlets to execute DLLs under user permissions."
            ->  bypassProcessWhitelisting,
                bypassAntivirus,
                bypassDigitalCertificateValidation,
                codeProxyExecution,
                _regsvr32

        & _regsvr32
            rationale: "This is a helper attack step for Regsvr32.exe to establish Persistence via Component Object Model Hijacking."
            ->  persistence

        & remoteDesktopProtocol
            info: "Adversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries may also perform RDP session hijacking which involves stealing a legitimate user's remote session. It can also lead to Remote System Discovery and Privilege Escalation by stealing a Domain Admin or higher privileged account session."
            ->  _remoteDesktopProtocol,
                remoteSystemDiscovery,
                rDPSessionHijacking

        & _remoteDesktopProtocol
            rationale: "This is a helper attack step. It requires all its parent attack steps to compromise - Accessibility Features when connected over Remote Desktop Protocol will cause the replaced file to be executed with SYSTEM privileges."
            ->  persistence,
                system.systemRights  

        | replicationThroughRemovableMedia
            info: "Adversaries may move onto systems, possibly those on disconnected or air-gapped networks, by copying malware to removable media and taking advantage of Autorun features when the media is inserted into a system and executes."
            ->  communicationThroughRemovableMedia,
                removableMedia.infectedMedia

        & rundll32
            info: "Adversaries may take advantage of this functionality to proxy execution of code to avoid triggering security tools. Rundll32 can also been used to execute scripts."
            ->  bypassAntivirus,
                bypassApplicationWhitelisting,
                bypassDigitalCertificateValidation,
                executeCode  

        & serverSoftwareComponent
            info: "Adversaries may abuse legitimate extensible development features of server applications to establish persistent access to systems."
            ->  persistence

        & screensaver
            info: "Adversaries can use screensaver settings to maintain persistence by setting the screensaver to run malware after a certain timeframe of user inactivity."
            ->  persistence

        | searchOrderHijacking
            info: "Search order hijacking occurs when an adversary abuses the order in which Windows searches for programs that are not given a path."
            ->  _dLLSearchOrderHijacking // Search order hijacking is a common practice for DLL Search Order Hijacking   

        & securitySupportProvider
            info: "An adversary may modify these Registry keys to add new SSPs."
            ->  persistence

        & serviceExecution
            info: "Adversaries may execute a binary, command, or script via a method that interacts with Windows services, such as the Service Control Manager."
            ->  newService // Adversaries may also directly start services through Service Execution

        | serviceRegistryPermissionsWeakness
            ->  _serviceRegistryPermissionsWeakness,
                persistence

        & _serviceRegistryPermissionsWeakness
            info: "When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to gain persistence and/or privilege escalation to the account context the service is set to execute."
            ->  service._exploitationForPrivilegeEscalation

        & sharedWebroot
            info: "Adversaries may add malicious content to an internally accessible website through an open network file share that contains the website's webroot or Web content directory and then browse to that content with a Web browser to cause the server to execute the malicious content."
            ->  browser.executionThroughMaliciousContent

        & shortcutModification
            info: "Adversaries could use shortcuts to execute their tools for persistence. Adversaries could also edit the target path or entirely replace an existing shortcut so their tools will be executed instead of the intended legitimate program."
            ->  executeCode,
                persistence,
                masquerading // create a new shortcut as a means of indirection that may use Masquerading to look like a legitimate program

        & sIDHistoryInjection
            info: "Adversaries may use SID mechanism for privilege escalation. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as Remote Services, Windows Admin Shares, or Windows Remote Management."
            ->  _sIDHistoryInjection,
                service.adminRemoteServicesLogin, // leads to Remote Services attack
                windowsAdminShares, // leads to Windows Admin Shares attack    
                windowsRemoteManagement // leads to Windows Remote Management attack 

        & _sIDHistoryInjection 
            info: "This is a helper attack step. Adversaries may utilize DCShadow to perform SID-History Injection and/or manipulate AD objects (such as accounts, access control lists, schemas) to establish backdoors for Persistence."           
            ->  persistence          

        & signedBinaryProxyExecution
            info: "Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files. This behavior may be abused by adversaries to execute malicious files that could bypass application whitelisting and signature validation on systems."
            ->  bypassApplicationWhitelisting,
                bypassDigitalCertificateValidation            

        & signedScriptProxyExecution
            info: "Scripts signed with trusted certificates can be used to proxy execution of malicious files."
            ->  bypassApplicationWhitelisting,
                bypassDigitalCertificateValidation          

        & sIPAndTrustProviderHijacking
            info: "Adversaries may abuse this architecture to subvert trust controls and bypass security policies that allow only legitimately signed code to execute on a system."
            ->  bypassApplicationWhitelisting,
                bypassAutorunsAnalysis,
                bypassDigitalCertificateValidation,
                bypassProcessWhitelisting,
                bypassUserModeSignatureValidation 

        & softwarePacking
            info: "Packing an executable changes the file signature in an attempt to avoid signature-based detection."
            ->  indicatorRemovalFromTools,
                bypassSignatureBasedDetection,
                bypassAntivirus,
                bypassHeuristicDetection  

        | systemServiceDiscovery
            info: "Adversaries may try to get information about registered services."
            ->  service.serviceInformation 

        | _taintSharedContent
            info: "This is a helper attack step that requires access to shared folders."
            ->  networkSharedDrive.taintSharedContent   

        & templateInjection
            info: "Adversaries may abuse this technology to initially conceal malicious code to be executed."
            ->  bypassStaticFileAnalysis, 
                forcedAuthentication, // leads to Forced Authentication attack
                browser.spearphishingAttachment, // can be delivered via Spearphishing Attachment
                _taintSharedContent // can be delivered via Taint Shared Content

        & timeProviders
            info: "Adversaries may abuse Windows Time service to establish Persistence, specifically by registering and enabling a malicious DLL as a time provider."
            ->  persistence

        & trustedDeveloperUtilities
            info: "An adversary can use tracker.exe to proxy execution of an arbitrary DLL into another process. Since tracker.exe is also signed it can be used to bypass application whitelisting solutions."
            ->  bypassApplicationWhitelisting,
                executeCode,
                signedBinaryProxyExecution,
                signedScriptProxyExecution    

        | unquotedPaths
            info: "An adversary can place an executable in a higher level directory of the path, and Windows will resolve that executable instead of the intended executable."
            ->  executeCode   

        & userServiceStop
            info: "Adversaries may stop services in order to conduct Data Destruction or Data Encrypted for Impact on the data stores of services like Exchange and SQL Server."
            ->  userDataDestruction,
                userDataEncryptedForImpact

        & adminServiceStop
            ->  adminDataDestruction,
                adminDataEncryptedForImpact

        & scheduledTask
            info: "An adversary may use task scheduling to execute programs at system startup or on a scheduled basis for persistence, to conduct remote Execution as part of Lateral Movement, to gain SYSTEM privileges, or to run a process under the context of a specified account."
            //->  program execution attacks, scheduled persistance attacks, remote execution, gain system privilege, run process under context of specified account

        & systemTimeDiscovery
            info: "The information could be useful for performing other techniques, such as executing a file with a Scheduled Task, or to discover locality information based on time zone to assist in victim targeting."
            ->  scheduledTask         

        & systemServiceStop
            ->  systemDataDestruction,
                systemDataEncryptedForImpact

        & windowsAdminShares
            ->  networkShareConnectionRemoval, // leads to Network Share Connection Removal attack
                windowsManagementInstrumentation // leads to Windows Management Instrumentation attack

        | windowsManagementInstrumentation
            info: "An adversary can use WMI to interact with local and remote systems and use it as a means to perform many tactic functions."
            ->  systemInformationDiscovery, // extract information about the operating system
                executeCode,
                inhibitSystemRecovery

        & windowsManagementInstrumentationEventSubscription
            info: "Adversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system."
            ->  persistence

        & windowsRemoteManagement
            info: "WinRM allows a user to interact with a remote system."
            ->  internalNetwork.remoteExecution,
                service.externalRemoteServices // Windows Remote Management can also be used externally  

        & winlogonHelperDLL
            info: "Adversaries may take advantage of these features to repeatedly execute malicious code and establish Persistence."
            ->  persistence

        | commandExecution
            ->  computer.infectedWindowsComputer

        & createService
            ->  executeService
            
        & registryKeysEnabled
            ->  dynamicDataExchange

        & distributedComponentObjectModel          
            info: "Through DCOM, adversaries operating in the context of an appropriately privileged user can remotely obtain arbitrary and even direct shellcode execution through Office applications as well as other Windows objects that contain insecure methods. DCOM can also execute macros and may also invoke Dynamic Data Exchange."
            ->  dynamicDataExchange

        | dynamicDataExchange
            info: "Windows Dynamic Data Exchange (DDE) is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications."
            ->  userCommandLineInterface 
            
        | hooking             
            info: "Adversaries may use hooking to load and execute malicious code within the context of another process; malicious hooking mechanisms may also capture API calls that include parameters that reveal user authentication credentials for Credential Access."
            ->  executeCode,
                captureAPICalls

        | hypervisor           
            info: "A type-1 hypervisor operates at a level below the operating system and could be designed with Rootkit functionality to hide its existence from the guest operating system."
            ->  persistance

        | captureAPICalls   

        & logonScripts
            info: "An adversary can then create a logon session for the user using the LogonUser function. The function will return a copy of the new session's access token and the adversary can use SetThreadToken to assign the token to a thread."
            ->  userAccessTokenManipulation,
                adminAccessTokenManipulation,
                windowsAdmin.adminRights   

        & systemFirmware
            info: "System firmware may be modified by an adversary to perform or assist in malicious activity."
            ->  installMaliciousFirmwareUpdates

        | installMaliciousFirmwareUpdates

        | timestomp
            info: "Timestomp is done on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools."
            ->  bypassHostForensicAnalysis

        & queryRegistery
            info: "The Registry contains a significant amount of information about the operating system, configuration, software, and security. Some of the information may help adversaries to further their operation within a network."
            ->  scripting,
                systemInformationDiscovery

        & networkShareDiscovery
            ->  internalNetwork.networkShareDiscovery

        & userAccessTokenManipulation
            info: "Adversaries may use access tokens to operate under a different user or system security context to perform actions and evade detection."
            ->  service._exploitationForPrivilegeEscalation

        & adminAccessTokenManipulation
            info: "Adversaries may use access tokens to operate under a different user or system security context to perform actions and evade detection."
            ->  service._exploitationForPrivilegeEscalation

        & userCommandLineInterface
        
        & userSecuritySoftwareDiscovery
            info: "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on the system. This may include things such as local firewall rules and anti-virus. These checks may be built into early-stage remote access tools."
            ->  virtualizationOrSandboxEvasion
        
        & adminSecuritySoftwareDiscovery
            ->  virtualizationOrSandboxEvasion

        & bypassUserAccountControl
            ->  executeCode

        & executeService
            ->  persistance
       
        | peripheralDeviceDiscovery
            ->  computer.peripheralDeviceDiscovery

        | portMonitors
            info: "Adversaries can use this technique to load malicious code at startup that will persist on system reboot and execute as SYSTEM."
            ->  executeCode

        & emailStorageCollection
            info: "Files containing email data can be acquired from a user's system, such as Outlook storage or cache files .pst and .ost."
            ->  dataCollected

        & outlookEmailCollection
            info: "Some adversaries may acquire user credentials and access externally facing webmail applications, such as Outlook Web Access."
            ->  dataCollected
        
        | _applicationShimming
            ->  applicationShimming
            
        & applicationShimming
            info: "Utilizing these shims may allow an adversary to perform several malicious acts such as elevate privileges, install backdoors, disable defenses like Windows Defender, etc."
            ->  persistence,
                windowsUser.userRights,
                windowsAdministrator.adminRights,
                bypassUserAccountControl // certain shims can be used to Bypass User Account Control 

        & authenticationPackage
            info: "Adversaries can use Windows Authentication Packages for persistence for persistence."
            ->  persistence   

        | changeDefaultFileAssociation
            ->  persistence

        | trustedDomainInfo // leads to SID-History Injection, Pass the Ticket, and Kerberoasting attacks
            info: "The information discovered may help the adversary conduct SID-History Injection, Pass the Ticket, and Kerberoasting."

        & domainTrustDiscovery
            ->  trustedDomainInfo

        & bootkit 
            ->  persistance
            
        | videoCapture
            -> computer.collectVideo

        | virtualizationOrSandboxEvasion
            info: "Adversaries may check for the presence of a virtual machine environment (VME) or sandbox to avoid potential detection of tools and activities."
            ->  bypassAntivirus,
                bypassHostForensicAnalysis,    
                bypassSignatureBasedDetection,  
                bypassStaticFileAnalysis              

        & xslScriptProcessing
            info: "Adversaries may abuse this functionality to execute arbitrary files while potentially bypassing application whitelisting defenses."
            ->  executeCode,
                windowsManagementInstrumentation, // leads to Windows Management Instrumentation attack
                bypassAntivirus,
                bypassApplicationWhitelisting,
                bypassDigitalCertificateValidation

        # activeDirectoryConfiguration
            info: "https://attack.mitre.org/mitigations/M1015/"
            +>  passTheTicket

        # antivirus
            info: "https://attack.mitre.org/mitigations/M1049/"
            +>  softwarePacking,
                templateInjection

        # applicationIsolationAndSandboxing // Restrict execution of code to a virtual environment on or in transit to an endpoint system.
            info: "https://attack.mitre.org/mitigations/M1048/"
            +>  _componentObjectModelAndDistributedCOM,
                distributedComponentObjectModel

        # audit 
            info: "https://attack.mitre.org/mitigations/M1047/"
            +>  domainTrustDiscovery,
                bypassUserAccountControl,
                dLLSearchOrderHijacking,
                dLLSideLoading,
                fileSystemPermissionsWeakness,
                modifyExistingService,
                pathInterception,
                remoteDesktopProtocol,
                serverSoftwareComponent

        # codeSigning
            info: "https://attack.mitre.org/mitigations/M1045/"  
            +>  powerShell,
                _powerShellProfile,
                serverSoftwareComponent          

        # credentialAccessProtection
            info: "https://attack.mitre.org/mitigations/M1043/"
            ->  _credentialDumping

        # executionPrevention
            info: "https://attack.mitre.org/mitigations/M1038/"
            +>  accessibilityFeatures,
                adminSecuritySoftwareDiscovery,
                appCertDLLs,
                appInitDLLs,
                cmstp,
                controlPanelItems,
                createService,
                dLLSearchOrderHijacking,
                executeMshta,
                executionThroughAPI,
                executionThroughModuleLoad,
                installUtil,
                networkShareDiscovery,
                pathInterception,
                queryRegistery,
                regsvcsOrRegasm,
                scheduledTask, 
                screensaver,
                signedBinaryProxyExecution,
                signedScriptProxyExecution,
                sIPAndTrustProviderHijacking,
                systemTimeDiscovery,
                trustedDeveloperUtilities,
                userSecuritySoftwareDiscovery,
                winlogonHelperDLL,
                xslScriptProcessing,
                networkSharedDrive.taintSharedContent

        # exploitProtection
            info: "https://attack.mitre.org/mitigations/M1050/"
            +>  regsvr32,
                rundll32,
                networkSharedDrive.taintSharedContent

        # limitHardwareInstallation
            info: "https://attack.mitre.org/mitigations/M1034/"   
            +>  replicationThroughRemovableMedia

        # operatingSystemConfiguration
            info: "https://attack.mitre.org/mitigations/M1028/" 
            +>  passwordFilterDLL,
                bITSJobs,
                remoteDesktopProtocol   

        # passwordPolicies 
            info: "https://attack.mitre.org/mitigations/M1027/" 
            +>  passTheHash,
                passTheTicket,
                windowsAdminShares               

        # privilegedProcessIntegrity  
            info: "https://attack.mitre.org/mitigations/M1025/"
            ->  authenticationPackage,
                _credentialDumping,
                securitySupportProvider 

        # privilegedAccountManagement
            info: "https://attack.mitre.org/mitigations/M1026/"
            +>  bootkit,
                bypassUserAccountControl,
                componentObjectModelAndDistributedCOM,
                passTheHash

        # restrictFileAndDirectoryPermissions
            info: "https://attack.mitre.org/mitigations/M1022/"
            +>  controlPanelItems,
                dLLSideLoading,
                indicatorBlocking,
                logonScripts,
                modifyRegistry,
                ntfsFileAttributes,
                pathInterception,
                sharedWebroot,
                sIPAndTrustProviderHijacking,
                userServiceStop,
                adminServiceStop,
                systemServiceStop,
                serviceExecution,
                _serviceRegistryPermissionsWeakness,
                timeProviders,
                networkSharedDrive.taintSharedContent  

        # restrictRegistryPermissions // Restrict the ability to modify certain hives or keys in the Windows Registry.
            info: "https://attack.mitre.org/mitigations/M1024/"
            ->  sIPAndTrustProviderHijacking,
                _powerShellProfile,
                userServiceStop,
                adminServiceStop,
                systemServiceStop,
                timeProviders

        # restrictLibraryLoading 
            info: "https://attack.mitre.org/mitigations/M1044/"
            ->  dLLSearchOrderHijacking         

        # softwareConfiguration
            info: "https://attack.mitre.org/mitigations/M1054/"
            +>  indicatorBlocking,
                officeApplicationStartup,
                _powerShellProfile  

        # bootIntegrity 
            info: "https://attack.mitre.org/mitigations/M1046/"
            +>  bootkit,
                systemFirmware      

        # encryptSensitiveInformation
            info: "https://attack.mitre.org/mitigations/M1041/"
            +>  emailStorageCollection,
                outlookEmailCollection

        # disableOrRemoveFeatureOrProgram
            info: "https://attack.mitre.org/mitigations/M1042/"
            +>  cmstp,
                _componentObjectModelAndDistributedCOM,
                distributedComponentObjectModel,
                installUtil,
                lLMNR_NBT_NS_PoisoningAndRelay,
                officeApplicationStartup,
                _powerShell,
                registryKeysEnabled,
                regsvcsOrRegasm,
                remoteDesktopProtocol,
                replicationThroughRemovableMedia,
                screensaver,
                templateInjection,
                trustedDeveloperUtilities,
                windowsRemoteManagement

        # filterNetworkTraffic // Use host-based security software to block LLMNR/NetBIOS traffic.
            info: "https://attack.mitre.org/mitigations/M1037/"   
            ->  lLMNR_NBT_NS_PoisoningAndRelay,
                forcedAuthentication 

        # updateSoftware
            info: "https://attack.mitre.org/mitigations/M1051/" 
            +>  appInitDLLs,
                applicationShimming,
                officeApplicationStartup,
                passTheHash
        
        # userAccountControl
            info: "https://attack.mitre.org/mitigations/M1052/"
            +>  applicationShimming, 
                bypassUserAccountControl,
                fileSystemPermissionsWeakness,
                passTheHash   
    }

    asset Linux extends OS {
        & bootkit
            ->  persistance

        # bootIntegrity 
            info: "https://attack.mitre.org/mitigations/M1046/"
            +>  bootkit

        & _clearCommandHistory
            ->  clearCommandHistory       

        & clearCommandHistory
            info: "Adversaries can abuse this by searching these files for cleartext passwords. Additionally, adversaries can use a variety of methods to prevent their own commands from appear in these logs." 
            ->  bypassLogAnalysis, 
                bypassHostForensicAnalysis

        | spaceAfterFileName
            ->  user.userExecution

        | infectedOS
            +>  bashHistory

        | _bash_profileAndBashrc
            ->  bash_profileAndBashrc

        & bash_profileAndBashrc 
            info: "Adversaries can insert code into these files to gain persistence each time a user logs in or opens a new shell."
            ->  persistence

        & bashHistory 
            ->  indicatorRemovalOnHost,
                linuxAdministrator.adminCredentials,
                linuxUser.userCredentials

        & hISTCONTROL
            info: "Adversaries can use this to operate without leaving traces by simply prepending a space to all of their terminal commands."     
            ->  bypassLogAnalysis,
                bypassHostForensicAnalysis

        & kernelModulesAndExtensions
            info: "Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses."
            ->  rootkit        

        & localJobScheduling
            info: "An adversary may use job scheduling to execute programs at system startup or on a scheduled basis for Persistence, to conduct Execution as part of Lateral Movement, to gain root privileges, or to run a process under the context of a specific account."
            ->  persistence,
                root.adminRights

        & portKnocking
            info: "This technique has been observed to both for the dynamic opening of a listening port as well as the initiating of a connection to a listening server on a different system."
            ->  bypassDefensiveNetworkServiceScanning  

        & serverSoftwareComponent
            info: "Adversaries may abuse legitimate extensible development features of server applications to establish persistent access to systems."
            ->  persistence

        & setuidAndSetgid
            info: "An adversary can take advantage of this to either do a shell escape or exploit a vulnerability in an application with the setsuid or setgid bits to get code running in a different user's context."
            ->  service._exploitationForPrivilegeEscalation,
                persistence  

        | source
            info:"The source command loads functions into the current shell or executes files in the current context."
            ->  executeCode

        & sshHijacking
            info: "In order to move laterally from a compromised host, adversaries may take advantage of trust relationships established with other systems via public key authentication in active SSH sessions by hijacking an existing connection to another system."
            ->  sSHCredentialInterception

        | _sudo
            ->  sudo

        & sudo
            info: "Adversaries can take advantage of these configurations to execute commands as other users or spawn processes with higher privileges."
            ->  service._exploitationForPrivilegeEscalation

        | _sudoCaching
            ->  sudoCaching

        & sudoCaching
            info: "Adversaries can abuse poor configurations of this to escalate privileges without needing the user's password."
            ->  service._exploitationForPrivilegeEscalation 

        | _systemdService
            -> systemdService

        & systemdService
            info: "Adversaries have used systemd functionality to establish persistent access to victim systems by creating and/or modifying service unit files that cause systemd to execute malicious commands at recurring intervals, such as at system boot."
            ->  persistence

        | timestomp
            info: "Timestomp is done on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools."
            ->  bypassHostForensicAnalysis

        | trap
            info: "Adversaries can use this to register code to be executed when the shell encounters specific interrupts either to gain execution or as a persistence mechanism."
            ->  executeCode,
                persistence

        | executeCode 
            +>  computer.infectedLinuxComputer 

        # antivirus
            info: "https://attack.mitre.org/mitigations/M1049/"
            +>  kernelModulesAndExtensions

        # audit 
            info: "https://attack.mitre.org/mitigations/M1047/"
            +>  serverSoftwareComponent

        # codeSigning
            info: "https://attack.mitre.org/mitigations/M1045/"  
            +>  serverSoftwareComponent

        # disableOrRemoveFeatureOrProgram
            info: "https://attack.mitre.org/mitigations/M1042/"
            +>  sshHijacking

        # executionPrevention
            +>  kernelModulesAndExtensions

        # environmentVariablePermissions // Prevent modification of environment variables by unauthorized users and groups.
            info: "https://attack.mitre.org/mitigations/M1039/"
            ->  clearCommandHistory,
                hISTCONTROL              

        # limitSoftwareInstallation
            info: "https://attack.mitre.org/mitigations/M1033/"
            +>  systemdService

        # operatingSystemConfiguration
            info: "https://attack.mitre.org/mitigations/M1028/" 
            +>  bashHistory,
                hISTCONTROL,
                setuidAndSetgid,
                sudoCaching

        # passwordPolicies // Set and enforce secure password policies for accounts 
            info: "https://attack.mitre.org/mitigations/M1027/"
            +>  sshHijacking

        # privilegedAccountManagement
            info: "https://attack.mitre.org/mitigations/M1026/"
            +>  bootkit,
                sshHijacking   

        # restrictFileAndDirectoryPermissions
            info: "https://attack.mitre.org/mitigations/M1022/"
            +>  bash_profileAndBashrc,
                sshHijacking,
                sudo,
                systemdService   

        # userAccountControl
            info: "https://attack.mitre.org/mitigations/M1052/"
            +>  sshHijacking    
    }

    asset MacOS extends OS {
        & bashHistory 
            ->  indicatorRemovalOnHost,
                macosAdministrator.adminCredentials,
                macOSUser.userCredentials

        | _bash_profileAndBashrc
            ->  bash_profileAndBashrc

        & bash_profileAndBashrc 
            info: "Adversaries can insert code into these files to gain persistence each time a user logs in or opens a new shell."
            ->  persistence

        | codeSigningCertificate
            info: "Adversaries are known to use code signing certificates to masquerade malware and tools as legitimate binaries. Code signing certificates may be used to bypass security policies that require signed code to execute on a system."

        & _clearCommandHistory
            ->  clearCommandHistory       

        & clearCommandHistory
            info: "Adversaries can abuse this by searching these files for cleartext passwords. Additionally, adversaries can use a variety of methods to prevent their own commands from appear in these logs." 
            ->  bypassLogAnalysis, 
                bypassHostForensicAnalysis

        & _dylibHijacking   
            ->  dylibHijacking 

        & dylibHijacking 
            info: "Adversaries can take advantage of ambiguous paths to plant dylibs to gain privilege escalation or persistence."
            ->  service._exploitationForPrivilegeEscalation // leads to Exploitation for Privilege Escalation attack

        & elevatedExecutionWithPrompt
            info: "Adversaries may leverage the AuthorizationExecuteWithPrivileges API to escalate privileges by prompting the user for credentials."
            ->  rootMac.adminRights,
                masquerading // combined with Masquerading to trick the user into granting escalated privileges to malicious code

        & emond
            info: "Adversaries may use Event Monitor Daemon (emond) to establish persistence by scheduling malicious commands to run on predictable event triggers."
            ->  persistence,
                service._exploitationForPrivilegeEscalation

        | executeCode 
            +>  computer.infectedMacOSComputer   

        & gatekeeperBypass
            info: "Apps loaded onto the system from USB flash drive, optical disk, external hard drive, or even from a drive shared over the local network won't set this flag. Additionally, other utilities or events like drive-by downloads don't necessarily set it either. This completely bypasses the built-in Gatekeeper check."
            ->  bypassApplicationWhitelisting,
                bypassAntivirus 

        & hiddenUsers
            info: "By using the Create Account technique with a userID under 500 and enabling this property (setting it to Yes), an adversary can hide their user accounts much more easily."
            ->  macosAdministrator.createUserAccount

        & hiddenWindow
            info: "A common use for this is when applications run in the system tray, but don't also want to show up in the Dock. However, adversaries can abuse this feature and hide their running window."

        & hISTCONTROL
            info: "Adversaries can use this to operate without leaving traces by simply prepending a space to all of their terminal commands."     
            ->  bypassLogAnalysis,
                bypassHostForensicAnalysis

        | infectedOS
            +>  bashHistory

        & inputPrompt
            info: "Adversaries may mimic this functionality to prompt users for credentials with a seemingly legitimate prompt for a number of reasons that mimic normal usage."
            ->  appleScript, // leads to AppleScript attack
                user.userCredentials

        & kernelModulesAndExtensions
            info: "Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses."
            ->  rootkit  

        & launchAgent
            info: "Adversaries may install a new launch agent that can be configured to execute at login by using launchd or launchctl to load a plist into the appropriate directories."     
            ->  persistence

        & launchctl
            info: "Adversaries can abuse this functionality to execute code or even bypass whitelisting if launchctl is an allowed process."
            ->  executeCode,
                bypassApplicationWhitelisting,
                bypassProcessWhitelisting,
                bypassFileOrPathWhitelisting  

        & launchDaemon
            info: "Launch Daemons may be created with administrator privileges, but are executed under root privileges, so an adversary may also use a service to escalate privileges from administrator to root. Adversary can modify a current Launch Daemon's executable and gain persistence or Privilege Escalation."
            ->  persistence,
                service._exploitationForPrivilegeEscalation         

        & lC_LOAD_DYLIB_Addition
            info: "Adversaries can remediate the issue that any changes will invalidate digital signatures on binaries because the binary is being modified by simply removing the LC_CODE_SIGNATURE command from the binary so that the signature isn't checked at load time."
            ->  persistence

        & lC_MAINHijacking
            info: "LC_MAIN that points to the binary's entry point for execution and can be hijacked so that initial execution flows to a malicious addition. By modifying a binary in this way, application whitelisting can be bypassed because the file name or application path is still the same."
            ->  bypassApplicationWhitelisting,
                bypassProcessWhitelisting,
                bypassFileOrPathWhitelisting 

        & localJobScheduling
            info: "An adversary may use job scheduling to execute programs at system startup or on a scheduled basis for Persistence,  to conduct Execution as part of Lateral Movement, to gain root privileges, or to run a process under the context of a specific account."
            ->  persistence,
                root.adminRights

        & loginItem
            info: "If an adversary can register their own login item or modified an existing one, then they can use it to execute their code for a persistence mechanism each time the user logs in."
            ->  persistence      

        & logonScripts
            ->  rootMac.adminRights  

        & plistModification
            info: "Adversaries can modify these plist files to point to their own code, can use them to execute their code in the context of another user, bypass whitelisting procedures, or even use them as a persistence mechanism."
            ->  bypassApplicationWhitelisting,
                bypassProcessWhitelisting,
                bypassFileOrPathWhitelisting,
                executeCode,
                persistence

        & portKnocking
            info: "This technique has been observed to both for the dynamic opening of a listening port as well as the initiating of a connection to a listening server on a different system."
            ->  bypassDefensiveNetworkServiceScanning

        & rc_common
            info: "Adversaries can use the rc.common file as a way to hide code for persistence that will execute on each reboot as the root user."
            ->  persistence

        & reopenedApplications
            info: "An adversary can modify one of these files directly to include a link to their malicious executable to provide a persistence mechanism each time the user reboots their machine."
            ->  persistence

        | securitydMemory
            info: "If an adversary can obtain root access (allowing them to read securityd's memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user's logon keychain."
            ->  keychainCollection

        & setuidAndSetgid
            info: "An adversary can take advantage of this to either do a shell escape or exploit a vulnerability in an application with the setsuid or setgid bits to get code running in a different user's context."
            ->  service._exploitationForPrivilegeEscalation,
                persistence

        | source
            ->  executeCode

        & sshHijacking
            info: "In order to move laterally from a compromised host, adversaries may take advantage of trust relationships established with other systems via public key authentication in active SSH sessions by hijacking an existing connection to another system."
            ->  sSHCredentialInterception

        | _sudo
            ->  sudo
            
        & sudo
            info: "Adversaries can take advantage of these configurations to execute commands as other users or spawn processes with higher privileges."
            ->  service._exploitationForPrivilegeEscalation  

        | _sudoCaching
            ->  sudoCaching
            
        & sudoCaching
            info: "Adversaries can abuse poor configurations of this to escalate privileges without needing the user's password."
            ->  service._exploitationForPrivilegeEscalation

        | trap
            info: "Adversaries can use this to register code to be executed when the shell encounters specific interrupts either to gain execution or as a persistence mechanism."
            ->  executeCode,
                persistence

        | videoCapture
            -> computer.collectVideo     

        | spaceAfterFileName
            ->  user.userExecution

        & networkShareDiscovery
            ->  internalNetwork.networkShareDiscovery

        & userSecuritySoftwareDiscovery
            info: "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on the system. This may include things such as local firewall rules and anti-virus. These checks may be built into early-stage remote access tools."
            ->  service._exploitationForDefenseEvasion // leads to exploitation for defense evasion attack

        & adminSecuritySoftwareDiscovery
            ->  service._exploitationForDefenseEvasion // leads to exploitation for defense evasion attack

        | windowsManagementInstrumentation
            ->  scripting  

        & keychainCollection
            info: "If an adversary knows the credentials for the login keychain, then they can get access to all the other credentials stored in this vault."
            ->  user.userCredentials

        & appleScript
            ->  executeCode

        & _startupItems
            ->  startupItems

        & startupItems
            info: "An adversary can create the appropriate folders/files in the StartupItems directory to register their own persistence mechanism."
            ->  persistence,
                service._exploitationForPrivilegeEscalation // leads to Exploitation for Privilege Escalation attack 

        # antivirus
            info: "https://attack.mitre.org/mitigations/M1049/"
            +>  kernelModulesAndExtensions

        # audit 
            info: "https://attack.mitre.org/mitigations/M1047/"
            +>  lC_LOAD_DYLIB_Addition

        # codeSigning
            info: "https://attack.mitre.org/mitigations/M1045/"  
            +>  appleScript,
                lC_LOAD_DYLIB_Addition,
                lC_MAINHijacking

        # disableOrRemoveFeatureOrProgram
            info: "https://attack.mitre.org/mitigations/M1042/"
            +>  emond,
                reopenedApplications,
                sshHijacking

        # executionPrevention
            +>  adminSecuritySoftwareDiscovery,
                elevatedExecutionWithPrompt,
                gatekeeperBypass,
                hiddenWindow,
                kernelModulesAndExtensions,
                lC_LOAD_DYLIB_Addition,
                networkShareDiscovery,
                userSecuritySoftwareDiscovery            

        # environmentVariablePermissions // Prevent modification of environment variables by unauthorized users and groups.
            info: "https://attack.mitre.org/mitigations/M1039/"
            ->  clearCommandHistory,
                hISTCONTROL   

        # operatingSystemConfiguration
            info: "https://attack.mitre.org/mitigations/M1028/" 
            +>  bashHistory,
                hiddenUsers,
                hISTCONTROL,
                setuidAndSetgid,
                sudoCaching

        # passwordPolicies // Set and enforce secure password policies for accounts 
            info: "https://attack.mitre.org/mitigations/M1027/"
            +>  keychainCollection,
                sshHijacking

        # privilegedAccountManagement
            info: "https://attack.mitre.org/mitigations/M1026/"
            +>  sshHijacking

        # restrictFileAndDirectoryPermissions
            info: "https://attack.mitre.org/mitigations/M1022/"
            +>  bash_profileAndBashrc,
                dylibHijacking,
                logonScripts,
                plistModification,
                sshHijacking,
                startupItems,
                sudo

        # userAccountControl
            info: "https://attack.mitre.org/mitigations/M1052/"
            +>  sshHijacking
    }    
}

category Network {
    asset Browser {
        & driveByCompromise
            info: "A drive-by compromise is when an adversary gains access to a system through a user visiting a website over the normal course of browsing." 
            ->  thirdpartySoftware.stealApplicationAccessToken

        | executionThroughMaliciousContent

        & credentialsFromWebBrowsers
            info: "Adversaries may acquire credentials from web browsers by reading files specific to the target browser."
            ->  user.userCredentials
        
        & spearphishingLink
            info: "The links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging User Execution."
            ->  user.spearphishingLinkClicked

        & spearphishingAttachment
            info: "Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email." 
            ->  user.spearphishingAttachmentDownload,
                windows.controlPanelItems // malicious Control Panel items can be delivered via Spearphishing Attachment campaigns

        | browserBookmark
            ->  browserBookmarkDiscovery

        | browserBookmarkDiscovery 
            ->  user.userInformation,
                internalNetwork.internalNetworkResourcesInformation

        | installExtensions
            ->  browserExtensions

        & browserExtensions
            info: "Once the extension is installed, it can browse to websites in the background, steal all information that a user enters into a browser, to include credentials, and be used as an installer for a RAT for persistence." 
            ->  user.userInformation,
                user.userCredentials,
                os.persistence

        | _websiteDefacement
            info: "This is a helper attack step that websites are a common victim of defacement. Website defacement may also be used as setup, or a precursor, for future attacks such as Drive-by Compromise."
            ->  driveByCompromise // Belongs to Drive-by Compromise attack

        & stealWebSessionCookie
            info: "An adversary may steal web application or service session cookies and use them to gain access web applications or Internet services as an authenticated user without needing credentials."
            ->  webSessionCookie // after an adversary acquires a valid cookie, they can then perform a Web Session Cookie technique to login to the corresponding web application

        & webSessionCookie
            info: "Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated."
            ->  bypassLogonCredentials,
                bypassMultiFactorAuthentication

        | bypassLogonCredentials

        | bypassMultiFactorAuthentication   

        # restrictWebBasedContent // Block unknown or unused attachments by default that should not be transmitted over email.
            info: "https://attack.mitre.org/mitigations/M1021/"
            ->  spearphishingAttachment, 
                spearphishingLink,
                service.spearphishingViaService,
                driveByCompromise,
                os.domainGenerationAlgorithms,
                windows.compiledHTMLFile,
                externalNetwork.webService
    }

    asset InternalNetwork {
        | obfuscateNetworkTraffic

        # sSLOrTLSInspection
            info: "https://attack.mitre.org/mitigations/M1020/"
            ->  obfuscateNetworkTraffic,
                os.standardCryptographicProtocol

        & applicationLayerConnexion
            ->  c2Connexion,
                bypassNetworkIntrusionDetection,
                externalNetwork.bypassNetworkIntrusionDetection

        & dataExfiltration
            ->  externalNetwork.dataExfiltrated

        & defacement
            info: "An adversary may deface systems internal to an organization in an attempt to intimidate or mislead users."
        
        E firewallExists
            <-  firewall
            ->  firewall._bypassFirewall
               
        | bypassAccessControl

        | bypassFirewall

        | bypassNetworkIntrusionDetection 

        | bypassProxies

        & usertransmittedDataManipulation
            info:"By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making. "

        & admintransmittedDataManipulation
            info:"By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making. " 

        & c2Connexion
            ->  c2Server.c2Connected

        & exchangeServerCollection
            info: "Adversaries may leverage a user's credentials and interact directly with the Exchange server to acquire information from within a network."
            ->  os.dataCollected

        & exploitPublicFacingApplication
            info: "When exploiting Public-Facing Application, depending on the flaw being exploited it may include Exploitation for Defense Evasion."
            ->  service.exploitationForDefenseEvasion, // leads to exploitation for defense evasion attack
                os.systemAccess

        | networkShareDiscovery
            info: "Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network. "
        
        | internalNetworkResourcesInformation

        | remoteSystemsConnection
            ->  networkSharedDrive.dataFromNetworkSharedDrive 

        | webShell
            info: "Web shells may serve as Redundant Access or as a persistence mechanism."
            ->  os.redundantAccess, // use a Web Shell to maintain access 
                persistence

        | persistence 
        
        | remoteAccess

        | remoteCOMExecution
            info: "Adversaries may use the Windows Component Object Model (COM) and Distributed Component Object Model (DCOM) to execute on remote systems as part of lateral movement."

        | remoteExecution

        # encryptSensitiveInformation
            info:"https://attack.mitre.org/mitigations/M1041/"   
            ->  usertransmittedDataManipulation,
                admintransmittedDataManipulation,
                exchangeServerCollection

        # executionPrevention             
            info: "https://attack.mitre.org/mitigations/M1038/"
            ->  os.networkServiceScan

        # filterNetworkTraffic
            info: "https://attack.mitre.org/mitigations/M1037/"   
            ->  os.customCommandAndControlProtocol,
                os.endpointDenialOfService,
                os.multiHopProxy,
                os.networkDenialOfService,
                os.standardNonApplicationLayerProtocol,
                windows.bITSJobs 

        # limitAccessToResourceOverNetwork
            info: "https://attack.mitre.org/mitigations/M1035/"   
            ->  windows.remoteDesktopProtocol,
                windows.sharedWebroot,
                hardwareAddition.hardwareAdditions,
                service.externalRemoteServices

        # multiFactorAuthentication
            info: "https://attack.mitre.org/mitigations/M1032/"
            ->  exchangeServerCollection,
                service.externalRemoteServices

        # networkIntrusionPrevention
            info: "https://attack.mitre.org/mitigations/M1031/"
            ->  applicationLayerConnexion,
                c2Connexion,
                dataExfiltration,
                os.commonlyUsedPortsConnection,
                os.connectionProxy,
                os.customCommandAndControlProtocol,
                os.customCryptographicProtocol,
                os.dataCompressed,
                os.dataEncoding,
                os.fallbackChannels,
                os.multibandCommunication,
                os.multilayerEncryption,
                os.multiStageChannels,
                os.networkServiceScan,
                os.redundantAccess,
                os.remoteFileCopy,
                os.standardCryptographicProtocol,
                os.standardNonApplicationLayerProtocol,
                os.uncommonlyUsedPortsConnection,
                windows.templateInjection,
                c2Server.dataExfiltrated,
                c2Server.dataExfiltrated,
                c2Server.generateDomainNames

        # networkSegmentation
            info: "https://attack.mitre.org/mitigations/M1030/"
            ->  exploitPublicFacingApplication,
                remoteAccess,
                administrator.createUserAccount,
                os.commonlyUsedPortsConnection,
                os.uncommonlyUsedPortsConnection,
                os.customCommandAndControlProtocol,
                os.privateKeys,
                os.runtimeDataManipulation,
                os.standardNonApplicationLayerProtocol,
                windows.componentObjectModelAndDistributedCOM,
                windows.domainTrustDiscovery,
                windows.userServiceStop,
                windows.adminServiceStop,
                windows.sharedWebroot,
                windows.systemServiceStop,
                service._exploitationOfRemoteServices,
                service.externalRemoteServices,
                thirdpartySoftware.trustedRelationship

        # vulnerabilityScanning // Regularly scan the internal network for available services to identify new and potentially vulnerable services.
            info: "https://attack.mitre.org/mitigations/M1016/"
            ->  exploitPublicFacingApplication,
                service._exploitationOfRemoteServices,
                service.supplyChainCompromise
    }

    asset NetworkSharedDrive extends InternalNetwork {
        & taintSharedContent
            info: "Once a user opens the shared tainted content, the malicious portion can be executed to run the adversary's code on a remote system."
            ->  windows.executeCode

        | dataFromNetworkSharedDrive
            info: "Adversaries may search network shares on computers they have compromised to find files of interest."
            ->  os.sensitiveDataCollected
    }

    asset ExternalNetwork {
        | obfuscateNetworkTraffic

        | bypassFirewall

        | bypassNetworkIntrusionDetection

        | dataExfiltrated

        & defacement
            info: "Websites are a common victim of defacement that often targeted by adversary and hacktivist groups in order to push a political message or spread propaganda."
            ->  browser._websiteDefacement

        & exploitPublicFacingApplication
            info: "When exploiting Public-Facing Application, depending on the flaw being exploited it may include Exploitation for Defense Evasion."
            ->  service.exploitationForDefenseEvasion, // leads to exploitation for defense evasion attack
                os.systemAccess

        & webService
            info: "Adversaries may use an existing, legitimate external Web service as a means for relaying commands to a compromised system."
            ->  os.bypassBinaryAnalysis,
                os.bypassLogAnalysis,
                internalNetwork.bypassFirewall,
                bypassFirewall,
                c2Server.c2Connected   

        # filterNetworkTraffic // Modify network and/or host firewall rules, as well as other network controls, to only allow legitimate BITS traffic.
            info: "https://attack.mitre.org/mitigations/M1037/"   
            ->  os.endpointDenialOfService,
                os.multiHopProxy,
                os.networkDenialOfService,
                os.standardNonApplicationLayerProtocol,
                windows.bITSJobs  

        # networkIntrusionPrevention
            info: "https://attack.mitre.org/mitigations/M1031/"
            ->  webService,
                c2Server.dataObfuscation,
                c2Server.generateDomainNames,
                os.commonlyUsedPortsConnection,
                os.uncommonlyUsedPortsConnection,
                os.connectionProxy,
                os.dataEncoding,
                os.fallbackChannels,
                os.multibandCommunication,
                os.multilayerEncryption,
                os.multiStageChannels,
                os.redundantAccess,
                os.remoteFileCopy,
                os.standardCryptographicProtocol,
                os.standardNonApplicationLayerProtocol

        # networkSegmentation // Segment networks and systems appropriately to reduce access to critical systems and services to controlled methods.
            info: "https://attack.mitre.org/mitigations/M1030/"
            ->  exploitPublicFacingApplication,
                service._exploitationOfRemoteServices,
                os.commonlyUsedPortsConnection,
                os.uncommonlyUsedPortsConnection,
                os.privateKeys,
                os.runtimeDataManipulation,
                os.standardNonApplicationLayerProtocol,
                windows.userServiceStop,
                windows.adminServiceStop,
                windows.systemServiceStop          

        # sSLOrTLSInspection
            info: "https://attack.mitre.org/mitigations/M1020/"
            ->  obfuscateNetworkTraffic,
                os.standardCryptographicProtocol
    }

    asset C2Server {
        | c2Connected 
            ->  communicate,
                dataObfuscation,
                packetCapture

        | communicate 

        & dataExfiltrated

        | generateDomainNames 

        | _dataObfuscation
            ->  dataObfuscation

        & dataObfuscation
            info: "This encompasses many methods, such as adding junk data to protocol traffic, using steganography, commingling legitimate traffic with C2 communications traffic, or using a non-standard data encoding system."
            ->  externalNetwork.bypassNetworkIntrusionDetection,
                internalNetwork.bypassNetworkIntrusionDetection,
                bypassNetworkIntrusionDetection

        | packetCapture

        | bypassNetworkIntrusionDetection
    }

    asset OtherNetworkMedium extends C2Server {
        | transmit
    }

    asset Firewall {
        & _bypassFirewall
            ->  bypassFirewall,
                internalNetwork.dataExfiltration,
                internalNetwork.c2Connexion

        | bypassFirewall

        # filterNetworkTraffic // Modify network and/or host firewall rules, as well as other network controls, to only allow legitimate BITS traffic.
            info: "https://attack.mitre.org/mitigations/M1037/"   
            ->  windows.bITSJobs,
                linux.portKnocking,
                macOS.portKnocking

        # networkSegmentation // Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports for that particular network segment.
            info: "https://attack.mitre.org/mitigations/M1030/"
            ->  os.commonlyUsedPortsConnection,
                os.uncommonlyUsedPortsConnection,
                windows.distributedComponentObjectModel,
                windows.remoteDesktopProtocol,
                windows.windowsRemoteManagement,
                thirdpartySoftware.useThirdpartySoftware
    }
}

category Hardware {
    asset Computer {
        | infectedComputer
            ->  removableMedia.infectedMedia,
                internalNetwork.applicationLayerConnexion,
                os.commonlyUsedPortsConnection,
                os.uncommonlyUsedPortsConnection,
                removableMedia.dataFromRemovableMedia

        | infectedWindowsComputer
            ->  windows.dynamicDataExchange

        | infectedLinuxComputer

        | infectedMacOSComputer 

        | unresponsive

        | exfiltrationOverPhysicalMedium
            ->  removableMedia.dataExfiltrated

        E microphoneExists
            <-  microphone
            ->  microphone.collectAudio

        & collectAudio
            ->  os.dataCollected
        
        | peripheralDeviceDiscovery
            info: "Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system. The information may be used to enhance their awareness of the system and network environment or may be used for further actions."

        E webcamExists
            <-  webcam
            ->  webcam._collectVideo

        E videoCallApplicationExists
            <-  videoCallApplication
            ->  videoCallApplication._collectVideo

        | collectVideo
            ->  os.dataCollected
    }

    asset HardwareAddition extends Computer {
        & hardwareAdditions
            info: "Computer accessories, computers, or networking hardware may be introduced into a system as a vector to gain execution." 
            ->  os.executeCode  
    }

    asset NTFSPartition extends Computer {
        E nftsPartitionExists
            <-  nftsPartition
            ->  windows.ntfsFileAttributes
    } 

    asset Webcam {
        | _collectVideo
            -> computer.collectVideo
    }

    asset RemovableMedia {
        | dataFromRemovableMedia
            ->  os.sensitiveDataCollected

        | infectedMedia

        & dataExfiltrated
    }
    
    asset Microphone {
        | collectAudio
            ->  computer.collectAudio
    }
}

associations {    

    User [user] 1 <--Ui--> 1-* [os] OS
    User [windowsUser] 1 <--Ui--> 1-* [windows] Windows
    User [linuxUser] 1 <--Ui--> 1-* [linux] Linux   
    User [macOSUser] 1 <--Ui--> 1-* [macOS] MacOS
    User [user] 1 <--Use--> 1-* [computer] Computer
    User [user] 1 <--Use--> 1-* [service] Service
    User [user] 1 <--Use--> 1-* [thirdpartySoftware] ThirdpartySoftware
    User [user] 1 <--Use--> 1-* [browser] Browser
    User [user] 1 <--Use--> 1-* [internalNetwork] InternalNetwork
    User [user] 1 <--Use--> 1-* [externalNetwork] ExternalNetwork
    User [user] 1 <--Use--> 1-* [removableMedia] RemovableMedia

    RemoteDesktopUser [windowsRemoteDestopUser] 1 <--Ui--> 1-* [windows] Windows

    Administrator [administrator] 1 <--Manage--> 1-* [user] User
    Administrator [administrator] 1 <--Ui--> 1-* [os] OS
    Administrator [windowsAdministrator] 1 <--Ui--> 1-* [windows] Windows
    Administrator [linuxAdministrator] 1 <--Ui--> 1-* [linux] Linux
    Administrator [macosAdministrator] 1 <--Ui--> 1-* [macOS] MacOS
    Administrator [administrator] 1 <--Use--> 1-* [computer] Computer
    Administrator [administrator] 1 <--Use--> 1-* [service] Service
    Administrator [administrator] 1 <--Use--> 1-* [thirdpartySoftware] ThirdpartySoftware
    
    WindowsAdmin [windowsAdmin] 1-* <--Ui--> 1 [windowsWindowsAdmin] Windows

    Root [root] 1 <--Ui--> 1-* [os] OS
    Root [rootLinux] 1 <--Ui--> 1-* [linux] Linux
    Root [rootMac] 1 <--Ui--> 1-* [macOS] MacOS

    SYSTEM [system] 1 <--Ui--> 1 [os] OS 
    SYSTEM [systemWindows] 1 <--Ui--> 1-* [windows] Windows
    SYSTEM [system] 1 <--Use--> 1-* [service] Service
    SYSTEM [system] 1 <--Use--> 1-* [thirdpartySoftware] ThirdpartySoftware

    Computer [computer] 1 <--Use--> 1-* [removableMedia] RemovableMedia
    Computer [computer] 1 <--Control--> 1 [c2Server] C2Server

    Browser [browser] 1-* <--Software--> 1 [os] OS
    Browser [browser] 1-* <--Software--> 1 [windows] Windows
    Browser [browser] 1-* <--Use--> 1-* [user] User
    Browser [browser] 1-* <--Use--> 1-* [service] Service
    Browser [browser] 1-* <--Use--> 1-* [thirdpartySoftware] ThirdpartySoftware 
    Browser [browser] 1-* <--Connect--> 1-* [internalNetwork] InternalNetwork
    Browser [browser] 1-* <--Connect--> 1-* [externalNetwork] ExternalNetwork 
    
    OS [os] 1 <--System--> 1-* [computer] Computer
    OS [os] 1-* <--Connect--> 1-* [c2Server] C2Server
    OS [os] 1 <--Contain--> 1 [windows] Windows
    OS [os] 1 <--Contain--> 1 [linux] Linux  
    OS [os] 1 <--Contain--> 1 [macOS] MacOS
    OS [os] 1 <--Contain--> 1-* [service] Service
    OS [os] 1 <--Contain--> 1-* [thirdpartySoftware] ThirdpartySoftware  
    OS [os] 1 <--Use--> 1-* [removableMedia] RemovableMedia

    Windows [windows] 1 <--Contain--> 1-* [service] Service
    Windows [windows] 1 <--Use--> 1-* [removableMedia] RemovableMedia
    Linux [linux] 1 <--Contain--> 1-* [service] Service
    MacOS [macOS] 1 <--Contain--> 1-* [service] Service

    Service [service] 1-* <--Contain--> 1-* [thirdpartySoftware] ThirdpartySoftware
    Service [service] 1-* <--Connect--> 1 [c2Server] C2Server
    
    //Computer [computer] 1 <--Software--> 1 [macOS] MacOS
    Computer [computerWindows] 1 <--System--> 1 [windows] Windows
    //Computer [computer] 1 <--Software--> 1 [linux] Linux
    
    InternalNetwork [internalNetwork] 1-* <--Connect--> 1-* [externalNetwork] ExternalNetwork   
    InternalNetwork [internalNetwork] 1 <--Connect--> 1 [c2Server] C2Server
    InternalNetwork [internalNetwork] 1-* <--Connect--> 1-* [os] OS
    InternalNetwork [internalNetworkWindows] 1-* <--Connect--> 1-* [windows] Windows
    InternalNetwork [internalNetwork] 1-* <--Use--> 1 [administrator] Administrator
    InternalNetwork [internalNetwork] 1 <--Connect--> 1-* [computer] Computer
    //InternalNetwork [internalNetwork] 1 <--Contain--> 1-* [macOS] MacOS
    InternalNetwork [internalNetwork] 1 <--Contain--> 1-* [service] Service
    InternalNetwork [internalNetwork] 1 <--Contain--> 1-* [thirdpartySoftware] ThirdpartySoftware
    InternalNetwork [internalNetwork] 1 <--Contain--> 1-* [networkSharedDrive] NetworkSharedDrive
    InternalNetwork [internalNetwork] 1 <--Connect--> 1-* [hardwareAddition] HardwareAddition
    ExternalNetwork [externalNetwork] 1 <--Connect--> 1 [c2Server] C2Server
    ExternalNetwork [externalNetwork] 1-* <--Connect--> 1-* [computer] Computer
    ExternalNetwork [externalNetwork] 1-* <--Connect--> 1-* [os] OS
    ExternalNetwork [externalNetworkWindows] 1-* <--Connect--> 1 [windows] Windows
    ExternalNetwork [externalNetwork] 1-* <--Use--> 1 [administrator] Administrator
    ExternalNetwork [externalNetwork] 1 <--Contain--> 1-* [service] Service   
    //NetworkSharedDrive [networkSharedDrive] 1-* <--Ui--> 1-* [c2Server] C2Server
    NetworkSharedDrive [networkSharedDrive] 1-* <--Connect--> 1 [os] OS
    NetworkSharedDrive [networkSharedDrive] 1-* <--Connect--> 1 [windows] Windows
    OtherNetworkMedium [otherNetworkMedium] 1-* <--Connect--> 1 [os] OS
    
    Firewall [firewall] 0-1 <--Protect--> 1-* [os] OS
    Firewall [firewall] 0-1 <--Protect--> 1-* [windows] Windows
    Firewall [firewall] 0-1 <--Protect--> 1-* [linux] Linux
    Firewall [firewall] 0-1 <--Protect--> 1-* [macOS] MacOS
    Firewall [firewall] 0-1 <--Protect--> 1-* [thirdpartySoftware] ThirdpartySoftware
    
    InternalNetwork [internalNetwork] 1 <--Protect--> 0-1 [firewall] Firewall
    ExternalNetwork [externalNetwork] 1 <--Protect--> 0-1 [firewall] Firewall

    //Firewall [firewall] 0-1 <--Protect--> 1-* [thirdpartySoftware] ThirdpartySoftware
    Computer [computer] 1-* <--Protect--> 0-1 [firewall] Firewall
    Computer [computer] 1 <--Use--> 1 [microphone] Microphone
    VideoCallApplication [videoCallApplication] 1-* <--Software--> 1 [computer] Computer
    Webcam [webcam] 1 <--Hardware--> 1 [computer] Computer
    NTFSPartition [nftsPartition] 1-* <--System--> 1 [windows] Windows
    NTFSPartition [nftsPartition] 1-* <--Extends--> 1 [windowsComputer] Computer
    //HardwareAddition [hardwareAddition] 1-* <--Extends--> 1 [computerAdditions] Computer
    HardwareAddition [hardwareAddition] 1-* <--System--> 1 [os] OS
}
