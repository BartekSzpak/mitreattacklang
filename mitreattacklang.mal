category Person {
    asset User {
        | userRights
            -> os.accountDiscovery,
                os.domainDiscovery,
                os.applicationWindowDiscovery,
                os.bruteForce,
                os.passwordPolicyDiscovery,
                os.runningProcessDiscovery,
                os.remoteSystemDiscovery,
                os.userCommandLineInterface,
                os.processInjection,
                computer.userDataDestruction,
                computer.fileDiscovery,
                computer.directoryDiscovery,
                computer.fileDeletion,
                computer.uploadRemoteFile, 
                computer.downloadRemoteFile,
                computer.collectAudio

        | userCredentials

        
    }

    asset Administrator {
        | adminRights
            -> user.userRights,
               windows.createService,
               computer.adminDataDestruction,
               os.detailedRunningProcessDiscovery,
               os.detailedRemoteSystemDiscovery,
               os.adminCommandLineInterface,
               windows.bootkit,
               linux.bootkit


    }
    asset WindowsAdmin extends Administrator{
        | systemRights
            -> windows.executeService
               administrator.adminRights

    }
    asset Root extends Administrator{

    }
    asset Employee {
        & spearphishingLinkClicked [UniformDistribution(20,1)]
            rationale: "20 % link https://faui1-files.cs.fau.de/filepool/publications/zina/2017-benenson-unpacking-spear-phishing.pdf"
            -> browser.spearphishingLink

        | pageVisited
            -> browser.maliciousWebsite
        | adLinkClicked
            -> browser.maliciousAds


        & spearphishingAttachmentDownload
            -> browser.spearphishingAttachment
        # trainedEmployee 
            -> spearphishingAttachmentDownload, 
               spearphishingLinkClicked, 
               userExecution,
               _mediaInserted
        
        & userExecution
            -> computer.infectedComputer,
               computer.infectedWindowsComputer
        | insertMedia
            -> userExecution,
               manualManipulation
        | manualManipulation
            -> user.userRights
        | mediaInserted
            -> _mediaInserted
        & _mediaInserted
            -> removableMedia.dataExfiltrated
        

    }
    asset Adversary {
        | maliciousWebsite
            -> browser.maliciousWebsite, 
               employee.pageVisited
        | maliciousAds
            -> browser.maliciousAds, 
               employee.adLinkClicked
        | spearphishingAttachmentAttack
        -> employee.spearphishingAttachmentDownload,
           browser.spearphishingAttachment

        | spearphishingLinkAttack
        -> employee.spearphishingLinkClicked,
           browser.spearphishingLink


        
   
    }
}

category Software {
    asset Services {

    }
    abstractAsset OS{
        & accountDiscovery
            info: "get account names and information"

        & domainDiscovery
            info: "get domain names and information"

        & applicationWindowDiscovery
            info: "get a listing of opened application windows"

        & runningProcessDiscovery
            info: "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software running on systems within the network."
            -> processInjection

        & detailedRunningProcessDiscovery
            info: "Adversaries with admin rights may get better process ownership details"

        & remoteSystemDiscovery
            info: "Adversaries will likely attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system."

        & detailedRemoteSystemDiscovery
            info: "Adversaries with admin rights may get better details of the hosts enumerated"
        
        & adminCommandLineInterface
            //-> // entrypoints of attacks that can be done with command line interface under admin rights
        
        & userCommandLineInterface
            //-> // entrypoints of attacks that can be done with command line interface under user rights
    

        # whitelisting
            -> accountDiscovery,
                domainDiscovery,
                applicationWindowDiscovery,
                runningProcessDiscovery,
                detailedRunningProcessDiscovery,
                remoteSystemDiscovery,
                detailedRemoteSystemDiscovery,
                adminCommandLineInterface, 
                userCommandLineInterface,
                processInjection

        & processInjection
            -> administrator.dminRights,
               bypassAntivirus,
               bypassWhitelisting

        | bypassAntivirus

        | bypassWhitelisting
        
        
        | passwordPolicyDiscovery
            -> bruteForceWithPasswordPolicy
        & bruteForceWithPasswordPolicy
            -> user.userCredentials //the probability distribution should be so that it has higher chance of success than the bruteforce attack

        & bruteForce
            info: "Adversaries may use brute force techniques to attempt access to accounts when passwords are unknown or when password hashes are obtained."
            -> user.userCredentials
        # lockoutPolicies
            -> bruteForce

        | codeDelivered
            -> antivirusCheck
        & antivirusCheck
            -> runCode
        # antivirus
            -> antivirusCheck,
                spearphishingAttachmentDownload,
                spearphishingLinkDownload

        | runCode
            -> computer.infectedComputer

        & spearphishingAttachmentDownload
            -> employee.userExecution

        & spearphishingLinkDownload
            -> employee.userExecution

    }
    asset Linux extends OS {
        & bootkit
            -> persistance
        # secureBootProcess
            -> bootkit
        | persistance

    }
    asset MacOS extends OS{

    }
    asset Windows extends OS{
        & createService
            -> executeService
        # whitelisting
            -> createService
        & executeService
            -> persistance
        | persistance
        & bootkit
            -> persistance
        # secureBootProcess
            -> bootkit

    }
}

category Network {
    asset Browser {
        | maliciousWebsite
            -> checkPlugin, checkBrowser
        & checkBrowser
            -> os.codeDelivered
        # nonVulnerableBrowser
            -> checkBrowser
        & checkPlugin
            -> os.codeDelivered
        # nonVulnerablePlugin
            -> checkPlugin

        | maliciousAds
            -> compromisedBrowser
        & compromisedBrowser
            -> os.codeDelivered
        # adblocker
            -> compromisedBrowser
        
        & spearphishingLink
            -> os.spearphishingLinkDownload

        & spearphishingAttachment
            -> os.spearphishingAttachmentDownload
        # blockAttachmentsCheck 
            info: "Block unknown or unused attachments by default that should not be transmitted over email "
            -> spearphishingAttachment
        # phishingdetection
            -> spearphishingAttachment, 
               spearphishingLink
    }
    asset ExternalNetwork {
        # intrusionDetecion
            -> c2Server.obfuscatedData
        # signatureIdentification
            -> c2Server.obfuscatedData
        | bypassNetworkDetection

        | dataExfiltrated
    }
    asset InternalNetwork {
        & dataExfiltration
            -> externalNetwork.dataExfiltrated
        
        E firewallExists
            <- firewall
            -> firewall.bypassFirewall

            
        # networkIntrusionDetection
            -> dataExfiltration,
               c2Server.dataExfiltrated
    }

    asset Firewall {
        & bypassFirewall
            -> internalNetwork.dataExfiltration

    }

}

category Hardware {
    asset Computer {
        | infectedComputer
            -> removableMedia.infectedMedia

        & fileDiscovery
            info: "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. "

        & directoryDiscovery
            info: "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. "

        & fileDeletion
            info: "Adversaries may remove traces (files) over the course of an intrusion to keep their footprint low or remove them at the end as part of the post-intrusion cleanup process"
            -> bypassHostForensicAnalysisDetection
        | bypassHostForensicAnalysisDetection

        # whitelisting
            -> fileDiscovery, 
               directoryDiscovery,
               fileDeletion,
               userDataDestruction,
               adminDataDestruction, 
               dataCompressed, 
               collectAudio,
               _automatedExfiltration,
               _dataEncrypted

        & uploadRemoteFile
            // leads to file execution attacks
            -> employee.userExecution

        & downloadRemoteFile
            info: "data collection from the user"

        # networkIntrusionDetection
             info : "Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level"
            -> uploadRemoteFile, downloadRemoteFile

        & userDataDestruction

        & adminDataDestruction

        # backup
            -> userDataDestruction,
               adminDataDestruction

        | dataCollected
            -> dataCompressed,
               exfiltrationOverPhysicalMedium,
               dataSizedTransfer,
               exfiltrationOverAternativeProtocol,
               scheduledExfiltration,
               exfiltrationOverC2,
               automatedExfiltration,
               dataEncrypted

        & dataCompressed
            -> exfiltrationOverPhysicalMedium,
               exfiltrationOverAternativeProtocol,
               scheduledExfiltration,
               exfiltrationOverC2,
               automatedExfiltration,
               dataEncrypted

        | dataEncrypted
            info: "Data is encrypted before being exfiltrated in order to hide the information that is being exfiltrated from detection or to make the exfiltration less conspicuous upon inspection by a defender."
            -> _dataEncrypted

        & _dataEncrypted
            -> exfiltrationOverPhysicalMedium,
               exfiltrationOverAternativeProtocol,
               scheduledExfiltration,
               exfiltrationOverC2,
               automatedExfiltration
        
        | automatedExfiltration
            -> _automatedExfiltration

        | exfiltrationOverC2
            -> c2Server.dataExfiltrated

        | scheduledExfiltration
            -> exfiltrationOverC2,
               exfiltrationOverAternativeProtocol
        
        & _automatedExfiltration
            -> exfiltrationOverAternativeProtocol,
               exfiltrationOverC2
        
        | exfiltrationOverAternativeProtocol
            -> internalNetwork.dataExfiltration

        | dataSizedTransfer
            info: "An adversary may exfiltrate data in fixed size chunks instead of whole files or limit packet sizes below certain thresholds. This approach may be used to avoid triggering network data transfer threshold alerts."
            -> c2Server.dataExfiltrated

        | exfiltrationOverPhysicalMedium
            -> removableMedia.dataExfiltrated

        | infectedWindowsComputer

        E Microphone
            <- microphone
            -> collectAudio

        & collectAudio
            -> dataCollected
        

    }
    asset C2Server {
        | c2Connexion
            -> obfuscatedData

        & obfuscatedData
            -> externalNetwork.bypassNetworkDetection

        & dataExfiltrated

        # thresholdAlert
            info:" if the data transfered is to big, the attacker may use data transfer size limit attack to bypass the alert"
            -> dataExfiltrated
    }

    asset RemovableMedia {
        | infectedMedia
            -> employee.insertMedia

        & dataExfiltrated

    }
    asset Microphone {

    }
}

associations {
    
    RemovableMedia [removableMedia] 1-* <-- ui --> 1 [employee] Employee
    
    Adversary [adversary] 1 <-- attack --> 1-* [employee] Employee 
    Adversary [adversary] 1 <-- attack --> 1-* [browser] Browser 
    Adversary [adversary] 1 <-- attack --> 1-* [os] OS 

    User [user] 1 <-- ui--> 1-* [os] OS
    User [windowsUser] 1 <-- ui--> 1-* [windows] Windows
    User [user] 1 <-- ui--> 1 [computer] Computer

    Administrator [administrator] 1 <--ui--> 1-* [user] User
    Administrator [windowsAdministrator] 1 <--ui--> 1-* [windows] Windows
    Administrator [linuxAdministrator] 1 <--ui--> 1-* [linux] Linux
    Administrator [administrator] 1 <--ui--> 1-* [computer] Computer
    Administrator [administrator] 1 <--ui--> 1-* [os] OS

    WindowsAdmin [windowsAdmin] 1 <--ui--> 1 [windows] Windows

    Employee [employee] 1 <--use--> 1-* [browser] Browser
    Employee [employee] 1 <--use--> 1-* [computer] Computer
    Employee [employee] 1 <--use--> 1-* [user] User
    Employee [employee] 1 <--use--> 1-* [os] OS
    Employee [employee] 1 <--use--> 1-* [removableMedia] RemovableMedia

    Computer [computer] 1 <--use--> 1-* [removableMedia] RemovableMedia
    Computer [computer] 1 <--Control--> 1 [c2Server] C2Server


    Browser [browser] 1-* <-- software --> 1 [os] OS
    OS [os] 1 <-- system --> 1-* [computer] Computer
    ExternalNetwork [externalNetwork] 1 <--Contain--> 1 [c2Server] C2Server
    InternalNetwork [internalNetwork] 1 <--Contain--> 1 [c2Server] C2Server

    InternalNetwork [ internalNetwork ] 1 <-- Protect --> 1 [firewall] Firewall
    Computer [computer] 1-* <--use--> 1 [internalNetwork] InternalNetwork
    InternalNetwork [internalNetwork] 1 <--connects--> 1-* [externalNetwork] ExternalNetwork

}