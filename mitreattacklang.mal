category Person {
    asset User {
        | userRights
            ->  os.accountDiscovery,
                os.applicationWindowDiscovery,
                os.automatedCollection,
                os.bruteForce,
                os.compileAfterDelivery,
                os.credentialsInFiles,
                os.dataEncoding,
                os.directoryDiscovery,
                os.domainDiscovery,
                os.domainGenerationAlgorithms,
                os.downloadRemoteFile,
                os.executionGuardrails,
                os.fileDiscovery,
                os.fileDeletion,
                os.filePermissionsModification,
                os.graphicalUserInterface,
                os.inhibitSystemRecovery,
                os.installRootCertificate,
                os.passwordPolicyDiscovery,
                os.permissionGroupsDiscovery,
                os.processInjection,
                os.runningProcessDiscovery,
                os.remoteSystemDiscovery,
                os.rootkit,
                os.scripting,
                os.systemInformationDiscovery,
                os.storedDataManipulation,
                os.uploadRemoteFile, 
                os.userCommandLineInterface,
                os.userDataDestruction, 
                os.userDataEncryptedForImpact,
                os.userDiskWiped,
                windows.appCertDLLs,
                windows.bITSJobs,
                windows.bypassUserAccountControl,
                windows.changeDefaultFileAssociation,
                windows.cmstp,
                windows.compiledHTMLFile,
                windows.componentObjectModelHijacking,
                windows.controlPanelItems,
                windows.deobfuscateOrDecodeFilesOrInformation,
                windows.dLLSearchOrderHijacking,
                windows.domainTrustDiscovery,
                windows.dynamicDataExchange,  
                windows.emailStorageCollection,
                windows.executeMshta,
                windows.executionThroughAPI,
                windows.executionThroughModuleLoad,
                windows.fileSystemPermissionsWeakness,
                windows.indirectCommandExecution,
                windows.inputPrompt,
                windows.installUtil,
                windows.kerberoasting,
                windows.lLMNR_NBT_NS_PoisoningAndRelay,
                windows.logonScripts,
                windows.networkShareConnectionRemoval,
                windows.networkShareDiscovery,
                windows.officeApplicationStartup,
                windows.peripheralDeviceDiscovery,
                windows.powerShell,
                windows.signedBinaryProxyExecution,
                windows.signedScriptProxyExecution,
                windows.sIPAndTrustProviderHijacking,
                windows.templateInjection,
                windows.trustedDeveloperUtilities,
                windows.userSecuritySoftwareDiscovery,
                windows.videoCollection,
                linux.bash_profileAndBashrc,
                linux.clearCommandHistory,
                linux.localJobScheduling,
                linux.portKnocking,
                linux.spaceAfterFileName,
                linux.source,
                linux.sudo,
                linux.sudoCaching,
                macOS.appleScript,
                macOS.bash_profileAndBashrc,
                macOS.clearCommandHistory,
                macOS.dylibHijacking,
                macOS.inputPrompt,
                macOS.launchctl,
                macOS.lC_LOAD_DYLIB_Addition,
                macOS.lC_MAINHijacking,
                macOS.localJobScheduling,
                macOS.loginItem,
                macOS.logonScripts,
                macOS.plistModification,
                macOS.portKnocking,
                macOS.spaceAfterFileName,
                macOS.networkShareDiscovery,
                macOS.userSecuritySoftwareDiscovery,
                macOS.videoCollection,
                macOS.source,
                macOS.sudo,
                macOS.sudoCaching,
                computer.collectAudio,
                service.exploitationForCredentialAccess,
                service.exploitationForDefenseEvasion,
                service.exploitationForPrivilegeEscalation,
                service.exploitationOfRemoteServices,
                service.remoteAccessTools,
                service.usertransmittedDataManipulation,
                thirdpartySoftware.useThirdpartySoftware,
                internalNetwork.usertransmittedDataManipulation,
                externalNetwork.webService

        | userCredentials
            ->  userRights,
                os.validAccounts,  
                windows.outlookEmailCollection,
                internalNetwork.bypassAccessControl,
                internalNetwork.exchangeServerCollection,
                service.userRemoteServicesLogin

        | userInformation     

        # userAccountManagement  
            info: "https://attack.mitre.org/mitigations/M1018/"     
            ->  windows.bITSJobs,
                windows._fileSystemPermissionsWeakness,
                windows.indicatorBlocking,
                windows.passTheTicket,
                linux.localJobScheduling,
                macOS.dylibHijacking,
                macOS.launchctl,
                macOS.launchDaemon,
                macOS.localJobScheduling,
                macOS.loginItem,
                macOS.startupItems,
                service.userRemoteServicesLogin,
                service.adminRemoteServicesLogin,
                thirdpartySoftware.useThirdpartySoftware    
    }

    asset Administrator {
        | adminRights
            info: "Administrator is an actual account."
            ->  user.userRights,
                createUserAccount,    
                os.automatedCollection,
                os.adminCommandLineInterface,
                os.adminDataDestruction,
                os.adminDataEncryptedForImpact,
                os.adminDiskWiped,
                os.credentialsInFiles,
                os.credentialsInRegistry,
                os.detailedRunningProcessDiscovery,
                os.detailedRemoteSystemDiscovery,
                os.diskStructureWipe,
                os.filePermissionsModification,
                os.firmwareCorruption, 
                os.graphicalUserInterface,  
                os.inhibitSystemRecovery, 
                os.installRootCertificate,            
                os.networkServiceScan,
                os.networkSniffing,
                os.sensitiveDataCollected, 
                os.storedDataManipulation,
                os.twoFactorAuthenticationInterception,
                linux.bash_profileAndBashrc,
                linux.bootkit,
                linux.localJobScheduling,
                macOS.bash_profileAndBashrc,
                macOS.keychainCollection,
                macOS.localJobScheduling,
                service.admintransmittedDataManipulation,
                service.applicationDeploymentSystems,
                thirdpartySoftware.useThirdpartySoftware,
                internalNetwork.admintransmittedDataManipulation,
                internalNetwork.bypassAccessControl
             
        | adminCredentials
            ->  adminRights,
                os.validAccounts,
                service.adminRemoteServicesLogin,
                internalNetwork.bypassAccessControl
            
        & createUserAccount 
            ->  os.persistence          
        
        # multiFactorAuthentication
            info: "https://attack.mitre.org/mitigations/M1032/"
            ->  createUserAccount

        # privilegedAccountManagement
            info: "https://attack.mitre.org/mitigations/M1026/"
            ->  createUserAccount,
                os.firmwareCorruption,
                windows.modifyRegistrySettings,
                windows.passTheTicket,
                windows._powerShell,
                windows.signedBinaryProxyExecution,   
                windows.systemFirmware, 
                linux.kernelModulesAndExtensions,
                linux._sudo,
                linux._sudoCaching,
                macOS.kernelModulesAndExtensions,
                macOS.lC_MAINHijacking,
                macOS._sudo,
                macOS._sudoCaching,
                service.applicationDeploymentSystems,
                service.exploitationOfRemoteServices,
                thirdpartySoftware.useThirdpartySoftware // grant access to application deployment systems only to a limited number of authorized administrators
    }
   
    asset WindowsAdmin extends Administrator {
        | adminRights
            info: "WindowsAdmin account is equivalent to Unix Root account."
            +>  accountManipulation,
                windowsWindowsAdmin.accessibilityFeatures,
                windowsWindowsAdmin.adminSecuritySoftwareDiscovery,
                windowsWindowsAdmin.appCertDLLs,
                windowsWindowsAdmin.appInitDLLs,
                windowsWindowsAdmin.applicationShimming,
                windowsWindowsAdmin.authenticationPackage,  
                windowsWindowsAdmin.bITSJobs,  
                windowsWindowsAdmin.bootkit,                                          
                windowsWindowsAdmin.bypassUserAccountControl,
                windowsWindowsAdmin.changeDefaultFileAssociation,
                windowsWindowsAdmin.createService,
                windowsWindowsAdmin.distributedComponentObjectModel,
                windowsWindowsAdmin.dLLSearchOrderHijacking,
                windowsWindowsAdmin.executionThroughAPI,
                windowsWindowsAdmin.executeService,
                windowsWindowsAdmin.extraWindowMemoryInjection,
                windowsWindowsAdmin.fileSystemLogicalOffsets,
                windowsWindowsAdmin.fileSystemPermissionsWeakness,
                windowsWindowsAdmin.hooking,
                windowsWindowsAdmin.hypervisor,
                windowsWindowsAdmin.imageFileExecutionOptionsInjection,
                windowsWindowsAdmin.lSASS_Driver,
                windowsWindowsAdmin.networkShareConnectionRemoval,
                windowsWindowsAdmin.officeApplicationStartup,
                windowsWindowsAdmin.passwordFilterDLL,
                windowsWindowsAdmin.portMonitors,
                windowsWindowsAdmin.powerShell,
                windowsWindowsAdmin.queryRegistery,
                windowsWindowsAdmin.sIDHistoryInjection,
                windowsWindowsAdmin.scheduledTask,
                windowsWindowsAdmin.systemFirmware

        | adminCredentials

        & accountManipulation
            ->  user.userCredentials

        # multiFactorAuthentication
            +>  accountManipulation     

        | bypassWindowsUserAccountControl     
    }

    
    asset Root extends Administrator {
        | rootRights
            info: "Unix Root account is equivalent to WindowsAdmin account."
            ->  linux.kernelModulesAndExtensions,
                macOS.adminSecuritySoftwareDiscovery,
                macOS.launchctl,
                macOS.launchDaemon,
                macOS.plistModification,
                macOS.startupItems,
                macOS.kernelModulesAndExtensions
    }
    
    asset SYSTEM {
        | systemRights
            info: "A SYSTEM is a security principal. If the computer is joined to a domain, processes running as SYSTEM can access domain servers in the context of the computer's domain account. Processes running as Administrator have no access to domain computers."
            ->  windows.appCertDLLs,
                windows.bITSJobs,
                windows.changeDefaultFileAssociation,
                windows.distributedComponentObjectModel,
                windows.dLLSearchOrderHijacking,
                windows.executionThroughAPI,
                windows.extraWindowMemoryInjection,
                windows.hooking,
                windows.hypervisor,
                windows.imageFileExecutionOptionsInjection,
                windows.lSASS_Driver,
                windows.passwordFilterDLL,
                windows.portMonitors,
                windows.sIDHistoryInjection,
                windows.sIPAndTrustProviderHijacking,
                os.credentialsInFiles,
                os.filePermissionsModification,
                os.firmwareCorruption,
                os.graphicalUserInterface,
                os.inhibitSystemRecovery,
                os.networkSniffing,
                os.rootkit,
                os.systemDataDestruction,
                os.storedDataManipulation,
                os.twoFactorAuthenticationInterception,
                thirdpartySoftware.useThirdpartySoftware

        | systemCredentials
            ->  systemRights
    }

    asset Employee {
        & spearphishingLinkClicked [UniformDistribution(20,1)]
            rationale: "20 % link https://faui1-files.cs.fau.de/filepool/publications/zina/2017-benenson-unpacking-spear-phishing.pdf"
            ->  browser.spearphishingLink

        | pageVisited
            ->  browser.maliciousWebsite

        | adLinkClicked
            ->  browser.maliciousAds

        & spearphishingAttachmentDownload
            -> browser.spearphishingAttachment

        # userTraining 
            info: "https://attack.mitre.org/mitigations/M1017/"        
            ->  spearphishingAttachmentDownload, 
                spearphishingLinkClicked, 
                userExecution,
                _mediaInserted,
                os._credentialsInFiles,
                os.twoFactorAuthenticationInterception, // remove smart cards when not in use
                windows.inputPrompt,
                windows.templateInjection,
                macOS.inputPrompt, 
                macOS.loginItem,  
                browser.runExtensions,
                thirdpartySoftware._useThirdpartySoftware            
        
        & userExecution
            ->  computer.infectedComputer,
                computer.infectedWindowsComputer,
                os.scripting

        | insertMedia
            ->  userExecution,
                manualManipulation

        | manualManipulation
            ->  user.userRights

        | mediaInserted
            ->  _mediaInserted

        & _mediaInserted
            ->  removableMedia.dataExfiltrated      
    }
    
    asset Adversary {
        | maliciousWebsite
            ->  browser.maliciousWebsite, 
                employee.pageVisited

        | maliciousAds
            ->  browser.maliciousAds, 
                employee.adLinkClicked

        | maliciousCodeInserted
            ->  windows.executeCode         

        | spearphishingAttachmentAttack
            ->  employee.spearphishingAttachmentDownload,
                browser.spearphishingAttachment

        | spearphishingLinkAttack
            ->  employee.spearphishingLinkClicked,
                browser.spearphishingLink  
    }
}

category Software {
    asset Service {
        & applicationDeploymentSystems  

        | blockUserAccess  

        & userRemoteServicesLogin
            info: "An adversary may use Valid Accounts to log into a service specifically designed to accept remote connections."
            ->  c2Server.c2Connected 

        & adminRemoteServicesLogin
            info: "An adversary may use Valid Accounts to log into a service specifically designed to accept remote connections."
            ->  c2Server.c2Connected 

        & usertransmittedDataManipulation
            info: "By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making."

        & admintransmittedDataManipulation
            info: "By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making."

        # encryptSensitiveInformation
            info: "https://attack.mitre.org/mitigations/M1041/"
            ->  usertransmittedDataManipulation,
                admintransmittedDataManipulation

        | informationRepositories
            ->  os.dataCollected

        | remoteAccessTools
            ->  internalNetwork.c2Connexion

        | serviceExhaustionFlood         

        # executionPrevention
            info: "https://attack.mitre.org/mitigations/M1038/"
            ->  remoteAccessTools

        & exploitationForClientExecution
            info: "Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution."
            ->  os.runCode            

        | exploitationForCredentialAccess
            ->  _exploitationForCredentialAccess

        & _exploitationForCredentialAccess
            info: "Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained."
            ->  os.executeCode,
                exploitationForPrivilegeEscalation             

        | exploitationForDefenseEvasion // end step of securoty software discovery
            ->  _exploitationForDefenseEvasion

        & _exploitationForDefenseEvasion
            ->  os.bypassAntivirus,
                os.bypassSystemAccessControls

        | exploitationForPrivilegeEscalation
            ->  _exploitationForPrivilegeEscalation

        & _exploitationForPrivilegeEscalation
            info: "This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable."
            ->  administrator.adminRights,
                system.systemRights,
                thirdpartySoftware._useThirdpartySoftware

        & exploitationOfRemoteServices
            info: "An adversary may need to determine if the remote system is in a vulnerable state, which may be done through Network Service Scanning or other Discovery methods."
            ->  _exploitationOfRemoteServices

        & _exploitationOfRemoteServices
            ->  exploitationForPrivilegeEscalation // leads to Exploitation for Privilege Escalation attack

        # applicationIsolationAndSandboxing
            info: "https://attack.mitre.org/mitigations/M1048/"
            ->  exploitationForClientExecution,
                _exploitationForCredentialAccess,
                _exploitationForDefenseEvasion,
                _exploitationForPrivilegeEscalation,
                _exploitationOfRemoteServices,
                windows.distributedComponentObjectModel

        # applicationVetting
            info: "https://attack.mitre.org/mitigations/M1005/"       
            ->  os.obfuscatedFilesOrInformation

        # updateSoftware
            info: "https://attack.mitre.org/mitigations/M1051/"
            ->  _exploitationForDefenseEvasion,
                _exploitationForPrivilegeEscalation,
                internalNetwork.remoteAccess,
                windows.systemFirmware,
                windows.dLLSideLoading

        # threatIntelligenceProgram
            info: "https://attack.mitre.org/mitigations/M1019/"
            ->  _exploitationForCredentialAccess,
                _exploitationForPrivilegeEscalation,
                _exploitationOfRemoteServices              
    }

    asset ThirdpartySoftware extends Service {      
        & useThirdpartySoftware 
            info: "Adversaries may gain access to and use third-party application deployment systems installed within an enterprise network." 
            ->  _useThirdpartySoftware 

        & _useThirdpartySoftware 
            ->  os.executeCode 
    }

    asset VideoCallApplication extends Service { 
        | collectVideo
            ->  computer._collectVideo
    }
    
    abstractAsset OS {   
        & applicationDeploymentSoftware
            info: "Access to a network-wide or enterprise-wide software deployment system enables an adversary to have remote code execution on all systems that are connected to such a system."
            ->  executeCode

        | applicationExhaustionFlood   
            ->  service.blockUserAccess 

        | infectedOS
            ->  clipboardData,
                dataFromInformationRepositories,
                computer.infectedComputer

        & clipboardData
            ->  administrator.adminCredentials,
                user.userCredentials

        & accountDiscovery
            info: "get account names and information"

        & domainDiscovery
            info: "get domain names and information"

        | domainGenerationAlgorithms 
            info: "Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination for command and control traffic rather than relying on a list of static IP addresses or domains." 
            ->  fallbackChannels, // leads to Fallback Channels attack
                c2Server.communicate,
                c2Server.generateDomainNames

        | compromisedSystems //with probability
            ->  removableMedia.infectedMedia
            
        & binaryPadding
            ->  bypassSignatureBasedDetection,
                bypassAntivirus

        & applicationWindowDiscovery
            info: "get a listing of opened application windows"

        & runningProcessDiscovery
            info: "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software running on systems within the network."
            ->  processInjection

        & detailedRunningProcessDiscovery
            info: "Adversaries with admin rights may get better process ownership details"

        & commonlyUsedPortsConnection
            ->  c2Server.c2Connected,
                externalNetwork.bypassFirewall,
                internalNetwork.bypassFirewall,
                externalNetwork.bypassNetworkIntrusionDetection,
                internalNetwork.bypassNetworkIntrusionDetection

        | compileAfterDelivery     
            info: "Adversaries may attempt to make payloads difficult to discover and analyze by delivering files to victims as uncompiled code. Source code payloads may also be encrypted, encoded, and/or embedded within other files, such as those delivered as a Spearphishing Attachment."
            ->  adversary.spearphishingAttachmentAttack,
                bypassStaticFileAnalysis,
                bypassBinaryAnalysis,
                bypassAntivirus,
                bypassHostIntrusionPrevention,
                bypassSignatureBasedDetection

        & connectionProxy
            info: "Adversaries could use trust relationships to manage command and control communications, to reduce the number of simultaneous outbound network connections, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between victims to avoid suspicion."
            -> c2Server.c2Connected           

        & credentialDumping

        | credentialsInFiles
            ->  _credentialsInFiles

        & _credentialsInFiles
            ->  user.userCredentials,
                administrator.adminCredentials,
                system.systemCredentials   

        & customCryptographicProtocol
            info: "Adversaries may use a custom cryptographic protocol or algorithm to hide command and control traffic."
            ->  c2Server.c2Connected  

        & customCommandAndControlProtocol
            info: "Adversaries may communicate using a custom command and control protocol instead of encapsulating commands/data in an existing Standard Application Layer Protocol."
            ->  c2Server.c2Connected

        | dataEncoding
            info: "Use of data encoding may be to adhere to existing protocol specifications and includes use of ASCII, Unicode, Base64, MIME, UTF-8, or other binary-to-text and character encoding systems."
            ->  _dataEncoding

        & _dataEncoding
            ->  c2Server.communicate
          
        | disablingSecurityTools
            info: "Adversaries may disable security tools to avoid possible detection of their tools and activities."
            ->  bypassFileMonitoring,
                bypassHostIntrusionPrevention,
                bypassSignatureBasedDetection,
                bypassLogAnalysis,
                bypassAntivirus

        | domainFronting
            info: "Domain fronting takes advantage of routing schemes in Content Delivery Networks (CDNs) and other services which host multiple domains to obfuscate the intended destination of HTTPS traffic or traffic tunneled through HTTPS."
            ->  internalNetwork.obfuscateNetworkTraffic,
                externalNetwork.obfuscateNetworkTraffic          
                 
        | executeCode 
            ->  internalNetwork.remoteAccess

        & endpointDenialOfService 
            info: "Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users."
            ->  applicationExhaustionFlood,
                osExhaustionFlood,
                service.serviceExhaustionFlood

        & executionGuardrails
            info: "Adversaries may use guardrails and environmental keying to help protect their TTPs and evade detection."
            ->  bypassAntivirus, 
                bypassHostForensicAnalysis, 
                bypassSignatureBasedDetection,  
                bypassStaticFileAnalysis       

        | fallbackChannels  
            info: "Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds." 
            ->  c2Server.communicate  

        & firmwareCorruption
            info: "Adversaries may overwrite or corrupt the flash memory contents of system BIOS or other firmware in devices attached to a system in order to render them inoperable or unable to boot." 

        | indicatorRemovalFromTools
            info: "An adversary may be able to modify the tool by removing the indicator that is no longer detected by the target's defensive systems."
            ->  bypassHostIntrusionPrevention,
                bypassLogAnalysis,
                bypassAntivirus

        & indicatorRemovalOnHost
            info: "Adversaries may delete or alter generated artifacts on a host system, including logs and potentially captured files such as quarantined malware."
            ->  bypassHostIntrusionPrevention,
                bypassLogAnalysis,
                bypassAntivirus    

        & installRootCertificate
            info: "Installation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system."
            ->  bypassDigitalCertificateValidation   
 
        & networkSniffing
            info: "An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data."
            ->  user.userCredentials,
                windows.lLMNR_NBT_NS_PoisoningAndRelay

        & obfuscatedFilesOrInformation
            info: "Adversaries may use Obfuscated Files or Information to hide artifacts of an intrusion from analysis."     
            ->  windows.deobfuscateOrDecodeFilesOrInformation, // leads to Deobfuscate/Decode Files or Information attack
                bypassHostForensicAnalysis,
                bypassSignatureBasedDetection,
                bypassHostIntrusionPrevention,
                bypassApplicationWhitelisting,
                bypassProcessWhitelisting,
                bypassLogAnalysis,
                bypassFileOrPathWhitelisting          

        | runCode
            ->  computer.infectedComputer

        | replicationThroughRemovableMedia
            -> communicationThroughRemovableMedia

        & communicationThroughRemovableMedia

        & remoteSystemDiscovery
            info: "Adversaries will likely attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system."

        & detailedRemoteSystemDiscovery
            info: "Adversaries with admin rights may get better details of the hosts enumerated"
        
        & adminCommandLineInterface
            ->  dataCollected, // entrypoints of attacks that can be done with command line interface under admin rights
                obfuscatedFilesOrInformation // obfuscate commands executed from payloads or directly via a Command-Line Interface 
        
        & userCommandLineInterface
            ->  dataCollected, // entrypoints of attacks that can be done with command line interface under user rights
                obfuscatedFilesOrInformation // obfuscate commands executed from payloads or directly via a Command-Line Interface

        | filePermissionsModification
            info: "Adversaries may modify file permissions/attributes to evade intended DACLs."
            ->  windows.accessibilityFeatures, // leads to Accessibility Features attack
                windows.logonScripts, //leads to Logon Scripts attack
                macOS.logonScripts // leads to Logon Scripts attack

        | graphicalUserInterface
            info: "Adversaries may use a system's GUI during an operation, commonly through a remote interactive session such as Remote Desktop Protocol, to search for information and execute files via mouse double-click events, the Windows Run command, or other potentially difficult to monitor interactions."
            ->  windows.remoteDesktopProtocol // leads to Remote Desktop Protocol attack on Windows

        & systemInformationDiscovery
            info: "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture."
            ->  adversary.maliciousCodeInserted

        | osExhaustionFlood

        & processInjection
            ->  administrator.adminRights,
                bypassAntivirus,
                bypassProcessWhitelisting

        | rootkit
            info: "Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components."
            ->  modifyAPICalls, 
                bypassAntivirus,
                bypassFileMonitoring,
                bypassProcessWhitelisting,
                bypassSignatureBasedDetection, 
                bypassHostIntrusionPrevention,
                bypassSystemAccessControls,
                bypassFileOrPathWhitelisting,
                windows.hooking, // leads to hooking attack
                windows.hypervisor, // leads to hypervisor attack
                windows.systemFirmware // leads to system firmware attack

        & standardCryptographicProtocol
            info: "Adversaries may explicitly employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol."
            ->  c2Server.c2Connected             

        & standardNonApplicationLayerProtocol
            info: "Use of a standard non-application layer protocol for communication between host and C2 server or among infected hosts within a network."
            ->  c2Server.communicate        

        & twoFactorAuthenticationInterception
            info: "Adversaries may target authentication mechanisms, such as smart cards, to gain access to systems, services, and network resources."
            ->  connectionProxy

        | modifyAPICalls                

        | bypassAntivirus

        | bypassAutorunsAnalysis

        | bypassApplicationWhitelisting

        | bypassBinaryAnalysis

        | bypassDefensiveNetworkServiceScanning

        | bypassDigitalCertificateValidation   

        | bypassFileMonitoring

        | bypassFileOrPathWhitelisting

        | bypassFileSystemAccessControls

        | bypassHeuristicDetection

        | bypassHostForensicAnalysis
        
        | bypassHostIntrusionPrevention

        | bypassProcessWhitelisting

        | bypassSystemAccessControls

        | bypassLogAnalysis        
        
        | bypassSignatureBasedDetection

        | bypassStaticFileAnalysis

        | bypassUserModeSignatureValidation
        
        | passwordPolicyDiscovery
            ->  bruteForceWithPasswordPolicy

        & bruteForceWithPasswordPolicy
            ->  user.userCredentials // the probability distribution should be so that it has higher chance of success than the bruteforce attack

        & bruteForce
            info: "Adversaries may use brute force techniques to attempt access to accounts when passwords are unknown or when password hashes are obtained."
            ->  user.userCredentials           

        | codeDelivered
            ->  antivirusCheck

        & antivirusCheck
            ->  runCode,
                service.exploitationForClientExecution

        & spearphishingAttachmentDownload
            ->  employee.userExecution

        & spearphishingLinkDownload
            ->  employee.userExecution

        | scripting
            info: "Adversaries may use utilities such as Windows Management Instrumentation, PowerShell, Systeminfo, and the Query Registry to obtain system information and search for VME artifacts. Adversaries may use Scripting to combine these checks into one script and then have the program exit if it determines the system to be a virtual environment."
            ->  windows.virtualizationOrSandboxEvasion,
                _scripting

        | persistence

        & _scripting
            -> automatedCollection,
               windows.templateInjection // leads to Template Injection attack

        & storedDataManipulation
            info: "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity."    

        | validAccounts
            ->  _validAccounts    

        & _validAccounts
            info: "Adversaries may steal the credentials of a specific user or service account using Credential Access techniques or capture credentials earlier in their reconnaissance process through social engineering for means of gaining Initial Access."
            ->  service.userRemoteServicesLogin,
                service.adminRemoteServicesLogin,
                internalNetwork.bypassFirewall,
                internalNetwork.bypassNetworkIntrusionDetection,
                bypassHostIntrusionPrevention,
                bypassProcessWhitelisting,
                bypassSystemAccessControls,
                bypassAntivirus  
            
        # antivirus
            info: "https://attack.mitre.org/mitigations/M1049/"
            ->  antivirusCheck,
                obfuscatedFilesOrInformation,
                spearphishingAttachmentDownload,
                spearphishingLinkDownload   

        # restrictFileAndDirectoryPermissions 
            info: "https://attack.mitre.org/mitigations/M1022/"
            ->  _credentialsInFiles,
                indicatorRemovalOnHost,
                windows.controlPanelItems,
                linux.clearCommandHistory,
                linux._sudo,
                macOS.clearCommandHistory,
                macOS._sudo,
                storedDataManipulation

        # accountUsePolicies // Set account lockout policies after a certain number of failed login attempts to prevent passwords from being guessed. Too strict a policy may create a denial of service condition and render environments un-usable, with all accounts used in the brute force being locked-out.
            info: "https://attack.mitre.org/mitigations/M1036/" 
            ->  bruteForce

        # bootIntegrity 
            info: "https://attack.mitre.org/mitigations/M1046/"
            ->  firmwareCorruption

        # multiFactorAuthentication
            info: "https://attack.mitre.org/mitigations/M1032/" 
            ->  applicationDeploymentSoftware,
                bruteForce,
                networkSniffing,
                service.userRemoteServicesLogin,
                service.adminRemoteServicesLogin,
                thirdpartySoftware._useThirdpartySoftware

        # passwordPolicies 
            info: "https://attack.mitre.org/mitigations/M1027/" 
            ->  bruteForce,
                _credentialsInFiles,
                _credentialsInRegistry,
                _validAccounts,
                thirdpartySoftware._useThirdpartySoftware

        # applicationIsolationAndSandboxing // Restrict execution of code to a virtual environment on or in transit to an endpoint system.
            info: "https://attack.mitre.org/mitigations/M1048/"
            ->  _scripting,
                browser.checkBrowser,
                browser.checkPlugin 

        # doNotMitigate // Execution Guardrails likely should not be mitigated with preventative controls because it may protect unintended targets from being compromised.
            info: "https://attack.mitre.org/mitigations/M1055/"
            ->  executionGuardrails                

        # disableOrRemoveFeatureOrProgram 
            info: "https://attack.mitre.org/techniques/T1064/"
            ->  _scripting,
                communicationThroughRemovableMedia,
                service.exploitationOfRemoteServices 

        # activeDirectoryConfiguration
            info: "https://attack.mitre.org/mitigations/M1015/"
            ->  _credentialsInFiles,
                windows.sIDHistoryInjection, 
                thirdpartySoftware._useThirdpartySoftware

        # audit 
            info: "https://attack.mitre.org/mitigations/M1047/"
            ->  _credentialsInFiles,
                _credentialsInRegistry,
                browser.runExtensions  

        # codeSigning
            info: "https://attack.mitre.org/mitigations/M1045/" 
            ->  applicationDeploymentSoftware           

        # operatingSystemConfiguration 
            info: "https://attack.mitre.org/mitigations/M1028/"
            ->  accountDiscovery, 
                communicationThroughRemovableMedia,
                domainDiscovery,
                inhibitSystemRecovery,
                installRootCertificate,
                administrator.createUserAccount,
                windows._bITSJobs,
                linux._sudoCaching,
                macOS._sudoCaching

        # softwareConfiguration
            info: "https://attack.mitre.org/mitigations/M1054/"
            ->  installRootCertificate      

        # executionPrevention // Block execution of code on a system through application whitelisting, blacklisting, and/or script blocking.            
            info: "https://attack.mitre.org/mitigations/M1038/"
            ->  adminCommandLineInterface, 
                accountDiscovery,
                adminDiskWiped,
                applicationWindowDiscovery,
                binaryPadding,
                browser.runExtensions,
                computer.collectAudio,
                computer._collectVideo,
                dataCompressed, 
                _dataEncrypted,
                _dataStaged,
                detailedRemoteSystemDiscovery,
                detailedRunningProcessDiscovery,
                domainDiscovery,
                domainFronting,
                fileDeletion, 
                permissionGroupsDiscovery,  
                processInjection,
                remoteSystemDiscovery,     
                runningProcessDiscovery,
                systemInformationDiscovery,              
                userCommandLineInterface,       
                windows.compiledHTMLFile            
             
        # privilegedAccountManagement  
            info: "https://attack.mitre.org/mitigations/M1026/"
            ->  _credentialsInRegistry,
                _validAccounts  

        | credentialsInRegistry
            ->  _credentialsInRegistry

        & _credentialsInRegistry
            ->  user.userCredentials,
                administrator.adminCredentials 

        & fileDeletion
            info: "Adversaries may remove traces (files) over the course of an intrusion to keep their footprint low or remove them at the end as part of the post-intrusion cleanup process"
            ->  bypassHostForensicAnalysis

        & fileDiscovery
            ->  automatedCollection
        
        & diskStructureWipe
            info: "Adversaries may corrupt or wipe the disk data structures on hard drive necessary to boot systems; targeting specific critical systems as well as a large number of systems in a network to interrupt availability to system and network resources. "
 
        # dataBackup
            info: "https://attack.mitre.org/mitigations/M1053/"
            info: "Ensure backups are stored off system and is protected from common methods adversaries may use to gain access and destroy the backups to prevent recovery."
            ->  userDataDestruction,
                adminDataDestruction,
                systemDataDestruction,
                userDataEncryptedForImpact, 
                adminDataEncryptedForImpact,
                systemDataEncryptedForImpact,
                inhibitSystemRecovery,
                diskStructureWipe,
                userDiskWiped,
                adminDiskWiped

        & userDiskWiped
            info: "Instead of wiping specific disk structures or files, adversaries with destructive intent may wipe arbitrary portions of disk content."

        & adminDiskWiped

        & uploadRemoteFile
            // leads to file execution attacks
            ->  employee.userExecution,
                automatedCollection  

        & downloadRemoteFile
            info: "data collection from the user"
        
        & sensitiveDataCollected
            ->  dataCompressed,
                computer.exfiltrationOverPhysicalMedium,
                dataSizedTransfer,
                exfiltrationOverAternativeProtocol,
                scheduledExfiltration,
                exfiltrationOverC2,
                automatedExfiltration,
                dataEncrypted, 
                dataStaged    

//        | dataCollected
//            ->  _dataCollected

        & dataCollected
            ->  dataCompressed,
                computer.exfiltrationOverPhysicalMedium,
                exfiltrationOverAternativeProtocol,
                scheduledExfiltration,
                exfiltrationOverC2,
                dataEncrypted,
                dataStaged,
                automatedExfiltration,
                dataSizedTransfer

        | dataEncrypted
            info: "Data is encrypted before being exfiltrated in order to hide the information that is being exfiltrated from detection or to make the exfiltration less conspicuous upon inspection by a defender."
            ->  _dataEncrypted

        & _dataEncrypted
            ->  computer.exfiltrationOverPhysicalMedium,
                exfiltrationOverAternativeProtocol,
                scheduledExfiltration,
                exfiltrationOverC2,
                automatedExfiltration,
                dataStaged 

        & _dataStaged // leads to exfiltration attacks
            ->  computer.exfiltrationOverPhysicalMedium,
                exfiltrationOverAternativeProtocol,
                scheduledExfiltration,
                exfiltrationOverC2
        
        & userDataDestruction
            ->  inhibitSystemRecovery // disable or delete system recovery features to augment the effects

        & adminDataDestruction
            ->  inhibitSystemRecovery  

        & systemDataDestruction
            ->  inhibitSystemRecovery  

        & dataCompressed
            ->  dataEncrypted,
                dataStaged,
                automatedExfiltration,
                computer.exfiltrationOverPhysicalMedium,
                exfiltrationOverAternativeProtocol,
                scheduledExfiltration,
                exfiltrationOverC2

        & inhibitSystemRecovery
            info: "Adversaries may delete or remove built-in operating system data and turn off services designed to aid in the recovery of a corrupted system to prevent recovery."     

        | scheduledExfiltration
            ->  exfiltrationOverC2,
                exfiltrationOverAternativeProtocol       
    
        | exfiltrationOverAternativeProtocol
            ->  internalNetwork.dataExfiltration

        & userDataEncryptedForImpact
            info: "Attackers can attempt to render stored data inaccessible by encrypting files or data on local and remote drives and withholding access to a decryption key. This may be done in order to extract monetary compensation from a victim in exchange for decryption or a decryption key (ransomware) or to render data permanently inaccessible in cases where the key is not saved or transmitted"
            ->  inhibitSystemRecovery 

        & adminDataEncryptedForImpact
            ->  inhibitSystemRecovery 

        & systemDataEncryptedForImpact
            ->  inhibitSystemRecovery 

        | dataFromInformationRepositories 
            ->  service.informationRepositories

        | dataStaged    

        & directoryDiscovery
            ->  automatedCollection
          
        | automatedCollection
            ->  _automatedCollection

        & _automatedCollection
            ->  dataCollected, 
                sensitiveDataCollected

        | exfiltrationOverC2
            ->  c2Server.dataExfiltrated

        | automatedExfiltration
            ->  exfiltrationOverAternativeProtocol,
                exfiltrationOverC2
        
        | exfiltrationOverAternativeProtocol
            ->  internalNetwork.dataExfiltration

        # encryptSensitiveInformation 
            info: "https://attack.mitre.org/mitigations/M1041/"
            ->  _automatedCollection,
                indicatorRemovalOnHost,
                networkSniffing,
                storedDataManipulation  

        # remoteDataStorage 
            info: "https://attack.mitre.org/mitigations/M1029/"
            ->  _automatedCollection,
                indicatorRemovalOnHost,
                storedDataManipulation,
                thirdpartySoftware._useThirdpartySoftware

        | dataSizedTransfer
            info: "An adversary may exfiltrate data in fixed size chunks instead of whole files or limit packet sizes below certain thresholds. This approach may be used to avoid triggering network data transfer threshold alerts."
            -> c2Server.dataExfiltrated                

        # limitSoftwareInstallation
            info: "https://attack.mitre.org/mitigations/M1033/"
            ->  browser.runExtensions,
                browser.compromisedBrowser 

        # updateSoftware
            info: "https://attack.mitre.org/mitigations/M1051/"
            ->  firmwareCorruption,
                browser.runExtensions,
                browser.checkBrowser,
                browser.checkPlugin,
                service._exploitationForCredentialAccess,
                service._exploitationForPrivilegeEscalation,
                service._exploitationOfRemoteServices  

        # exploitProtection
            info: "https://attack.mitre.org/mitigations/M1050/"
            ->  browser.checkBrowser,
                browser.checkPlugin, 
                service.exploitationForClientExecution,
                service._exploitationForCredentialAccess,
                service._exploitationForPrivilegeEscalation,
                service._exploitationOfRemoteServices

        & networkServiceScan
            info: "Adversaries may attempt to get a listing of services running on remote hosts, including those that may be vulnerable to remote software exploitation."
            ->  service.exploitationOfRemoteServices

        & permissionGroupsDiscovery
            info: "Adversaries may attempt to find local system or domain-level groups and permissions settings. "

        | persistance
    }
    
    asset Windows extends OS {   
        | appCertDLLs
            ->  _appCertDLLs 
            
        & _appCertDLLs
            ->  persistence,
                systemWindows.systemRights,
                windowsUser.userRights,
                windowsAdmin.adminRights

        & appInitDLLs 
            ->  persistence 

        & accessibilityFeatures
            info: "This helps attackers to open a System-level command shell, where the attackers can execute arbitrary Windows commands, including adding or modifying accounts on the system"
            ->  executeCode,
                system.systemRights,
                remoteDesktopProtocol 

        & bITSJobs  
            ->  _bITSJobs

        & _bITSJobs 
            info: "Adversaries may abuse BITS to download, execute, and even clean up after running malicious code."
            ->  executeCode,
                bypassHostForensicAnalysis,
                firewall.bypassFirewall 

        & cmstp
            info: "Microsoft Connection Manager Profile Installer (CMSTP.exe) is a command-line program used to install Connection Manager service profiles."
            ->  bypassUserAccountControl, // leads to Bypass User Account Control attack
                bypassApplicationWhitelisting,
                bypassAntivirus            

        | codeSigning
            info: "Adversaries are known to use code signing certificates to masquerade malware and tools as legitimate binaries. Code signing certificates may be used to bypass security policies that require signed code to execute on a system."
            ->  windowsAdmin.bypassWindowsUserAccountControl

        | collectHashInformation    
            ->  networkSniffing, // leads to Network Sniffing attack
                bruteForce // leads to Brute Force attack    

        & controlPanelItems
            info: "Adversaries can use Control Panel items as execution payloads to execute arbitrary commands."
            ->  executeCode,
                bypassApplicationWhitelisting,
                bypassProcessWhitelisting

        | componentObjectModelHijacking
            info: "Adversaries can use Component Object Model (COM) system to insert malicious code that can be executed. When that system component is executed through normal system operation the adversary's code will be executed instead."
            ->  adversary.maliciousCodeInserted,
                bypassAutorunsAnalysis             

        | componentFirmware
            info: "Adversaries may compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS."       
            ->  bypassFileMonitoring,
                bypassHostIntrusionPrevention, 
                bypassAntivirus         

        & compiledHTMLFile 
            info: "Adversaries may abuse this technology to conceal malicious code, can be triggered by User Execution."
            ->  employee.userExecution, // leads to User Execution attack
                bypassApplicationWhitelisting,
                bypassDigitalCertificateValidation   

        | deobfuscateOrDecodeFilesOrInformation 
            ->  bypassAntivirus,
                bypassHostIntrusionPrevention,
                bypassSignatureBasedDetection,
                externalNetwork.bypassNetworkIntrusionDetection,
                internalNetwork.bypassNetworkIntrusionDetection     

        | dLLSearchOrderHijacking
            ->  _dLLSearchOrderHijacking 

        & _dLLSearchOrderHijacking
            ->  bypassProcessWhitelisting,
                systemWindows.systemRights,
                windowsUser.userRights,
                windowsAdmin.adminRights                    
               
        | dLLSideLoading
            ->  bypassProcessWhitelisting,
                bypassAntivirus

        & executeMshta
            info: "Mshta is a utility that executes Microsoft HTML Applications. It can be used to proxy execute malicious .hta files, and can also be used to bypass application whitelisting."
            ->  executeCode,
                bypassDigitalCertificateValidation,
                bypassApplicationWhitelisting    
               
        | executeCode 
            +>  componentFirmware,
                service.exploitationForPrivilegeEscalation,
                computer.infectedWindowsComputer         

        & executionThroughAPI    
            info: "Adversary tools may directly use the Windows application programming interface (API) to execute binaries." 

        & executionThroughModuleLoad 
            info: "Adversaries can use this functionality as a way to execute arbitrary code on a system."
            ->  executeCode    
        
        | extraWindowMemoryInjection
            info: "Execution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges."
            ->  adversary.maliciousCodeInserted

        | fileSystemLogicalOffsets
            info: "Windows allows programs to have direct access to logical volumes. This technique bypasses Windows file access controls as well as file system monitoring tools."
            ->  bypassFileMonitoring,
                bypassFileSystemAccessControls

        | fileSystemPermissionsWeakness
            ->  _fileSystemPermissionsWeakness      

        & _fileSystemPermissionsWeakness
            info: "Adversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level."
            ->  executeCode,
                windowsAdmin.adminRights,
                systemWindows.systemRights

        & forcedAuthentication    

        | imageFileExecutionOptionsInjection
            info: "Directly modifying IEFO and silent process exit Registry values may be abused to obtain persistence and privilege escalation by causing a malicious executable to be loaded and run in the context of separate processes on the computer."
            ->  bypassAutorunsAnalysis,
                persistence,
                service.exploitationForPrivilegeEscalation

        & indicatorBlocking
            info: "An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed."
            ->  bypassAntivirus,
                bypassLogAnalysis,
                bypassHostIntrusionPrevention     

        | indirectCommandExecution
            info: "Adversaries may abuse the Windows system features for Defense Evasion."
            ->  executeCode,
                bypassStaticFileAnalysis,
                bypassApplicationWhitelisting,
                bypassProcessWhitelisting,
                bypassFileOrPathWhitelisting     

        & inputPrompt
            info: "Adversaries may mimic this functionality to prompt users for credentials with a seemingly legitimate prompt for a number of reasons that mimic normal usage."
            ->  bypassUserAccountControl, // leads to Bypass User Account Control attack
                powerShell, // leads to PowerShell attack
                user.userCredentials       

        & installUtil
            info: "Adversaries may use InstallUtil to proxy execution of code through a trusted Windows utility."
            ->  bypassDigitalCertificateValidation,
                bypassProcessWhitelisting,
                signedBinaryProxyExecution,
                signedScriptProxyExecution    

        & kerberoasting
            info: "Adversaries possessing a valid Kerberos ticket-granting ticket (TGT) may request one or more Kerberos ticket-granting service (TGS) service tickets for any SPN from a domain controller (DC)."
            ->  bruteForce,
                persistence,
                service.exploitationForPrivilegeEscalation,
                validAccounts           

        & lLMNR_NBT_NS_PoisoningAndRelay
            info: "AAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through Network Sniffing and crack the hashes offline through Brute Force to obtain the plaintext passwords."
            ->  collectHashInformation

        & lSASS_Driver
            info: "Adversaries may target lsass.exe drivers to obtain execution and/or persistence. By either replacing or adding illegitimate drivers (e.g., DLL Side-Loading or DLL Search Order Hijacking), an adversary can achieve arbitrary code execution triggered by continuous LSA operations."
            ->  executeCode,
                persistence    

        | networkShareConnectionRemoval
            info: "Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation."
            ->  bypassHostForensicAnalysis

        & officeApplicationStartup
            info: "There are multiple mechanisms that can be used with Office for persistence when an Office-based application is started."
            ->  persistence  

        & passwordFilterDLL
            info: "Adversaries can register malicious password filters to harvest credentials from local computers and/or entire domains."
            ->  systemWindows.systemCredentials,
                windowsAdmin.adminCredentials

        & passTheTicket
            info: "Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password."
            ->  credentialDumping, // valid Kerberos tickets for Valid Accounts are captured by Credential Dumping
                internalNetwork.c2Connexion // gain remote access 

        & powerShell
            info: "Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code."
            ->  _powerShell,
                executeCode,
                scripting

        & _powerShell
            info: "Administrator permissions are required to use PowerShell to connect to remote systems."      
            ->  internalNetwork.remoteSystemsConnection            

        | remoteDesktopProtocol // leads to Remote Desktop Protocol attack
            ->  system.systemRights

        & sIDHistoryInjection
            info: "Adversaries may use SID mechanism for privilege escalation. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as Remote Services, Windows Admin Shares, or Windows Remote Management."
            ->  service.adminRemoteServicesLogin, // leads to Remote Services attack
                windowsAdminShares, // leads to Windows Admin Shares attack    
                windowsRemoteManagement // leads to Windows Remote Management attack         

        & signedBinaryProxyExecution
            info: "Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files. This behavior may be abused by adversaries to execute malicious files that could bypass application whitelisting and signature validation on systems."
            ->  bypassApplicationWhitelisting,
                bypassDigitalCertificateValidation            

        & signedScriptProxyExecution
            info: "Scripts signed with trusted certificates can be used to proxy execution of malicious files."
            ->  bypassApplicationWhitelisting,
                bypassDigitalCertificateValidation          

        & sIPAndTrustProviderHijacking
            info: "Adversaries may abuse this architecture to subvert trust controls and bypass security policies that allow only legitimately signed code to execute on a system."
            ->  bypassApplicationWhitelisting,
                bypassAutorunsAnalysis,
                bypassDigitalCertificateValidation,
                bypassProcessWhitelisting,
                bypassUserModeSignatureValidation 

        & softwarePacking
            info: "Packing an executable changes the file signature in an attempt to avoid signature-based detection."
            ->  indicatorRemovalFromTools,
                bypassSignatureBasedDetection,
                bypassAntivirus,
                bypassHeuristicDetection      

        & taintSharedContent   

        & templateInjection
            info: "Adversaries may abuse this technology to initially conceal malicious code to be executed."
            ->  bypassStaticFileAnalysis, 
                forcedAuthentication, // leads to Forced Authentication attack
                browser.spearphishingAttachment, // can be delivered via Spearphishing Attachment
                taintSharedContent // can be delivered via Taint Shared Content

        & trustedDeveloperUtilities
            info: "An adversary can use tracker.exe to proxy execution of an arbitrary DLL into another process. Since tracker.exe is also signed it can be used to bypass application whitelisting solutions."
            ->  bypassApplicationWhitelisting,
                executeCode,
                signedBinaryProxyExecution,
                signedScriptProxyExecution         

        & windowsAdminShares
            ->  networkShareConnectionRemoval // leads to Network Share Connection Removal attack

        | windowsManagementInstrumentation
            info: "Execution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges."
            ->  os.inhibitSystemRecovery

        & windowsRemoteManagement           

        | commandExecution
            ->  computer.infectedWindowsComputer

        & createService
            ->  executeService
            
        & registryKeysEnabled
            ->  dynamicDataExchange

        & distributedComponentObjectModel          
            info: "Through DCOM, adversaries operating in the context of an appropriately privileged user can remotely obtain arbitrary and even direct shellcode execution through Office applications as well as other Windows objects that contain insecure methods. DCOM can also execute macros and may also invoke Dynamic Data Exchange."
            ->  dynamicDataExchange

        | dynamicDataExchange
            info: "Windows Dynamic Data Exchange (DDE) is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications."
            ->  userCommandLineInterface 
            
        | hooking             
            info: "Adversaries may use hooking to load and execute malicious code within the context of another process; malicious hooking mechanisms may also capture API calls that include parameters that reveal user authentication credentials for Credential Access."
            ->  executeCode,
                captureAPICalls

        | hypervisor           
            info: "A type-1 hypervisor operates at a level below the operating system and could be designed with Rootkit functionality to hide its existence from the guest operating system."
            ->  persistance

        | captureAPICalls

        & modifyRegistrySettings
            ->  distributedComponentObjectModel      

        & logonScripts
            ->  windowsAdmin.adminRights   

        & systemFirmware
            info: "System firmware may be modified by an adversary to perform or assist in malicious activity."
            ->  installMaliciousFirmwareUpdates

        | installMaliciousFirmwareUpdates   

        & queryRegistery
            info: "The Registry contains a significant amount of information about the operating system, configuration, software, and security. Some of the information may help adversaries to further their operation within a network."
            ->  scripting,
                systemInformationDiscovery

        & networkShareDiscovery
            ->  internalNetwork.networkShareDiscovery

        & userCommandLineInterface
        
        & userSecuritySoftwareDiscovery
            info: "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on the system. This may include things such as local firewall rules and anti-virus. These checks may be built into early-stage remote access tools."
            ->  virtualizationOrSandboxEvasion
        
        & adminSecuritySoftwareDiscovery
            ->  virtualizationOrSandboxEvasion

        & bypassUserAccountControl
            ->  executeCode

        & executeService
            ->  persistance
       
        | peripheralDeviceDiscovery
            ->  computer.peripheralDeviceDiscovery

        | portMonitors
            info: "Adversaries can use this technique to load malicious code at startup that will persist on system reboot and execute as SYSTEM."
            ->  executeCode

        & emailStorageCollection
            info: "Files containing email data can be acquired from a user's system, such as Outlook storage or cache files .pst and .ost."
            ->  dataCollected

        & outlookEmailCollection
            info: "Some adversaries may acquire user credentials and access externally facing webmail applications, such as Outlook Web Access."
            ->  dataCollected

        | dataCollected

        | hypervisor

        | systemFirmware   
        
        | applicationShimming
            ->  _applicationShimming
        
        & _applicationShimming
            ->  persistence,
                user.userRights,
                administrator.adminRights

        & authenticationPackage
            info: "Adversaries can use Windows Authentication Packages for persistence for persistence."
            ->  persistence   

        | changeDefaultFileAssociation
            ->  persistence

        | trustedDomainInfo // leads to SID-History Injection, Pass the Ticket, and Kerberoasting attacks
            info: "The information discovered may help the adversary conduct SID-History Injection, Pass the Ticket, and Kerberoasting."

        & domainTrustDiscovery
            ->  trustedDomainInfo

        & bootkit 
            ->  persistance

        # activeDirectoryConfiguration
            info: "https://attack.mitre.org/mitigations/M1015/"
            +>  passTheTicket

        # antivirus
            info: "https://attack.mitre.org/mitigations/M1049/"
            +>  softwarePacking,
                templateInjection

        # audit 
            info: "https://attack.mitre.org/mitigations/M1047/"
            +>  domainTrustDiscovery,
                bypassUserAccountControl,
                _dLLSearchOrderHijacking,
                dLLSideLoading,
                _fileSystemPermissionsWeakness

        # codeSigning
            info: "https://attack.mitre.org/mitigations/M1045/"  
            +>  _powerShell           

        # executionPrevention
            info: "https://attack.mitre.org/mitigations/M1038/"
            +>  accessibilityFeatures,
                adminSecuritySoftwareDiscovery,
                _appCertDLLs,
                appInitDLLs,
                cmstp,
                controlPanelItems,
                createService,
                _dLLSearchOrderHijacking,
                executeMshta,
                executionThroughAPI,
                executionThroughModuleLoad,
                installUtil,
                networkShareDiscovery,
                queryRegistery,
                scheduledTask, 
                signedBinaryProxyExecution,
                signedScriptProxyExecution,
                sIPAndTrustProviderHijacking,
                systemTimeDiscovery,
                trustedDeveloperUtilities,
                userSecuritySoftwareDiscovery

        # operatingSystemConfiguration
            info: "https://attack.mitre.org/mitigations/M1028/" 
            +>  passwordFilterDLL   

        # passwordPolicies 
            info: "https://attack.mitre.org/mitigations/M1027/" 
            +>  passTheTicket               

        # privilegedProcessIntegrity  
            info: "https://attack.mitre.org/mitigations/M1025/"
            +>  authenticationPackage 

        # privilegedAccountManagement
            info: "https://attack.mitre.org/mitigations/M1026/"
            +>  bootkit,
                bypassUserAccountControl 

        # restrictFileAndDirectoryPermissions
            info: "https://attack.mitre.org/mitigations/M1022/"
            +>  dLLSideLoading,
                indicatorBlocking,
                logonScripts,
                sIPAndTrustProviderHijacking   

        # restrictRegistryPermissions // Restrict the ability to modify certain hives or keys in the Windows Registry.
            info: "https://attack.mitre.org/mitigations/M1024/"
            ->  sIPAndTrustProviderHijacking

        # restrictLibraryLoading 
            info: "https://attack.mitre.org/mitigations/M1044/"
            ->  _dLLSearchOrderHijacking         

        # softwareConfiguration
            info: "https://attack.mitre.org/mitigations/M1054/"
            +>  indicatorBlocking,
                officeApplicationStartup  

        # bootIntegrity 
            info: "https://attack.mitre.org/mitigations/M1046/"
            +>  bootkit,
                systemFirmware      

        # encryptSensitiveInformation
            info: "https://attack.mitre.org/mitigations/M1041/"
            +>  emailStorageCollection,
                outlookEmailCollection

        # disableOrRemoveFeatureOrProgram
            info: "https://attack.mitre.org/mitigations/M1042/"
            +>  cmstp,
                distributedComponentObjectModel,
                installUtil,
                lLMNR_NBT_NS_PoisoningAndRelay,
                officeApplicationStartup,
                powerShell,
                registryKeysEnabled,
                templateInjection,
                trustedDeveloperUtilities

        # filterNetworkTraffic // Use host-based security software to block LLMNR/NetBIOS traffic.
            info: "https://attack.mitre.org/mitigations/M1037/"   
            ->  lLMNR_NBT_NS_PoisoningAndRelay

        # updateSoftware
            info: "https://attack.mitre.org/mitigations/M1051/" 
            +>  appInitDLLs,
                _applicationShimming,
                officeApplicationStartup
        
        # userAccountControl
            info: "https://attack.mitre.org/mitigations/M1052/"
            +>  _applicationShimming, 
                bypassUserAccountControl,
                _fileSystemPermissionsWeakness 
            
        | videoCollection
            -> computer.collectVideo

        | virtualizationOrSandboxEvasion
            info: "Adversaries may check for the presence of a virtual machine environment (VME) or sandbox to avoid potential detection of tools and activities."
            ->  bypassAntivirus,
                bypassHostForensicAnalysis,    
                bypassSignatureBasedDetection,  
                bypassStaticFileAnalysis          

        & scheduledTask
            info: "An adversary may use task scheduling to execute programs at system startup or on a scheduled basis for persistence, to conduct remote Execution as part of Lateral Movement, to gain SYSTEM privileges, or to run a process under the context of a specified account."
            //->  program execution attacks, scheduled persistance attacks, remote execution, gain system privilege, run process under context of specified account

        & systemTimeDiscovery
            info: "The information could be useful for performing other techniques, such as executing a file with a Scheduled Task [3], or to discover locality information based on time zone to assist in victim targeting."
            ->  scheduledTask   
    }

    asset Linux extends OS {
        & bootkit
            ->  persistance

        # bootIntegrity 
            info: "https://attack.mitre.org/mitigations/M1046/"
            +>  bootkit

        & clearCommandHistory
            ->  _clearCommandHistory       

        & _clearCommandHistory
            ->  bypassLogAnalysis, 
                bypassHostForensicAnalysis

        | spaceAfterFileName
            ->  employee.userExecution
        
        //# fileMonitoring  This type of attack technique cannot be easily mitigated with preventive controls since it is based on the abuse of system features.
           // -> spaceAfterFileName,
           //    source

        | infectedOS
            +>  bashHistory

        | bash_profileAndBashrc
            -> _bash_profileAndBashrc

        & _bash_profileAndBashrc 
            ->  persistence

        & bashHistory 
            ->  indicatorRemovalOnHost,
                linuxAdministrator.adminCredentials,
                linuxUser.userCredentials

        & kernelModulesAndExtensions
            info: "Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses."
            ->  rootkit        

        & localJobScheduling
            info: "An adversary may use job scheduling to execute programs at system startup or on a scheduled basis for Persistence, to conduct Execution as part of Lateral Movement, to gain root privileges, or to run a process under the context of a specific account."
            ->  persistence,
                root.rootRights

        & portKnocking
            info: "This technique has been observed to both for the dynamic opening of a listening port as well as the initiating of a connection to a listening server on a different system."
            ->  bypassDefensiveNetworkServiceScanning

        | source
            info:"The source command loads functions into the current shell or executes files in the current context."
            ->  executeCode

        | executeCode 
            +>  computer.infectedLinuxComputer   

        | sudo
            ->  _sudo

        & _sudo
            info: "Adversaries can take advantage of these configurations to execute commands as other users or spawn processes with higher privileges."
            ->  service.exploitationForPrivilegeEscalation

        | sudoCaching
            ->  _sudoCaching

        & _sudoCaching
            info: "Adversaries can abuse poor configurations of this to escalate privileges without needing the user's password."
            ->  service.exploitationForPrivilegeEscalation    

        # antivirus
            info: "https://attack.mitre.org/mitigations/M1049/"
            +>  kernelModulesAndExtensions

        # executionPrevention
            +>  kernelModulesAndExtensions

        # environmentVariablePermissions // Prevent modification of environment variables by unauthorized users and groups.
            info: "https://attack.mitre.org/mitigations/M1039/"
            ->  _clearCommandHistory               

        # operatingSystemConfiguration
            info: "https://attack.mitre.org/mitigations/M1028/" 
            +>  bashHistory

        # privilegedAccountManagement
            info: "https://attack.mitre.org/mitigations/M1026/"
            +>  bootkit   

        # restrictFileAndDirectoryPermissions
            info: "https://attack.mitre.org/mitigations/M1022/"
            +>  _bash_profileAndBashrc       
    }

    asset MacOS extends OS {
        & bashHistory 
            ->  indicatorRemovalOnHost,
                macosAdministrator.adminCredentials,
                macOSUser.userCredentials

        | bash_profileAndBashrc
            ->  _bash_profileAndBashrc

        & _bash_profileAndBashrc 
            ->  persistence

        | codeSigning
            info: "Adversaries are known to use code signing certificates to masquerade malware and tools as legitimate binaries. Code signing certificates may be used to bypass security policies that require signed code to execute on a system."

        & clearCommandHistory
            ->  _clearCommandHistory  

        & _clearCommandHistory
            ->  bypassLogAnalysis, 
                bypassHostForensicAnalysis

        | dylibHijacking   
            ->  _dylibHijacking 

        & _dylibHijacking 
            info: "Adversaries can take advantage of ambiguous paths to plant dylibs to gain privilege escalation or persistence."
            ->  service.exploitationForPrivilegeEscalation // leads to Exploitation for Privilege Escalation attack

        | executeCode 
            +>  computer.infectedMacOSComputer   

        | infectedOS
            +>  bashHistory

        & inputPrompt
            info: "Adversaries may mimic this functionality to prompt users for credentials with a seemingly legitimate prompt for a number of reasons that mimic normal usage."
            ->  appleScript, // leads to AppleScript attack
                user.userCredentials

        & kernelModulesAndExtensions
            info: "Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses."
            ->  rootkit  

        & launchctl
            info: "Adversaries can abuse this functionality to execute code or even bypass whitelisting if launchctl is an allowed process."
            ->  executeCode,
                bypassApplicationWhitelisting,
                bypassProcessWhitelisting,
                bypassFileOrPathWhitelisting  

        & launchDaemon
            info: "Launch Daemons may be created with administrator privileges, but are executed under root privileges, so an adversary may also use a service to escalate privileges from administrator to root. Adversary can modify a current Launch Daemon’s executable and gain persistence or Privilege Escalation."
            ->  persistence,
                service.exploitationForPrivilegeEscalation         

        & lC_LOAD_DYLIB_Addition
            info: "Adversaries can remediate the issue that any changes will invalidate digital signatures on binaries because the binary is being modified by simply removing the LC_CODE_SIGNATURE command from the binary so that the signature isn’t checked at load time."
            ->  persistence

        & lC_MAINHijacking
            info: "LC_MAIN that points to the binary’s entry point for execution and can be hijacked so that initial execution flows to a malicious addition. By modifying a binary in this way, application whitelisting can be bypassed because the file name or application path is still the same."
            ->  bypassApplicationWhitelisting,
                bypassProcessWhitelisting,
                bypassFileOrPathWhitelisting 

        & localJobScheduling
            info: "An adversary may use job scheduling to execute programs at system startup or on a scheduled basis for Persistence,  to conduct Execution as part of Lateral Movement, to gain root privileges, or to run a process under the context of a specific account."
            ->  persistence,
                root.rootRights

        & loginItem
            info: "If an adversary can register their own login item or modified an existing one, then they can use it to execute their code for a persistence mechanism each time the user logs in."
            ->  persistence      

        & logonScripts
            ->  rootMac.rootRights  

        & plistModification
            info: "Adversaries can modify these plist files to point to their own code, can use them to execute their code in the context of another user, bypass whitelisting procedures, or even use them as a persistence mechanism."
            ->  bypassApplicationWhitelisting,
                bypassProcessWhitelisting,
                bypassFileOrPathWhitelisting,
                executeCode,
                persistence

        & portKnocking
            info: "This technique has been observed to both for the dynamic opening of a listening port as well as the initiating of a connection to a listening server on a different system."
            ->  bypassDefensiveNetworkServiceScanning

        | source
            ->  executeCode

        | sudo
            ->  _sudo
            
        & _sudo
            info: "Adversaries can take advantage of these configurations to execute commands as other users or spawn processes with higher privileges."
            ->  service.exploitationForPrivilegeEscalation  

        | sudoCaching
            ->  _sudoCaching
            
        & _sudoCaching
            info: "Adversaries can abuse poor configurations of this to escalate privileges without needing the user's password."
            ->  service.exploitationForPrivilegeEscalation   

        | videoCollection
            ->  computer.collectVideo        

        | spaceAfterFileName
            ->  employee.userExecution
        
        //# fileMonitoring  This type of attack technique cannot be easily mitigated with preventive controls since it is based on the abuse of system features.
           // -> spaceAfterFileName

        & networkShareDiscovery
            ->  internalNetwork.networkShareDiscovery

        & userSecuritySoftwareDiscovery
            info: "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on the system. This may include things such as local firewall rules and anti-virus. These checks may be built into early-stage remote access tools."
            ->  service.exploitationForDefenseEvasion // leads to exploitation for defense evasion attack

        & adminSecuritySoftwareDiscovery
            -> service.exploitationForDefenseEvasion // leads to exploitation for defense evasion attack

        | windowsManagementInstrumentation
            ->  scripting  

        & keychainCollection
            info: "If an adversary knows the credentials for the login keychain, then they can get access to all the other credentials stored in this vault."
            ->  user.userCredentials

        & appleScript
            ->  runCode

        | runCode
            +>  computer.infectedMacOSComputer

        & startupItems
            ->  _startupItems

        & _startupItems
            info: "An adversary can create the appropriate folders/files in the StartupItems directory to register their own persistence mechanism."
            ->  persistence,
                service.exploitationForPrivilegeEscalation // leads to Exploitation for Privilege Escalation attack 

        # antivirus
            info: "https://attack.mitre.org/mitigations/M1049/"
            +>  kernelModulesAndExtensions

        # audit 
            info: "https://attack.mitre.org/mitigations/M1047/"
            +>  lC_LOAD_DYLIB_Addition

        # codeSigning
            info: "https://attack.mitre.org/mitigations/M1045/"  
            +>  appleScript,
                lC_LOAD_DYLIB_Addition,
                lC_MAINHijacking

        # executionPrevention
            +>  adminSecuritySoftwareDiscovery,
                kernelModulesAndExtensions,
                lC_LOAD_DYLIB_Addition,
                networkShareDiscovery,
                userSecuritySoftwareDiscovery            

        # environmentVariablePermissions // Prevent modification of environment variables by unauthorized users and groups.
            info: "https://attack.mitre.org/mitigations/M1039/"
            ->  _clearCommandHistory

        //# fileMonitoring  This type of attack technique cannot be easily mitigated with preventive controls since it is based on the abuse of system features.
           // -> source     

        # operatingSystemConfiguration
            info: "https://attack.mitre.org/mitigations/M1028/" 
            +>  bashHistory

        # passwordPolicies // Set and enforce secure password policies for accounts 
            info: "https://attack.mitre.org/mitigations/M1027/"
            +>  keychainCollection

        # restrictFileAndDirectoryPermissions
            info: "https://attack.mitre.org/mitigations/M1022/"
            +>  _bash_profileAndBashrc,
                _dylibHijacking,
                logonScripts,
                plistModification,
                _startupItems
    }    
}

category Network {
    asset Browser {
        | maliciousWebsite
            ->  checkPlugin,
                checkBrowser

        & checkBrowser
            ->  os.codeDelivered

        & checkPlugin
            ->  os.codeDelivered

        | maliciousAds
            ->  compromisedBrowser

        & compromisedBrowser
            ->  os.codeDelivered
        
        & spearphishingLink
            ->  os.spearphishingLinkDownload

        & spearphishingAttachment
            ->  os.spearphishingAttachmentDownload,
                windows.controlPanelItems // malicious Control Panel items can be delivered via Spearphishing Attachment campaigns

        # restrictWebBasedContent // Block unknown or unused attachments by default that should not be transmitted over email.
          info: "https://attack.mitre.org/mitigations/M1021/"
            ->  spearphishingAttachment, 
                spearphishingLink,
                checkBrowser,
                checkPlugin,
                os.domainGenerationAlgorithms,
                windows.compiledHTMLFile,
                externalNetwork.webService

        | browserBookmark
            ->  browserBookmarkDiscovery

        | browserBookmarkDiscovery 
            ->  user.userInformation,
                internalNetwork.internalNetworkResourcesInformation

        | installExtensions
            ->  runExtensions

        & runExtensions
            ->  os.persistence
    }

    asset InternalNetwork {
        | obfuscateNetworkTraffic

        # sSLOrTLSInspection
            info: "https://attack.mitre.org/mitigations/M1020/"
            ->  obfuscateNetworkTraffic,
                os.standardCryptographicProtocol

        & applicationLayerConnexion
            ->  c2Connexion,
                bypassNetworkIntrusionDetection,
                externalNetwork.bypassNetworkIntrusionDetection

        & dataExfiltration
            ->  externalNetwork.dataExfiltrated
        
        E firewallExists
            <-  firewall
            ->  firewall._bypassFirewall
               
        | bypassAccessControl

        | bypassFirewall

        | bypassNetworkIntrusionDetection 

        | bypassProxies

        & usertransmittedDataManipulation
            info:"By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making. "

        & admintransmittedDataManipulation
            info:"By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making. "

        # encryptSensitiveInformation
            info:"https://attack.mitre.org/mitigations/M1041/"   
            ->  usertransmittedDataManipulation,
                admintransmittedDataManipulation,
                exchangeServerCollection

        # executionPrevention             
            info: "https://attack.mitre.org/mitigations/M1038/"
            ->  os.networkServiceScan

        # filterNetworkTraffic
            info: "https://attack.mitre.org/mitigations/M1037/"   
            ->  os.customCommandAndControlProtocol,
                os.endpointDenialOfService,
                os.standardNonApplicationLayerProtocol,
                windows._bITSJobs 

        & c2Connexion
            ->  c2Server.c2Connected

        & exchangeServerCollection
            info: "Adversaries may leverage a user's credentials and interact directly with the Exchange server to acquire information from within a network."
            ->  os.dataCollected

        # multiFactorAuthentication
            info: "https://attack.mitre.org/mitigations/M1032/"
            ->  exchangeServerCollection

        | networkShareDiscovery
            info: "Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network. "
        
        | internalNetworkResourcesInformation

        | remoteSystemsConnection

        # networkIntrusionPrevention
            info: "https://attack.mitre.org/mitigations/M1031/"
            ->  applicationLayerConnexion,
                c2Connexion,
                dataExfiltration,
                os.commonlyUsedPortsConnection,
                os.connectionProxy,
                os.customCommandAndControlProtocol,
                os.customCryptographicProtocol,
                os.dataCompressed,
                os._dataEncoding,
                os.downloadRemoteFile,
                os.fallbackChannels,
                os.networkServiceScan,
                os.standardCryptographicProtocol,
                os.standardNonApplicationLayerProtocol,
                os.uploadRemoteFile,
                windows.templateInjection,
                c2Server.dataExfiltrated,
                c2Server._obfuscatedData,
                c2Server.dataExfiltrated,
                c2Server.generateDomainNames

        # networkSegmentation
            info: "https://attack.mitre.org/mitigations/M1030/"
            ->  remoteAccess,
                administrator.createUserAccount,
                os.commonlyUsedPortsConnection,
                os.customCommandAndControlProtocol,
                os.standardNonApplicationLayerProtocol,
                windows.domainTrustDiscovery,
                service.exploitationOfRemoteServices

        # vulnerabilityScanning // Regularly scan the internal network for available services to identify new and potentially vulnerable services.
            info: "https://attack.mitre.org/mitigations/M1016/"
            ->  service.exploitationOfRemoteServices      

        | connectedToNetwork
            ->  networkSharedDrive.connectToDrive

        | remoteAccess
    }

    asset ExternalNetwork {
        | obfuscateNetworkTraffic

        | bypassFirewall

        | bypassNetworkIntrusionDetection

        | dataExfiltrated

        & webService
            info: "Adversaries may use an existing, legitimate external Web service as a means for relaying commands to a compromised system."
            ->  os.bypassBinaryAnalysis,
                os.bypassLogAnalysis,
                internalNetwork.bypassFirewall,
                bypassFirewall,
                c2Server.c2Connected   

        # filterNetworkTraffic // Modify network and/or host firewall rules, as well as other network controls, to only allow legitimate BITS traffic.
            info: "https://attack.mitre.org/mitigations/M1037/"   
            ->  os.endpointDenialOfService,
                os.standardNonApplicationLayerProtocol,
                windows._bITSJobs  

        # networkIntrusionPrevention
            info: "https://attack.mitre.org/mitigations/M1031/"
            ->  webService,
                c2Server.obfuscatedData,
                c2Server.generateDomainNames,
                os.connectionProxy,
                os._dataEncoding,
                os.fallbackChannels,
                os.standardCryptographicProtocol,
                os.standardNonApplicationLayerProtocol

        # networkSegmentation // Segment networks and systems appropriately to reduce access to critical systems and services to controlled methods.
            info: "https://attack.mitre.org/mitigations/M1030/"
            ->  service.exploitationOfRemoteServices,
                os.standardNonApplicationLayerProtocol          

        # sSLOrTLSInspection
            info: "https://attack.mitre.org/mitigations/M1020/"
            ->  obfuscateNetworkTraffic,
                os.standardCryptographicProtocol
    }

    asset Firewall {
        & _bypassFirewall
            ->  internalNetwork.dataExfiltration,
                internalNetwork.c2Connexion

        # filterNetworkTraffic // Modify network and/or host firewall rules, as well as other network controls, to only allow legitimate BITS traffic.
            info: "https://attack.mitre.org/mitigations/M1037/"   
            ->  windows._bITSJobs,
                linux.portKnocking,
                macOS.portKnocking

        # networkSegmentation // Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports for that particular network segment.
            info: "https://attack.mitre.org/mitigations/M1030/"
            ->  computer.uncommonlyUsedPortsConnection,
                windows.distributedComponentObjectModel
        
        | bypassFirewall
    }

    asset NetworkSharedDrive {
        | data
            ->  c2Server.obfuscatedData
            
        | connectToDrive
            ->  data
    }
}

category Hardware {
    asset Computer {
        | infectedComputer
            ->  removableMedia.infectedMedia,
                internalNetwork.applicationLayerConnexion,
                uncommonlyUsedPortsConnection,
                removableMedia.dataFromRemovableMedia

        | infectedWindowsComputer
            ->  windows.dynamicDataExchange

        | infectedLinuxComputer

        | infectedMacOSComputer

        & commonlyUsedPortsConnection
            ->  internalNetwork.c2Connexion,
                firewall.bypassFirewall,
                externalNetwork.bypassNetworkIntrusionDetection,
                internalNetwork.bypassNetworkIntrusionDetection

        & uncommonlyUsedPortsConnection
            ->  internalNetwork.c2Connexion,
                firewall.bypassFirewall,
                internalNetwork.bypassProxies       

        | exfiltrationOverPhysicalMedium
            ->  removableMedia.dataExfiltrated

        E microphoneExists
            <-  microphone
            ->  microphone.collectAudio

        & collectAudio
            ->  os.dataCollected
        
        | peripheralDeviceDiscovery
            info: "Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system. The information may be used to enhance their awareness of the system and network environment or may be used for further actions."

        E webcamExists
            <-  webcam
            ->  webcam.collectVideo

        E videoCallApplicationExists
            <-  videoCallApplication
            ->  videoCallApplication.collectVideo

        | collectVideo
            ->  _collectVideo

        & _collectVideo
            ->  os.dataCollected
    }

    asset Webcam {
        | collectVideo
            ->  computer._collectVideo
    }

    asset C2Server {
        | c2Connected 
            ->  communicate,
                obfuscatedData,
                packetCapture

        | communicate 

        & dataExfiltrated

        | generateDomainNames 

        | obfuscatedData
            ->  _obfuscatedData

        & _obfuscatedData
            ->  externalNetwork.bypassNetworkIntrusionDetection,
                internalNetwork.bypassNetworkIntrusionDetection,
                bypassNetworkIntrusionDetection

        | packetCapture

        | bypassNetworkIntrusionDetection

    }

    asset RemovableMedia {
        | dataFromRemovableMedia
            ->  sensitiveDataCollected

        | infectedMedia
            ->  employee.insertMedia,
                os.replicationThroughRemovableMedia

        & dataExfiltrated

        | sensitiveDataCollected
    }
    
    asset Microphone {
        | collectAudio
            ->  computer.collectAudio
    }
}

associations {    
    
    Adversary [adversary] 1 <--Attack--> 1-* [employee] Employee 
    Adversary [adversary] 1 <--Attack--> 1-* [browser] Browser 
    Adversary [adversary] 1 <--Attack--> 1-* [os] OS 
    Adversary [adversary] 1 <--Attack--> 1 [windows] Windows 

    User [user] 1 <--Ui--> 1-* [os] OS
    User [windowsUser] 1 <--Ui--> 1-* [windows] Windows
    User [linuxUser] 1 <--Ui--> 1-* [linux] Linux   
    User [macOSUser] 1 <--Ui--> 1-* [macOS] MacOS
    User [user] 1 <--Use--> 1-* [computer] Computer
    User [user] 1 <--Use--> 1-* [service] Service
    User [user] 1 <--Use--> 1-* [thirdpartySoftware] ThirdpartySoftware
    User [user] 1 <--Use--> 1-* [internalNetwork] InternalNetwork
    User [user] 1 <--Use--> 1-* [externalNetwork] ExternalNetwork

    Administrator [administrator] 1 <--Manage--> 1-* [user] User
    Administrator [administrator] 1 <--Ui--> 1-* [os] OS
    Administrator [windowsAdministrator] 1 <--Ui--> 1-* [windows] Windows 
    Administrator [linuxAdministrator] 1 <--Ui--> 1-* [linux] Linux
    Administrator [macosAdministrator] 1 <--Ui--> 1-* [macOS] MacOS
    Administrator [administrator] 1 <--Use--> 1-* [computer] Computer
    Administrator [administrator] 1 <--Use--> 1-* [service] Service
    Administrator [administrator] 1 <--Use--> 1-* [thirdpartySoftware] ThirdpartySoftware
    
    WindowsAdmin [windowsAdmin] 1-* <--Ui--> 1 [windowsWindowsAdmin] Windows    

    Root [root] 1 <--Ui--> 1-* [os] OS
    Root [rootLinux] 1 <--Ui--> 1-* [linux] Linux
    Root [rootMac] 1 <--Ui--> 1-* [macOS] MacOS

    SYSTEM [system] 1 <--Ui--> 1 [os] OS 
    SYSTEM [systemWindows] 1 <--Ui--> 1-* [windows] Windows
    SYSTEM [system] 1 <--Use--> 1-* [service] Service
    SYSTEM [system] 1 <--Use--> 1-* [thirdpartySoftware] ThirdpartySoftware

    Employee [employee] 1 <--Use--> 1-* [browser] Browser
    Employee [employee] 1 <--Use--> 1-* [computer] Computer
    Employee [employee] 1 <--Use--> 1-* [user] User
    Employee [employee] 1 <--Ui--> 1-* [os] OS
    Employee [employee] 1 <--Ui--> 1-* [windows] Windows
    Employee [employee] 1 <--Ui--> 1-* [macOS] MacOS
    Employee [employee] 1 <--Ui--> 1-* [linux] Linux
    Employee [employee] 1 <--Use--> 1-* [thirdpartySoftware] ThirdpartySoftware
    Employee [employee] 1 <--Use--> 1-* [removableMedia] RemovableMedia

    Computer [computer] 1 <--Use--> 1-* [removableMedia] RemovableMedia
    Computer [computer] 1 <--Control--> 1 [c2Server] C2Server

    Browser [browser] 1-* <--Software--> 1 [os] OS
    Browser [browser] 1-* <--Software--> 1 [windows] Windows
    Browser [browser] 1-* <--Use--> 1-* [user] User
    Browser [browser] 1-* <--Connect--> 1-* [internalNetwork] InternalNetwork
    Browser [browser] 1-* <--Connect--> 1-* [externalNetwork] ExternalNetwork 
    
    OS [os] 1 <--System--> 1-* [computer] Computer
    OS [os] 1-* <--Connect--> 1-* [c2Server] C2Server
    OS [os] 1 <--Contain--> 1 [windows] Windows
    OS [os] 1 <--Contain--> 1 [linux] Linux  
    OS [os] 1 <--Contain--> 1 [macOS] MacOS
    OS [os] 1 <--Use--> 1-* [removableMedia] RemovableMedia
    OS [os] 1 <--Contain--> 1-* [service] Service
    OS [os] 1 <--Contain--> 1-* [thirdpartySoftware] ThirdpartySoftware  

    Windows [windows] 1 <--Contain--> 1-* [service] Service
    MacOS [macOS] 1 <--Contain--> 1-* [service] Service

    Service [service] 1-* <--Contain--> 1-* [thirdpartySoftware] ThirdpartySoftware
    Service [service] 1-* <--Connect--> 1 [c2Server] C2Server
    
    //Computer [computer] 1 <--Software--> 1 [macOS] MacOS
    Computer [computerWindows] 1 <--Software--> 1 [windows] Windows
    //Computer [computer] 1 <--Software--> 1 [linux] Linux
    
    ExternalNetwork [externalNetwork] 1 <--Connect--> 1 [c2Server] C2Server
    ExternalNetwork [externalNetwork] 1-* <--Connect--> 1-* [computer] Computer
    ExternalNetwork [externalNetwork] 1-* <--Connect--> 1-* [os] OS
    ExternalNetwork [externalNetworkWindows] 1-* <--Connect--> 1 [windows] Windows
    ExternalNetwork [externalNetwork] 1 <--Contain--> 1-* [service] Service
    InternalNetwork [internalNetwork] 1-* <--Connect--> 1-* [externalNetwork] ExternalNetwork   
    InternalNetwork [internalNetwork] 1 <--Contain--> 1 [c2Server] C2Server
    InternalNetwork [internalNetwork] 1-* <--Connect--> 1-* [os] OS
    InternalNetwork [internalNetworkWindows] 1 <--Connect--> 1 [windows] Windows
    InternalNetwork [internalNetwork] 1-* <--Use--> 1 [administrator] Administrator
    InternalNetwork [internalNetwork] 1 <--Contain--> 1-* [computer] Computer
    //InternalNetwork [internalNetwork] 1 <--Contain--> 1-* [macOS] MacOS
    InternalNetwork [internalNetwork] 1 <--Contain--> 1-* [service] Service
    InternalNetwork [internalNetwork] 1 <--Contain--> 1-* [networkSharedDrive] NetworkSharedDrive      
    NetworkSharedDrive [networkSharedDrive] 1-* <--Ui--> 1-* [c2Server] C2Server

    Firewall [firewall] 0-1 <--Protect--> 1-* [windows] Windows 
    Firewall [firewall] 0-1 <--Protect--> 1-* [linux] Linux   
    Firewall [firewall] 0-1 <--Protect--> 1-* [macOS] MacOS 
    
    InternalNetwork [internalNetwork] 1 <--Protect--> 0-1 [firewall] Firewall
    ExternalNetwork [externalNetwork] 1 <--Protect--> 0-1 [firewall] Firewall

    //Firewall [firewall] 0-1 <--Protect--> 1-* [thirdpartySoftware] ThirdpartySoftware
    Computer [computer] 1-* <--Protect--> 0-1 [firewall] Firewall
    Computer [computer] 1 <--Use--> 1 [microphone] Microphone
    VideoCallApplication [videoCallApplication] 1-* <--Software--> 1 [computer] Computer
    Webcam [webcam] 1 <--Hardware--> 1 [computer] Computer
}
